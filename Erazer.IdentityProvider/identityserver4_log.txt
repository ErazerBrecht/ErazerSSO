2020-01-08 17:12:21.341 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-08 17:12:21.474 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-08 17:12:21.479 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-08 17:12:21.479 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-08 17:12:21.480 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-08 17:12:21.480 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-08 17:12:37.117 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4200
2020-01-08 17:12:37.123 +01:00 [DBG] Client list checked and origin: http://localhost:4200 is not allowed
2020-01-08 17:12:37.124 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4200
2020-01-08 17:12:37.161 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-08 17:12:37.169 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-08 17:12:37.170 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-08 17:12:37.174 +01:00 [DBG] Start token request.
2020-01-08 17:12:37.176 +01:00 [DBG] Start client validation
2020-01-08 17:12:37.179 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-08 17:12:37.181 +01:00 [DBG] Start parsing for secret in post body
2020-01-08 17:12:37.202 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-08 17:12:37.202 +01:00 [DBG] Secret id found: nodejs_dev
2020-01-08 17:12:37.209 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-08 17:12:37.209 +01:00 [DBG] Client validation success
2020-01-08 17:12:37.277 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSKAM9TTM61:00000001",
  "TimeStamp": "2020-01-08T16:12:37Z",
  "ProcessId": 1508,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 17:12:37.285 +01:00 [DBG] Start token request validation
2020-01-08 17:12:37.294 +01:00 [DBG] Start resource owner password token request validation
2020-01-08 17:12:37.332 +01:00 [DBG] IsActive called from: ResourceOwnerValidation
2020-01-08 17:12:37.339 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSKAM9TTM61:00000001",
  "TimeStamp": "2020-01-08T16:12:37Z",
  "ProcessId": 1508,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 17:12:37.340 +01:00 [DBG] Resource owner password token request validation success.
2020-01-08 17:12:37.373 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs_dev",
  "ClientName": "ErazerSSO nodejs_dev",
  "GrantType": "password",
  "Scopes": "api1 openid profile",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "nodejs_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-08 17:12:37.386 +01:00 [DBG] Getting claims for access token for client: nodejs_dev
2020-01-08 17:12:37.387 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-08 17:12:37.394 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO nodejs_dev with claim types [] via ClaimsProviderAccessToken
2020-01-08 17:12:37.400 +01:00 [DBG] Issued claims: []
2020-01-08 17:12:37.477 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs_dev",
  "ClientName": "ErazerSSO nodejs_dev",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api1",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****ZnKQ"
    }
  ],
  "ActivityId": "0HLSKAM9TTM61:00000001",
  "TimeStamp": "2020-01-08T16:12:37Z",
  "ProcessId": 1508,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 17:12:37.478 +01:00 [DBG] Token request success.
2020-01-08 17:12:37.853 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-08 17:12:37.855 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-08 17:12:37.857 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-08 17:12:37.861 +01:00 [DBG] Start discovery request
2020-01-08 17:12:38.020 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-08 17:12:38.021 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-08 17:12:38.022 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-08 17:12:38.023 +01:00 [DBG] Start key discovery request
2020-01-08 19:52:40.711 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-08 19:52:40.785 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-08 19:52:40.786 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-08 19:52:40.787 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-08 19:52:40.787 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-08 19:52:40.787 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-08 19:52:41.210 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4200
2020-01-08 19:52:41.215 +01:00 [DBG] Client list checked and origin: http://localhost:4200 is not allowed
2020-01-08 19:52:41.216 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4200
2020-01-08 19:52:41.259 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-08 19:52:41.268 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-08 19:52:41.269 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-08 19:52:41.273 +01:00 [DBG] Start token request.
2020-01-08 19:52:41.276 +01:00 [DBG] Start client validation
2020-01-08 19:52:41.280 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-08 19:52:41.283 +01:00 [DBG] Start parsing for secret in post body
2020-01-08 19:52:41.299 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-08 19:52:41.299 +01:00 [DBG] Secret id found: nodejs_dev
2020-01-08 19:52:41.307 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-08 19:52:41.307 +01:00 [DBG] Client validation success
2020-01-08 19:52:41.394 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSKDFO5IAHT:00000002",
  "TimeStamp": "2020-01-08T18:52:41Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 19:52:41.400 +01:00 [DBG] Start token request validation
2020-01-08 19:52:41.407 +01:00 [DBG] Start resource owner password token request validation
2020-01-08 19:52:41.435 +01:00 [DBG] IsActive called from: ResourceOwnerValidation
2020-01-08 19:52:41.441 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSKDFO5IAHT:00000002",
  "TimeStamp": "2020-01-08T18:52:41Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 19:52:41.442 +01:00 [DBG] Resource owner password token request validation success.
2020-01-08 19:52:41.461 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs_dev",
  "ClientName": "ErazerSSO nodejs_dev",
  "GrantType": "password",
  "Scopes": "api1 openid profile",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "nodejs_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-08 19:52:41.476 +01:00 [DBG] Getting claims for access token for client: nodejs_dev
2020-01-08 19:52:41.477 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-08 19:52:41.482 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO nodejs_dev with claim types [] via ClaimsProviderAccessToken
2020-01-08 19:52:41.485 +01:00 [DBG] Issued claims: []
2020-01-08 19:52:41.558 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs_dev",
  "ClientName": "ErazerSSO nodejs_dev",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api1",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****NzmA"
    }
  ],
  "ActivityId": "0HLSKDFO5IAHT:00000002",
  "TimeStamp": "2020-01-08T18:52:41Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 19:52:41.561 +01:00 [DBG] Token request success.
2020-01-08 19:52:41.843 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-08 19:52:41.847 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-08 19:52:41.848 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-08 19:52:41.850 +01:00 [DBG] Start discovery request
2020-01-08 19:52:41.974 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-08 19:52:41.975 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-08 19:52:41.975 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-08 19:52:41.977 +01:00 [DBG] Start key discovery request
2020-01-08 19:52:45.221 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4200
2020-01-08 19:52:45.222 +01:00 [DBG] Client list checked and origin: http://localhost:4200 is not allowed
2020-01-08 19:52:45.223 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4200
2020-01-08 19:52:45.224 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-08 19:52:45.225 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-08 19:52:45.225 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-08 19:52:45.227 +01:00 [DBG] Start token request.
2020-01-08 19:52:45.227 +01:00 [DBG] Start client validation
2020-01-08 19:52:45.228 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-08 19:52:45.228 +01:00 [DBG] Start parsing for secret in post body
2020-01-08 19:52:45.229 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-08 19:52:45.229 +01:00 [DBG] Secret id found: nodejs_dev
2020-01-08 19:52:45.230 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-08 19:52:45.231 +01:00 [DBG] Client validation success
2020-01-08 19:52:45.233 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSKDFO5IAHT:00000003",
  "TimeStamp": "2020-01-08T18:52:45Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 19:52:45.234 +01:00 [DBG] Start token request validation
2020-01-08 19:52:45.235 +01:00 [DBG] Start resource owner password token request validation
2020-01-08 19:52:45.235 +01:00 [DBG] IsActive called from: ResourceOwnerValidation
2020-01-08 19:52:45.236 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSKDFO5IAHT:00000003",
  "TimeStamp": "2020-01-08T18:52:45Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 19:52:45.236 +01:00 [DBG] Resource owner password token request validation success.
2020-01-08 19:52:45.237 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs_dev",
  "ClientName": "ErazerSSO nodejs_dev",
  "GrantType": "password",
  "Scopes": "api1 openid profile",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "nodejs_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-08 19:52:45.238 +01:00 [DBG] Getting claims for access token for client: nodejs_dev
2020-01-08 19:52:45.238 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-08 19:52:45.238 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO nodejs_dev with claim types [] via ClaimsProviderAccessToken
2020-01-08 19:52:45.239 +01:00 [DBG] Issued claims: []
2020-01-08 19:52:45.242 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs_dev",
  "ClientName": "ErazerSSO nodejs_dev",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api1",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****DGHg"
    }
  ],
  "ActivityId": "0HLSKDFO5IAHT:00000003",
  "TimeStamp": "2020-01-08T18:52:45Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 19:52:45.243 +01:00 [DBG] Token request success.
2020-01-08 19:52:47.378 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4200
2020-01-08 19:52:47.379 +01:00 [DBG] Client list checked and origin: http://localhost:4200 is not allowed
2020-01-08 19:52:47.380 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4200
2020-01-08 19:52:47.380 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-08 19:52:47.381 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-08 19:52:47.382 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-08 19:52:47.382 +01:00 [DBG] Start token request.
2020-01-08 19:52:47.383 +01:00 [DBG] Start client validation
2020-01-08 19:52:47.383 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-08 19:52:47.384 +01:00 [DBG] Start parsing for secret in post body
2020-01-08 19:52:47.384 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-08 19:52:47.385 +01:00 [DBG] Secret id found: nodejs_dev
2020-01-08 19:52:47.386 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-08 19:52:47.387 +01:00 [DBG] Client validation success
2020-01-08 19:52:47.388 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSKDFO5IAHT:00000005",
  "TimeStamp": "2020-01-08T18:52:47Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 19:52:47.389 +01:00 [DBG] Start token request validation
2020-01-08 19:52:47.390 +01:00 [DBG] Start resource owner password token request validation
2020-01-08 19:52:47.390 +01:00 [DBG] IsActive called from: ResourceOwnerValidation
2020-01-08 19:52:47.391 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSKDFO5IAHT:00000005",
  "TimeStamp": "2020-01-08T18:52:47Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 19:52:47.391 +01:00 [DBG] Resource owner password token request validation success.
2020-01-08 19:52:47.392 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs_dev",
  "ClientName": "ErazerSSO nodejs_dev",
  "GrantType": "password",
  "Scopes": "api1 openid profile",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "nodejs_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-08 19:52:47.393 +01:00 [DBG] Getting claims for access token for client: nodejs_dev
2020-01-08 19:52:47.393 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-08 19:52:47.394 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO nodejs_dev with claim types [] via ClaimsProviderAccessToken
2020-01-08 19:52:47.394 +01:00 [DBG] Issued claims: []
2020-01-08 19:52:47.398 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs_dev",
  "ClientName": "ErazerSSO nodejs_dev",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api1",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****P13g"
    }
  ],
  "ActivityId": "0HLSKDFO5IAHT:00000005",
  "TimeStamp": "2020-01-08T18:52:47Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 19:52:47.399 +01:00 [DBG] Token request success.
2020-01-08 20:04:46.549 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-08 20:04:46.550 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-08 20:04:46.551 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-08 20:04:46.551 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-08 20:04:46.552 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-08 20:04:46.553 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-08 20:04:46.553 +01:00 [DBG] Start token request.
2020-01-08 20:04:46.554 +01:00 [DBG] Start client validation
2020-01-08 20:04:46.554 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-08 20:04:46.555 +01:00 [DBG] Start parsing for secret in post body
2020-01-08 20:04:46.555 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-08 20:04:46.555 +01:00 [DBG] Secret id found: nodejs_dev
2020-01-08 20:04:46.556 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-08 20:04:46.556 +01:00 [DBG] Client validation success
2020-01-08 20:04:46.557 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSKDFO5IAI0:00000001",
  "TimeStamp": "2020-01-08T19:04:46Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 20:04:46.558 +01:00 [DBG] Start token request validation
2020-01-08 20:04:46.558 +01:00 [DBG] Start resource owner password token request validation
2020-01-08 20:04:46.559 +01:00 [DBG] IsActive called from: ResourceOwnerValidation
2020-01-08 20:04:46.559 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSKDFO5IAI0:00000001",
  "TimeStamp": "2020-01-08T19:04:46Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 20:04:46.561 +01:00 [DBG] Resource owner password token request validation success.
2020-01-08 20:04:46.561 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs_dev",
  "ClientName": "ErazerSSO nodejs_dev",
  "GrantType": "password",
  "Scopes": "api1 openid profile",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "nodejs_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-08 20:04:46.562 +01:00 [DBG] Getting claims for access token for client: nodejs_dev
2020-01-08 20:04:46.562 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-08 20:04:46.563 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO nodejs_dev with claim types [] via ClaimsProviderAccessToken
2020-01-08 20:04:46.564 +01:00 [DBG] Issued claims: []
2020-01-08 20:04:46.568 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs_dev",
  "ClientName": "ErazerSSO nodejs_dev",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api1",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****-Fzg"
    }
  ],
  "ActivityId": "0HLSKDFO5IAI0:00000001",
  "TimeStamp": "2020-01-08T19:04:46Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 20:04:46.569 +01:00 [DBG] Token request success.
2020-01-08 20:04:50.189 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-08 20:04:50.189 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-08 20:04:50.192 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-08 20:04:50.192 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-08 20:04:50.195 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-08 20:04:50.197 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-08 20:04:50.199 +01:00 [DBG] Start token request.
2020-01-08 20:04:50.200 +01:00 [DBG] Start client validation
2020-01-08 20:04:50.201 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-08 20:04:50.202 +01:00 [DBG] Start parsing for secret in post body
2020-01-08 20:04:50.203 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-08 20:04:50.204 +01:00 [DBG] Secret id found: nodejs_dev
2020-01-08 20:04:50.205 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-08 20:04:50.206 +01:00 [DBG] Client validation success
2020-01-08 20:04:50.207 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSKDFO5IAI0:00000003",
  "TimeStamp": "2020-01-08T19:04:50Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 20:04:50.208 +01:00 [DBG] Start token request validation
2020-01-08 20:04:50.210 +01:00 [DBG] Start resource owner password token request validation
2020-01-08 20:04:50.211 +01:00 [DBG] IsActive called from: ResourceOwnerValidation
2020-01-08 20:04:50.212 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSKDFO5IAI0:00000003",
  "TimeStamp": "2020-01-08T19:04:50Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 20:04:50.215 +01:00 [DBG] Resource owner password token request validation success.
2020-01-08 20:04:50.217 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs_dev",
  "ClientName": "ErazerSSO nodejs_dev",
  "GrantType": "password",
  "Scopes": "api1 openid profile",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "nodejs_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-08 20:04:50.220 +01:00 [DBG] Getting claims for access token for client: nodejs_dev
2020-01-08 20:04:50.222 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-08 20:04:50.224 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO nodejs_dev with claim types [] via ClaimsProviderAccessToken
2020-01-08 20:04:50.226 +01:00 [DBG] Issued claims: []
2020-01-08 20:04:50.232 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs_dev",
  "ClientName": "ErazerSSO nodejs_dev",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api1",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****9jTw"
    }
  ],
  "ActivityId": "0HLSKDFO5IAI0:00000003",
  "TimeStamp": "2020-01-08T19:04:50Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 20:04:50.233 +01:00 [DBG] Token request success.
2020-01-08 20:04:52.222 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-08 20:04:52.223 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-08 20:04:52.224 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-08 20:04:52.224 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-08 20:04:52.225 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-08 20:04:52.226 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-08 20:04:52.227 +01:00 [DBG] Start token request.
2020-01-08 20:04:52.227 +01:00 [DBG] Start client validation
2020-01-08 20:04:52.228 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-08 20:04:52.228 +01:00 [DBG] Start parsing for secret in post body
2020-01-08 20:04:52.229 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-08 20:04:52.230 +01:00 [DBG] Secret id found: nodejs_dev
2020-01-08 20:04:52.231 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-08 20:04:52.231 +01:00 [DBG] Client validation success
2020-01-08 20:04:52.233 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSKDFO5IAI0:00000004",
  "TimeStamp": "2020-01-08T19:04:52Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 20:04:52.236 +01:00 [DBG] Start token request validation
2020-01-08 20:04:52.237 +01:00 [DBG] Start resource owner password token request validation
2020-01-08 20:04:52.238 +01:00 [DBG] IsActive called from: ResourceOwnerValidation
2020-01-08 20:04:52.238 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSKDFO5IAI0:00000004",
  "TimeStamp": "2020-01-08T19:04:52Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 20:04:52.239 +01:00 [DBG] Resource owner password token request validation success.
2020-01-08 20:04:52.239 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs_dev",
  "ClientName": "ErazerSSO nodejs_dev",
  "GrantType": "password",
  "Scopes": "api1 openid profile",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "nodejs_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-08 20:04:52.241 +01:00 [DBG] Getting claims for access token for client: nodejs_dev
2020-01-08 20:04:52.242 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-08 20:04:52.242 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO nodejs_dev with claim types [] via ClaimsProviderAccessToken
2020-01-08 20:04:52.243 +01:00 [DBG] Issued claims: []
2020-01-08 20:04:52.246 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs_dev",
  "ClientName": "ErazerSSO nodejs_dev",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api1",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****R9YA"
    }
  ],
  "ActivityId": "0HLSKDFO5IAI0:00000004",
  "TimeStamp": "2020-01-08T19:04:52Z",
  "ProcessId": 6204,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-08 20:04:52.247 +01:00 [DBG] Token request success.
2020-01-08 22:56:44.667 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-08 22:56:44.673 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-08 22:56:44.674 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-08 22:56:44.677 +01:00 [DBG] Start discovery request
2020-01-09 21:47:53.131 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-09 21:47:53.167 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-09 21:47:53.170 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-09 21:47:53.170 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-09 21:47:53.170 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-09 21:47:53.170 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-09 21:47:59.627 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-09 21:47:59.632 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-09 21:47:59.633 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-09 21:47:59.636 +01:00 [DBG] Start discovery request
2020-01-09 22:30:09.144 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-09 22:30:09.146 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-09 22:30:09.148 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-09 22:30:09.149 +01:00 [DBG] Start discovery request
2020-01-10 18:20:50.350 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-10 18:20:50.389 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-10 18:20:50.392 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-10 18:20:50.392 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-10 18:20:50.392 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-10 18:20:50.392 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-10 18:21:03.404 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-10 18:21:03.409 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-10 18:21:03.409 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-10 18:21:03.413 +01:00 [DBG] Start discovery request
2020-01-10 18:28:54.042 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-10 18:28:54.043 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-10 18:28:54.043 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-10 18:28:54.044 +01:00 [DBG] Start discovery request
2020-01-10 18:33:36.712 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-10 18:33:36.712 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-10 18:33:36.713 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-10 18:33:36.713 +01:00 [DBG] Start discovery request
2020-01-10 18:42:33.620 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-10 18:42:33.621 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-10 18:42:33.622 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-10 18:42:33.622 +01:00 [DBG] Start discovery request
2020-01-11 14:29:43.468 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-11 14:29:43.503 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-11 14:29:43.506 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-11 14:29:43.506 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-11 14:29:43.506 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-11 14:29:43.506 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-11 14:30:05.005 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-11 14:30:05.009 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-11 14:30:05.010 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-11 14:30:05.013 +01:00 [DBG] Start discovery request
2020-01-11 16:53:11.109 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-11 16:53:11.111 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-11 16:53:11.112 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-11 16:53:11.113 +01:00 [DBG] Start discovery request
2020-01-11 23:40:42.918 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-11 23:40:42.956 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-11 23:40:42.960 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-11 23:40:42.960 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-11 23:40:42.960 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-11 23:40:42.960 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-11 23:40:43.835 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-11 23:40:43.840 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-11 23:40:43.840 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-11 23:40:43.843 +01:00 [DBG] Start discovery request
2020-01-12 11:14:52.402 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-12 11:14:52.441 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-12 11:14:52.443 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-12 11:14:52.443 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-12 11:14:52.444 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-12 11:14:52.444 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-12 11:14:54.987 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 11:14:54.991 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 11:14:54.992 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 11:14:54.994 +01:00 [DBG] Start discovery request
2020-01-12 11:18:47.139 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 11:18:47.140 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 11:18:47.141 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 11:18:47.142 +01:00 [DBG] Start discovery request
2020-01-12 11:21:31.158 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 11:21:31.159 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 11:21:31.160 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 11:21:31.161 +01:00 [DBG] Start discovery request
2020-01-12 11:21:50.764 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 11:21:50.765 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 11:21:50.765 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 11:21:50.765 +01:00 [DBG] Start discovery request
2020-01-12 11:22:27.323 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 11:22:27.324 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 11:22:27.325 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 11:22:27.325 +01:00 [DBG] Start discovery request
2020-01-12 11:22:52.536 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 11:22:52.537 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 11:22:52.537 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 11:22:52.538 +01:00 [DBG] Start discovery request
2020-01-12 11:51:14.155 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 11:51:14.156 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 11:51:14.157 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 11:51:14.157 +01:00 [DBG] Start discovery request
2020-01-12 11:54:57.448 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 11:54:57.449 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 11:54:57.449 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 11:54:57.449 +01:00 [DBG] Start discovery request
2020-01-12 21:13:08.394 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-12 21:13:08.429 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-12 21:13:08.432 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-12 21:13:08.432 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-12 21:13:08.432 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-12 21:13:08.433 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-12 21:13:15.557 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:13:15.561 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:13:15.562 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:13:15.564 +01:00 [DBG] Start discovery request
2020-01-12 21:15:09.008 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:15:09.010 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:15:09.014 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:15:09.015 +01:00 [DBG] Start discovery request
2020-01-12 21:15:37.901 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:15:37.902 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:15:37.903 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:15:37.904 +01:00 [DBG] Start discovery request
2020-01-12 21:16:07.526 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:16:07.526 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:16:07.528 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:16:07.529 +01:00 [DBG] Start discovery request
2020-01-12 21:23:36.844 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:23:36.845 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:23:36.846 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:23:36.847 +01:00 [DBG] Start discovery request
2020-01-12 21:23:56.762 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:23:56.763 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:23:56.764 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:23:56.765 +01:00 [DBG] Start discovery request
2020-01-12 21:24:19.441 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:24:19.442 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:24:19.443 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:24:19.444 +01:00 [DBG] Start discovery request
2020-01-12 21:24:54.429 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:24:54.429 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:24:54.430 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:24:54.430 +01:00 [DBG] Start discovery request
2020-01-12 21:25:32.573 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:25:32.573 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:25:32.574 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:25:32.575 +01:00 [DBG] Start discovery request
2020-01-12 21:25:42.977 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:25:42.978 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:25:42.979 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:25:42.980 +01:00 [DBG] Start discovery request
2020-01-12 21:26:09.435 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:26:09.435 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:26:09.436 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:26:09.436 +01:00 [DBG] Start discovery request
2020-01-12 21:27:19.054 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:27:19.055 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:27:19.057 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:27:19.058 +01:00 [DBG] Start discovery request
2020-01-12 21:28:37.049 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:28:37.050 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:28:37.050 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:28:37.051 +01:00 [DBG] Start discovery request
2020-01-12 21:36:56.317 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:36:56.318 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:36:56.318 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:36:56.319 +01:00 [DBG] Start discovery request
2020-01-12 21:37:29.303 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:37:29.304 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:37:29.305 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:37:29.306 +01:00 [DBG] Start discovery request
2020-01-12 21:41:08.222 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:41:08.223 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:41:08.224 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:41:08.224 +01:00 [DBG] Start discovery request
2020-01-12 21:43:18.493 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 21:43:18.494 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 21:43:18.495 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 21:43:18.496 +01:00 [DBG] Start discovery request
2020-01-12 22:05:16.982 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 22:05:16.983 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 22:05:16.983 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 22:05:16.984 +01:00 [DBG] Start discovery request
2020-01-12 22:17:24.847 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 22:17:24.847 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 22:17:24.848 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 22:17:24.848 +01:00 [DBG] Start discovery request
2020-01-12 22:32:36.919 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-12 22:32:36.920 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-12 22:32:36.920 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-12 22:32:36.921 +01:00 [DBG] Start discovery request
2020-01-13 20:28:37.903 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-13 20:28:37.941 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-13 20:28:37.944 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-13 20:28:37.944 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-13 20:28:37.944 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-13 20:28:37.944 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-13 20:29:09.712 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-13 20:29:09.716 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-13 20:29:09.717 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-13 20:29:09.720 +01:00 [DBG] Start discovery request
2020-01-13 20:44:07.668 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-13 20:44:07.669 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-13 20:44:07.669 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-13 20:44:07.670 +01:00 [DBG] Start discovery request
2020-01-13 21:13:02.273 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-13 21:13:02.274 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-13 21:13:02.274 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-13 21:13:02.275 +01:00 [DBG] Start discovery request
2020-01-13 21:23:13.556 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-13 21:23:13.557 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-13 21:23:13.558 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-13 21:23:13.558 +01:00 [DBG] Start discovery request
2020-01-13 21:26:47.029 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-13 21:26:47.030 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-13 21:26:47.032 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-13 21:26:47.034 +01:00 [DBG] Start discovery request
2020-01-13 21:53:43.764 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-13 21:53:43.764 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-13 21:53:43.765 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-13 21:53:43.766 +01:00 [DBG] Start discovery request
2020-01-14 18:31:26.163 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-14 18:31:26.200 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-14 18:31:26.202 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-14 18:31:26.202 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-14 18:31:26.203 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-14 18:31:26.203 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-14 18:36:48.424 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-14 18:36:48.429 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-14 18:36:48.430 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-14 18:36:48.433 +01:00 [DBG] Start discovery request
2020-01-14 18:37:54.369 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-14 18:37:54.377 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-14 18:37:54.378 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-14 18:37:54.383 +01:00 [DBG] Start authorize request
2020-01-14 18:37:54.398 +01:00 [DBG] No user present in authorize request
2020-01-14 18:37:54.404 +01:00 [DBG] Start authorize request protocol validation
2020-01-14 18:37:54.419 +01:00 [DBG] Checking for PKCE parameters
2020-01-14 18:37:54.421 +01:00 [DBG] No PKCE used.
2020-01-14 18:37:54.452 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-14 18:37:54.480 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "d841497f-2b29-4ac9-a859-46e21896669b",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "d841497f-2b29-4ac9-a859-46e21896669b",
    "client_id": "nodejs"
  }
}
2020-01-14 18:37:54.489 +01:00 [INF] Showing login: User is not authenticated
2020-01-14 18:37:54.637 +01:00 [DBG] Start authorize request protocol validation
2020-01-14 18:37:54.638 +01:00 [DBG] Checking for PKCE parameters
2020-01-14 18:37:54.639 +01:00 [DBG] No PKCE used.
2020-01-14 18:37:54.639 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-14 18:38:38.125 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-14 18:38:38.183 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSP31AINVCL:00000008",
  "TimeStamp": "2020-01-14T17:38:38Z",
  "ProcessId": 8248,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-14 18:38:38.195 +01:00 [DBG] Augmenting SignInContext
2020-01-14 18:38:38.197 +01:00 [DBG] Adding idp claim with value: local
2020-01-14 18:38:38.197 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-14 18:38:38.204 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-14 18:38:38.216 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-14 18:38:38.217 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-14 18:38:38.217 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-14 18:38:38.218 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-14 18:38:38.218 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-14 18:38:38.223 +01:00 [DBG] Start authorize callback request
2020-01-14 18:38:38.228 +01:00 [DBG] User in authorize request: 88421113
2020-01-14 18:38:38.229 +01:00 [DBG] Start authorize request protocol validation
2020-01-14 18:38:38.230 +01:00 [DBG] Checking for PKCE parameters
2020-01-14 18:38:38.230 +01:00 [DBG] No PKCE used.
2020-01-14 18:38:38.230 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-14 18:38:38.231 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "d841497f-2b29-4ac9-a859-46e21896669b",
  "SessionId": "46fa6d47bad7b144344f98aa15450aaa",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "d841497f-2b29-4ac9-a859-46e21896669b",
    "client_id": "nodejs"
  }
}
2020-01-14 18:38:38.232 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-14 18:38:38.241 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-14 18:38:38.246 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-14 18:38:38.282 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api1",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****121c"
    }
  ],
  "ActivityId": "0HLSP31AINVCL:00000009",
  "TimeStamp": "2020-01-14T17:38:38Z",
  "ProcessId": 8248,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-14 18:38:38.286 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "d841497f-2b29-4ac9-a859-46e21896669b",
  "Scope": "openid profile api1"
}
2020-01-14 18:38:38.301 +01:00 [DBG] Augmenting SignInContext
2020-01-14 18:38:38.302 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-14 18:38:38.329 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-14 18:38:38.333 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-14 18:38:38.333 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-14 18:38:38.339 +01:00 [DBG] Start token request.
2020-01-14 18:38:38.345 +01:00 [DBG] Start client validation
2020-01-14 18:38:38.349 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-14 18:38:38.350 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-14 18:38:38.350 +01:00 [DBG] Secret id found: nodejs
2020-01-14 18:38:38.359 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-14 18:38:38.360 +01:00 [DBG] Client validation success
2020-01-14 18:38:38.363 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSP31AINVCP:00000001",
  "TimeStamp": "2020-01-14T17:38:38Z",
  "ProcessId": 8248,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-14 18:38:38.368 +01:00 [DBG] Start token request validation
2020-01-14 18:38:38.377 +01:00 [DBG] Start validation of authorization code token request
2020-01-14 18:38:38.408 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-14 18:38:38.408 +01:00 [DBG] Validation of authorization code token request success
2020-01-14 18:38:38.412 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "cd9701c867a1a1ea77ac4342c50f4c9ad19fa11247ea72aa99a6070f2854121c",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "cd9701c867a1a1ea77ac4342c50f4c9ad19fa11247ea72aa99a6070f2854121c",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "d841497f-2b29-4ac9-a859-46e21896669b"
  }
}
2020-01-14 18:38:38.433 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-14 18:38:38.433 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-14 18:38:38.438 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-14 18:38:38.441 +01:00 [DBG] Issued claims: []
2020-01-14 18:38:38.496 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-14 18:38:38.497 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-14 18:38:38.501 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile api1",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****T0Dg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****0UHg"
    }
  ],
  "ActivityId": "0HLSP31AINVCP:00000001",
  "TimeStamp": "2020-01-14T17:38:38Z",
  "ProcessId": 8248,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-14 18:38:38.503 +01:00 [DBG] Token request success.
2020-01-14 18:38:38.519 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-14 18:38:38.520 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-14 18:38:38.520 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-14 18:38:38.525 +01:00 [DBG] Start key discovery request
2020-01-14 18:38:38.553 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-14 18:38:38.554 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-14 18:38:38.555 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-14 18:38:38.561 +01:00 [DBG] Start userinfo request
2020-01-14 18:38:38.563 +01:00 [DBG] Bearer token found in header
2020-01-14 18:38:38.626 +01:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-14 18:38:38.626 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-14 18:38:38.629 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579023518,
    "exp": 1579027118,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1"
    ],
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579023518,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2020-01-14 18:38:38.631 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-14 18:38:38.640 +01:00 [DBG] Creating userinfo response
2020-01-14 18:38:38.645 +01:00 [DBG] Scopes in access token: openid profile api1
2020-01-14 18:38:38.648 +01:00 [DBG] Scopes in access token: openid profile api1
2020-01-14 18:38:38.650 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-14 18:38:38.651 +01:00 [DBG] Scopes in access token: openid profile api1
2020-01-14 18:38:38.652 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-14 18:38:38.658 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2020-01-14 18:38:38.659 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website
2020-01-14 18:38:38.659 +01:00 [DBG] End userinfo request
2020-01-14 18:38:39.074 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-14 18:38:39.075 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-14 18:38:39.075 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-14 18:38:39.076 +01:00 [DBG] Start discovery request
2020-01-14 18:38:39.109 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-14 18:38:39.109 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-14 18:38:39.110 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-14 18:38:39.110 +01:00 [DBG] Start key discovery request
2020-01-18 13:15:57.704 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 13:15:57.739 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 13:15:57.741 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 13:15:57.741 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 13:15:57.742 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 13:15:57.742 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 13:18:59.391 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 13:18:59.396 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 13:18:59.397 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 13:18:59.400 +01:00 [DBG] Start discovery request
2020-01-18 13:19:01.339 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2020-01-18 14:54:58.023 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 14:54:58.067 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 14:54:58.071 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 14:54:58.071 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 14:54:58.071 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 14:54:58.072 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 15:56:33.071 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 15:56:33.183 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 15:56:33.188 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 15:56:33.188 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 15:56:33.189 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 15:56:33.189 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 15:56:53.465 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 15:56:53.538 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 15:56:53.542 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 15:56:53.543 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 15:56:53.543 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 15:56:53.543 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 16:04:31.641 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 16:04:32.002 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.InvalidOperationException: Unable to resolve service for type 'Erazer.IdentityProvider.Session.ISessionService' while attempting to activate 'IdentityServer4.Quickstart.UI.AccountController'.
   at Microsoft.Extensions.Internal.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, Boolean isDefaultParameterRequired)
   at lambda_method(Closure , IServiceProvider , Object[] )
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerActivatorProvider.<>c__DisplayClass4_0.<CreateActivator>b__0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Controllers.ControllerFactoryProvider.<>c__DisplayClass5_0.<CreateControllerFactory>g__CreateController|0(ControllerContext controllerContext)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeInnerFilterAsync>d__14.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-18 16:05:56.901 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 16:05:56.987 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 16:05:56.989 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 16:05:56.990 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 16:05:56.990 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 16:05:56.990 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 16:06:04.058 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 16:06:04.322 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSS4VNVKK88:00000001",
  "TimeStamp": "2020-01-18T15:06:04Z",
  "ProcessId": 11384,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 16:06:04.330 +01:00 [DBG] Augmenting SignInContext
2020-01-18 16:06:04.331 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 16:06:04.332 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 16:06:04.344 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 16:06:04.384 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 16:06:04.385 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 16:06:06.750 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 16:06:06.752 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 16:06:09.342 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 16:06:09.343 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:13:13.792 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 17:13:13.830 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 17:13:13.833 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 17:13:13.834 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 17:13:13.834 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 17:13:13.834 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 17:14:49.666 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:14:49.679 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:14:51.891 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:14:51.892 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:15:27.119 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2020-01-18 17:15:44.351 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 17:15:44.423 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSS665G5A91:00000005",
  "TimeStamp": "2020-01-18T16:15:44Z",
  "ProcessId": 7372,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 17:15:44.436 +01:00 [DBG] Augmenting SignInContext
2020-01-18 17:15:44.438 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 17:15:44.438 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 17:15:44.444 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 17:15:44.456 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:15:44.457 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:15:44.596 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:15:44.597 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:15:44.597 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:15:44.597 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:15:44.597 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:15:44.598 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:15:44.599 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:15:44.600 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:15:44.622 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:15:44.623 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:15:44.660 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:15:44.661 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:13.145 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:13.147 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:15.200 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:15.201 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.662 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.663 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.693 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.694 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.695 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.695 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.695 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.696 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.696 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.700 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.719 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.719 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.720 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.721 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.761 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.762 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.839 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.840 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.845 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:16:32.846 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.409 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.410 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.455 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.455 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.455 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.455 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.456 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.457 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.458 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.460 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.477 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.478 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.478 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.480 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.509 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.510 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.569 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.571 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.591 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:12.592 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.467 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.468 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.493 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.493 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.493 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.493 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.494 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.494 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.496 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.499 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.514 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.514 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.515 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.516 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.544 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.544 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.588 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.589 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.615 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:13.616 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:17.586 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:17.587 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:17.709 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:17.709 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:17.710 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:17.710 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:17.710 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:17.711 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:17.713 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:17.715 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:17.731 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:17.733 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:17.774 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:17.775 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:21.072 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 17:17:21.073 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:21.074 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:21.090 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-18 17:17:21.100 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "ActivityId": "0HLSS665G5A96:00000008",
  "TimeStamp": "2020-01-18T16:17:21Z",
  "ProcessId": 7372,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 17:17:29.230 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2020-01-18 17:17:52.634 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 17:17:52.637 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSS665G5A96:0000000F",
  "TimeStamp": "2020-01-18T16:17:52Z",
  "ProcessId": 7372,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 17:17:52.637 +01:00 [DBG] Augmenting SignInContext
2020-01-18 17:17:52.638 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 17:17:52.638 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 17:17:52.638 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 17:17:52.645 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:52.646 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:52.671 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:52.671 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:52.671 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:52.671 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:52.673 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:52.674 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:52.676 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:52.679 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:52.695 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:52.697 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:52.740 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:17:52.741 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:07.517 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 17:18:07.594 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 17:18:07.595 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 17:18:07.596 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 17:18:07.596 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 17:18:07.596 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 17:18:15.362 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:15.370 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:17.517 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:17.517 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:17.517 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:17.517 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:17.520 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:17.521 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:17.522 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:17.522 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:17.542 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:17.546 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:17.571 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:17.572 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:19.231 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 17:18:19.233 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:19.233 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:19.272 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-18 17:18:19.470 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Session.SessionService.<End>d__5.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Session\SessionManager.cs:line 66
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Quickstart.UI.AccountController.<Logout>d__11.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Quickstart\Account\AccountController.cs:line 320
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeActionMethodAsync>d__12.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextActionFilterAsync>d__10.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeInnerFilterAsync>d__14.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-18 17:18:21.119 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:21.119 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:21.147 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:21.147 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:21.147 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:21.148 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:21.149 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:21.154 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:21.155 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:21.158 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:21.172 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:21.173 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:21.210 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:21.210 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.472 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.472 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.655 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.656 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.656 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.656 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.656 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.657 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.657 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.658 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.680 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.680 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.681 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.682 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.719 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:22.720 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.529 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.530 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.574 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.574 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.574 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.575 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.575 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.575 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.577 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.580 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.597 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.597 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.598 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.600 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.629 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.629 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.676 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.677 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.692 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:24.693 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:26.215 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:26.216 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:26.246 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:26.247 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:26.247 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:26.247 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:26.247 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:26.249 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:26.249 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:26.252 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:26.270 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:26.272 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:26.306 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:26.307 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:27.156 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 17:18:27.157 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:27.158 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:18:27.159 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-18 17:18:27.260 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Session.SessionService.<End>d__5.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Session\SessionManager.cs:line 66
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Quickstart.UI.AccountController.<Logout>d__11.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Quickstart\Account\AccountController.cs:line 320
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeActionMethodAsync>d__12.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeNextActionFilterAsync>d__10.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.<InvokeInnerFilterAsync>d__14.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeNextResourceFilter>d__22.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeFilterPipelineAsync>d__17.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.<InvokeAsync>d__15.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.<Invoke>d__4.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 72
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-18 17:18:54.555 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 17:18:54.614 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 17:18:54.616 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 17:18:54.617 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 17:18:54.617 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 17:18:54.617 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 17:19:04.838 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:04.846 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:06.948 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:06.948 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:06.948 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:06.951 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:06.951 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:06.952 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:06.952 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:06.954 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:06.981 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:06.982 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:07.029 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:07.029 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:09.024 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 17:19:09.025 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:09.025 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:09.066 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-18 17:19:09.132 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "ActivityId": "0HLSS68HHLM2C:00000004",
  "TimeStamp": "2020-01-18T16:19:09Z",
  "ProcessId": 11624,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 17:19:12.907 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2020-01-18 17:19:18.940 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 17:19:18.957 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSS68HHLM2A:0000000A",
  "TimeStamp": "2020-01-18T16:19:18Z",
  "ProcessId": 11624,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 17:19:18.964 +01:00 [DBG] Augmenting SignInContext
2020-01-18 17:19:18.965 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 17:19:18.965 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 17:19:18.973 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 17:19:23.290 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:23.292 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:23.482 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:23.483 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:23.483 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:23.483 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:23.484 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:23.485 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:23.485 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:23.486 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:23.507 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:23.508 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:23.547 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:23.548 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:28.549 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:28.550 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:28.580 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:28.581 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:28.581 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:28.581 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:28.582 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:28.583 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:28.584 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:28.590 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:28.607 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:28.608 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:28.657 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:28.657 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:30.592 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 17:19:30.595 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:30.595 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:19:30.597 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-18 17:19:52.931 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "ActivityId": "0HLSS68HHLM2C:0000000D",
  "TimeStamp": "2020-01-18T16:19:52Z",
  "ProcessId": 11624,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 17:19:58.505 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2020-01-18 17:20:04.417 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 17:20:04.420 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSS68HHLM2B:00000011",
  "TimeStamp": "2020-01-18T16:20:04Z",
  "ProcessId": 11624,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 17:20:04.421 +01:00 [DBG] Augmenting SignInContext
2020-01-18 17:20:04.421 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 17:20:04.422 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 17:20:04.422 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 17:20:13.575 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:20:13.576 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:20:13.602 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:20:13.602 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:20:13.602 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:20:13.604 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:20:13.604 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:20:13.606 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:20:13.607 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:20:13.618 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:20:13.629 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:20:13.630 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:20:13.680 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 17:20:13.682 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:43:33.111 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 20:43:33.202 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 20:43:33.204 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 20:43:33.205 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 20:43:33.205 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 20:43:33.205 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 20:44:47.006 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 20:44:47.011 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 20:44:47.011 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 20:44:47.013 +01:00 [DBG] Start discovery request
2020-01-18 20:44:58.402 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:44:58.403 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:44:58.404 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 20:44:58.408 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 20:44:58.409 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 20:44:58.412 +01:00 [DBG] Start authorize request
2020-01-18 20:44:58.418 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 20:44:58.420 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:44:58.430 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:44:58.432 +01:00 [DBG] No PKCE used.
2020-01-18 20:44:58.451 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:44:58.474 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "2ec7ef85-40e4-4861-8a9f-bd9346debe25",
  "SessionId": "60e9bf5be6ed73740893c3b66784bd35",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "2ec7ef85-40e4-4861-8a9f-bd9346debe25",
    "client_id": "nodejs"
  }
}
2020-01-18 20:44:58.480 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-18 20:44:58.485 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 20:44:58.487 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 20:44:58.557 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api1",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****879c"
    }
  ],
  "ActivityId": "0HLSS9RFPLU66:00000001",
  "TimeStamp": "2020-01-18T19:44:58Z",
  "ProcessId": 6308,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:44:58.562 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "2ec7ef85-40e4-4861-8a9f-bd9346debe25",
  "Scope": "openid profile api1"
}
2020-01-18 20:44:58.572 +01:00 [DBG] Augmenting SignInContext
2020-01-18 20:44:58.578 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 20:44:58.598 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 20:44:58.601 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 20:44:58.601 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 20:44:58.605 +01:00 [DBG] Start token request.
2020-01-18 20:44:58.607 +01:00 [DBG] Start client validation
2020-01-18 20:44:58.610 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 20:44:58.611 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 20:44:58.612 +01:00 [DBG] Secret id found: nodejs
2020-01-18 20:44:58.620 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 20:44:58.620 +01:00 [DBG] Client validation success
2020-01-18 20:44:58.625 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSS9RFPLU67:00000001",
  "TimeStamp": "2020-01-18T19:44:58Z",
  "ProcessId": 6308,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 20:44:58.636 +01:00 [DBG] Start token request validation
2020-01-18 20:44:58.640 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 20:44:58.663 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-18 20:44:58.663 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 20:44:58.669 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "477914dcc23f4795a640b5a615050b282b7a81d499662756f6c3445f779c879c",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "477914dcc23f4795a640b5a615050b282b7a81d499662756f6c3445f779c879c",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "2ec7ef85-40e4-4861-8a9f-bd9346debe25"
  }
}
2020-01-18 20:44:58.679 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 20:44:58.680 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 20:44:58.686 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 20:44:58.689 +01:00 [DBG] Issued claims: []
2020-01-18 20:44:58.748 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 20:44:58.749 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 20:44:58.753 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile api1",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****3ucA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****3MOA"
    }
  ],
  "ActivityId": "0HLSS9RFPLU67:00000001",
  "TimeStamp": "2020-01-18T19:44:58Z",
  "ProcessId": 6308,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 20:44:58.757 +01:00 [DBG] Token request success.
2020-01-18 20:44:58.769 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 20:44:58.770 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 20:44:58.771 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 20:44:58.773 +01:00 [DBG] Start key discovery request
2020-01-18 20:44:58.800 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 20:44:58.801 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 20:44:58.802 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 20:44:58.805 +01:00 [DBG] Start userinfo request
2020-01-18 20:44:58.807 +01:00 [DBG] Bearer token found in header
2020-01-18 20:44:58.843 +01:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-18 20:44:58.844 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 20:44:58.847 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579376698,
    "exp": 1579380298,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1"
    ],
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579364404,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2020-01-18 20:44:58.848 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-18 20:44:58.851 +01:00 [DBG] Creating userinfo response
2020-01-18 20:44:58.853 +01:00 [DBG] Scopes in access token: openid profile api1
2020-01-18 20:44:58.854 +01:00 [DBG] Scopes in access token: openid profile api1
2020-01-18 20:44:58.855 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 20:44:58.855 +01:00 [DBG] Scopes in access token: openid profile api1
2020-01-18 20:44:58.856 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 20:44:58.860 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2020-01-18 20:44:58.861 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website
2020-01-18 20:44:58.861 +01:00 [DBG] End userinfo request
2020-01-18 20:44:59.215 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 20:44:59.216 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 20:44:59.217 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 20:44:59.217 +01:00 [DBG] Start discovery request
2020-01-18 20:44:59.285 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 20:44:59.286 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 20:44:59.287 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 20:44:59.287 +01:00 [DBG] Start key discovery request
2020-01-18 20:45:14.204 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:45:14.205 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:45:14.205 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-01-18 20:45:14.207 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-01-18 20:45:14.208 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-01-18 20:45:14.211 +01:00 [DBG] Processing signout request for 88421113
2020-01-18 20:45:14.214 +01:00 [DBG] Start end session request validation
2020-01-18 20:45:14.216 +01:00 [DBG] Start identity token validation
2020-01-18 20:45:14.217 +01:00 [DBG] Client found: nodejs / ErazerSSO nodejs
2020-01-18 20:45:14.219 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2020-01-18 20:45:14.220 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 20:45:14.220 +01:00 [DBG] Token validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1579376698,
    "exp": 1579376998,
    "iss": "http://localhost:5000",
    "aud": "nodejs",
    "iat": 1579376698,
    "at_hash": "KUtOMcjJ7TnaG9zI0Ngowg",
    "sid": "60e9bf5be6ed73740893c3b66784bd35",
    "sub": "88421113",
    "auth_time": 1579364404,
    "idp": "local",
    "amr": "pwd"
  }
}
2020-01-18 20:45:14.225 +01:00 [INF] End session request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "SubjectId": "88421113",
  "PostLogOutUri": "http://localhost:8888",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjU0N2NmYzUxNjk3Zjk1ZjFlYTk3NTgwZTlkZTQwYWQxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NzkzNzY2OTgsImV4cCI6MTU3OTM3Njk5OCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoibm9kZWpzIiwiaWF0IjoxNTc5Mzc2Njk4LCJhdF9oYXNoIjoiS1V0T01jako3VG5hRzl6STBOZ293ZyIsInNpZCI6IjYwZTliZjViZTZlZDczNzQwODkzYzNiNjY3ODRiZDM1Iiwic3ViIjoiODg0MjExMTMiLCJhdXRoX3RpbWUiOjE1NzkzNjQ0MDQsImlkcCI6ImxvY2FsIiwiYW1yIjpbInB3ZCJdfQ.rRBD0dhs7Ta7_HN0tZjp7tYlEcePVHlwhW47KANHQmNXc4HFjYaiQT9CCH2qoRIHefhwZQ_fevg6aJHO3Ke0ycGH8gULSrwASx53AAyNpHcToRhdoJqjCCzQa1rN0LhuaPpJSj9B45fHhLHPO6SrD7lrznWMmkb9WIkqdGyVnZxw7NRuh6wYIAsR728nn3HjFPH8II6H8IFCYaTQD_wrDvkW2dwW3XKTeSshiMD218w-oPbJ6XH6zu0H8xdwooyM7moy9nkKEq5g5d3o0XEOlzXvIBKJCRlKBPZun3j1Riqavc3ZAKZKUAV4A2qBskV8kC62z8NBj1AMvqwn3U3ucA",
    "post_logout_redirect_uri": "http://localhost:8888"
  }
}
2020-01-18 20:45:14.227 +01:00 [DBG] Success validating end session request from nodejs
2020-01-18 20:45:14.241 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:45:14.244 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:45:14.438 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-18 20:45:14.445 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "ActivityId": "0HLSS9RFPLU66:00000003",
  "TimeStamp": "2020-01-18T19:45:14Z",
  "ProcessId": 6308,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:45:16.756 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-01-18 20:45:16.772 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-01-18 20:45:16.773 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-01-18 20:45:16.775 +01:00 [DBG] Processing signout callback request
2020-01-18 20:45:16.779 +01:00 [DBG] No client front-channel logout URLs
2020-01-18 20:45:16.780 +01:00 [DBG] No client back-channel logout URLs
2020-01-18 20:45:16.780 +01:00 [INF] Successful signout callback.
2020-01-18 20:45:16.781 +01:00 [DBG] No client front-channel iframe urls
2020-01-18 20:45:16.781 +01:00 [DBG] No client back-channel iframe urls
2020-01-18 20:45:20.176 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 20:45:20.176 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 20:45:20.177 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 20:45:20.178 +01:00 [DBG] Start authorize request
2020-01-18 20:45:20.178 +01:00 [DBG] No user present in authorize request
2020-01-18 20:45:20.178 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:45:20.179 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:45:20.179 +01:00 [DBG] No PKCE used.
2020-01-18 20:45:20.180 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:45:20.180 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "064990e1-ad58-48e9-9e18-49369fa17237",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "064990e1-ad58-48e9-9e18-49369fa17237",
    "client_id": "nodejs"
  }
}
2020-01-18 20:45:20.181 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 20:45:20.201 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:45:20.202 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:45:20.202 +01:00 [DBG] No PKCE used.
2020-01-18 20:45:20.202 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:45:27.471 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 20:45:27.495 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSS9RFPLU66:00000008",
  "TimeStamp": "2020-01-18T19:45:27Z",
  "ProcessId": 6308,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:45:27.500 +01:00 [DBG] Augmenting SignInContext
2020-01-18 20:45:27.500 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 20:45:27.501 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 20:45:27.502 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 20:45:44.960 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:45:44.961 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:45:44.962 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 20:45:44.962 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 20:45:44.963 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 20:45:44.965 +01:00 [DBG] Start authorize callback request
2020-01-18 20:45:44.969 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 20:45:44.969 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:45:44.970 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:45:44.970 +01:00 [DBG] No PKCE used.
2020-01-18 20:45:44.971 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:45:44.971 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "064990e1-ad58-48e9-9e18-49369fa17237",
  "SessionId": "56c2ba3e165ae6417912208946841416",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "064990e1-ad58-48e9-9e18-49369fa17237",
    "client_id": "nodejs"
  }
}
2020-01-18 20:45:44.973 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-18 20:45:44.973 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 20:45:44.973 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 20:45:44.980 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api1",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****01f5"
    }
  ],
  "ActivityId": "0HLSS9RFPLU66:00000009",
  "TimeStamp": "2020-01-18T19:45:44Z",
  "ProcessId": 6308,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:45:44.981 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "064990e1-ad58-48e9-9e18-49369fa17237",
  "Scope": "openid profile api1"
}
2020-01-18 20:45:44.982 +01:00 [DBG] Augmenting SignInContext
2020-01-18 20:45:44.982 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 20:45:44.994 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 20:45:44.995 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 20:45:44.996 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 20:45:44.996 +01:00 [DBG] Start token request.
2020-01-18 20:45:44.997 +01:00 [DBG] Start client validation
2020-01-18 20:45:44.997 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 20:45:44.997 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 20:45:44.998 +01:00 [DBG] Secret id found: nodejs
2020-01-18 20:45:44.998 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 20:45:44.998 +01:00 [DBG] Client validation success
2020-01-18 20:45:44.999 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSS9RFPLU6E:00000001",
  "TimeStamp": "2020-01-18T19:45:44Z",
  "ProcessId": 6308,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 20:45:45.000 +01:00 [DBG] Start token request validation
2020-01-18 20:45:45.000 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 20:45:45.007 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-18 20:45:45.007 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 20:45:45.008 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "3755c567c33ec36376cb7b1e47b71a19d21238b34ef15058d6be9a7b3e6001f5",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "3755c567c33ec36376cb7b1e47b71a19d21238b34ef15058d6be9a7b3e6001f5",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "064990e1-ad58-48e9-9e18-49369fa17237"
  }
}
2020-01-18 20:45:45.009 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 20:45:45.009 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 20:45:45.009 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 20:45:45.010 +01:00 [DBG] Issued claims: []
2020-01-18 20:45:45.013 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 20:45:45.013 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 20:45:45.017 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile api1",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****stmQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****7jUw"
    }
  ],
  "ActivityId": "0HLSS9RFPLU6E:00000001",
  "TimeStamp": "2020-01-18T19:45:45Z",
  "ProcessId": 6308,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 20:45:45.018 +01:00 [DBG] Token request success.
2020-01-18 20:45:45.025 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 20:45:45.026 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 20:45:45.033 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 20:45:45.033 +01:00 [DBG] Start userinfo request
2020-01-18 20:45:45.033 +01:00 [DBG] Bearer token found in header
2020-01-18 20:45:45.040 +01:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-18 20:45:45.040 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 20:45:45.041 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579376745,
    "exp": 1579380345,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1"
    ],
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579376727,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2020-01-18 20:45:45.043 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-18 20:45:45.043 +01:00 [DBG] Creating userinfo response
2020-01-18 20:45:45.043 +01:00 [DBG] Scopes in access token: openid profile api1
2020-01-18 20:45:45.043 +01:00 [DBG] Scopes in access token: openid profile api1
2020-01-18 20:45:45.044 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 20:45:45.044 +01:00 [DBG] Scopes in access token: openid profile api1
2020-01-18 20:45:45.044 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 20:45:45.046 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2020-01-18 20:45:45.046 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website
2020-01-18 20:45:45.046 +01:00 [DBG] End userinfo request
2020-01-18 20:46:53.695 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:46:53.696 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:46:53.696 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-01-18 20:46:53.697 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-01-18 20:46:53.698 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-01-18 20:46:53.699 +01:00 [DBG] Processing signout request for 88421113
2020-01-18 20:46:53.699 +01:00 [DBG] Start end session request validation
2020-01-18 20:46:53.699 +01:00 [DBG] Start identity token validation
2020-01-18 20:46:53.700 +01:00 [DBG] Client found: nodejs / ErazerSSO nodejs
2020-01-18 20:46:53.702 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2020-01-18 20:46:53.702 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 20:46:53.703 +01:00 [DBG] Token validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1579376745,
    "exp": 1579377045,
    "iss": "http://localhost:5000",
    "aud": "nodejs",
    "iat": 1579376745,
    "at_hash": "FTSyMKIlSggeh23g1vJ1aA",
    "sid": "56c2ba3e165ae6417912208946841416",
    "sub": "88421113",
    "auth_time": 1579376727,
    "idp": "local",
    "amr": "pwd"
  }
}
2020-01-18 20:46:53.704 +01:00 [INF] End session request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "SubjectId": "88421113",
  "PostLogOutUri": "http://localhost:8888",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjU0N2NmYzUxNjk3Zjk1ZjFlYTk3NTgwZTlkZTQwYWQxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NzkzNzY3NDUsImV4cCI6MTU3OTM3NzA0NSwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoibm9kZWpzIiwiaWF0IjoxNTc5Mzc2NzQ1LCJhdF9oYXNoIjoiRlRTeU1LSWxTZ2dlaDIzZzF2SjFhQSIsInNpZCI6IjU2YzJiYTNlMTY1YWU2NDE3OTEyMjA4OTQ2ODQxNDE2Iiwic3ViIjoiODg0MjExMTMiLCJhdXRoX3RpbWUiOjE1NzkzNzY3MjcsImlkcCI6ImxvY2FsIiwiYW1yIjpbInB3ZCJdfQ.ZJNJ0NvgmMCiC7OKxEJNhHizXwywGekyiWseYNZtzRqt0bvbgs6kqOxxT54I16Uc63cCs8zQ8KbE8qEogDPs0kFm9X9bzCTo4gNU4QV2PlJYAFk5ob1h-J5tmJbicGwtx_VGSU5LEBsTePznznAZEU04CqD9yDNnba0J1KvyukXfxJ2yocrAex6Rtz91kcE-QaeQgBvhihM0A8ifj_-KIZNcpW_wXz8j2b0IZIXsGB2wkcpfQ3-BEQVVz0ph7auiipkzBYWzc7mqy29TwZnc-oU6CaazGeiiCK3GVz8LxciHPYxxoSrkdNj6OeSKF-0B94p1vEo5AL3mluI3RmstmQ",
    "post_logout_redirect_uri": "http://localhost:8888"
  }
}
2020-01-18 20:46:53.705 +01:00 [DBG] Success validating end session request from nodejs
2020-01-18 20:46:53.711 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:46:53.718 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:46:53.720 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-18 20:46:53.722 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "ActivityId": "0HLSS9RFPLU66:0000000B",
  "TimeStamp": "2020-01-18T19:46:53Z",
  "ProcessId": 6308,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:46:53.821 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-01-18 20:46:53.827 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-01-18 20:46:53.829 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-01-18 20:46:53.831 +01:00 [DBG] Processing signout callback request
2020-01-18 20:46:53.833 +01:00 [DBG] No client front-channel logout URLs
2020-01-18 20:46:53.833 +01:00 [DBG] No client back-channel logout URLs
2020-01-18 20:46:53.835 +01:00 [INF] Successful signout callback.
2020-01-18 20:46:53.836 +01:00 [DBG] No client front-channel iframe urls
2020-01-18 20:46:53.837 +01:00 [DBG] No client back-channel iframe urls
2020-01-18 20:46:57.274 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 20:46:57.275 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 20:46:57.276 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 20:46:57.276 +01:00 [DBG] Start authorize request
2020-01-18 20:46:57.276 +01:00 [DBG] No user present in authorize request
2020-01-18 20:46:57.276 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:46:57.277 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:46:57.277 +01:00 [DBG] No PKCE used.
2020-01-18 20:46:57.277 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:46:57.278 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "850b7ce0-5bae-4352-a5f3-1780293bdc94",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "850b7ce0-5bae-4352-a5f3-1780293bdc94",
    "client_id": "nodejs"
  }
}
2020-01-18 20:46:57.279 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 20:46:57.283 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:46:57.284 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:46:57.284 +01:00 [DBG] No PKCE used.
2020-01-18 20:46:57.284 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:47:04.899 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 20:47:04.901 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSS9RFPLU6B:00000008",
  "TimeStamp": "2020-01-18T19:47:04Z",
  "ProcessId": 6308,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:47:04.903 +01:00 [DBG] Augmenting SignInContext
2020-01-18 20:47:04.903 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 20:47:04.903 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 20:47:04.904 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 20:47:04.931 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:47:04.932 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:47:04.932 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 20:47:04.933 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 20:47:04.933 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 20:47:04.934 +01:00 [DBG] Start authorize callback request
2020-01-18 20:47:04.934 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 20:47:04.934 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:47:04.935 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:47:04.935 +01:00 [DBG] No PKCE used.
2020-01-18 20:47:04.935 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:47:04.936 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "850b7ce0-5bae-4352-a5f3-1780293bdc94",
  "SessionId": "6943b3207d9e5428c0f444d0c5b7650c",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "850b7ce0-5bae-4352-a5f3-1780293bdc94",
    "client_id": "nodejs"
  }
}
2020-01-18 20:47:04.937 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-18 20:47:04.937 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 20:47:04.937 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 20:47:04.944 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api1",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****ad24"
    }
  ],
  "ActivityId": "0HLSS9RFPLU6B:00000009",
  "TimeStamp": "2020-01-18T19:47:04Z",
  "ProcessId": 6308,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:47:04.945 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "850b7ce0-5bae-4352-a5f3-1780293bdc94",
  "Scope": "openid profile api1"
}
2020-01-18 20:47:04.946 +01:00 [DBG] Augmenting SignInContext
2020-01-18 20:47:04.946 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 20:47:04.956 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 20:47:04.957 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 20:47:04.958 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 20:47:04.958 +01:00 [DBG] Start token request.
2020-01-18 20:47:04.958 +01:00 [DBG] Start client validation
2020-01-18 20:47:04.959 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 20:47:04.959 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 20:47:04.959 +01:00 [DBG] Secret id found: nodejs
2020-01-18 20:47:04.960 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 20:47:04.960 +01:00 [DBG] Client validation success
2020-01-18 20:47:04.960 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSS9RFPLU6H:00000001",
  "TimeStamp": "2020-01-18T19:47:04Z",
  "ProcessId": 6308,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 20:47:04.970 +01:00 [DBG] Start token request validation
2020-01-18 20:47:04.971 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 20:47:04.978 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-18 20:47:04.978 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 20:47:04.978 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "a1a590573a4d24b31bea0f3b27eaf8e9e905b1a18be5eb73c7b259dc826fad24",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "a1a590573a4d24b31bea0f3b27eaf8e9e905b1a18be5eb73c7b259dc826fad24",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "850b7ce0-5bae-4352-a5f3-1780293bdc94"
  }
}
2020-01-18 20:47:04.979 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 20:47:04.979 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 20:47:04.980 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 20:47:04.980 +01:00 [DBG] Issued claims: []
2020-01-18 20:47:04.983 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 20:47:04.984 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 20:47:04.987 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile api1",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****aakw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****gbHw"
    }
  ],
  "ActivityId": "0HLSS9RFPLU6H:00000001",
  "TimeStamp": "2020-01-18T19:47:04Z",
  "ProcessId": 6308,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 20:47:04.990 +01:00 [DBG] Token request success.
2020-01-18 20:47:04.996 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 20:47:04.996 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 20:47:04.997 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 20:47:04.997 +01:00 [DBG] Start key discovery request
2020-01-18 20:47:05.003 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 20:47:05.004 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 20:47:05.004 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 20:47:05.005 +01:00 [DBG] Start userinfo request
2020-01-18 20:47:05.005 +01:00 [DBG] Bearer token found in header
2020-01-18 20:47:05.007 +01:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-18 20:47:05.010 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 20:47:05.016 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579376824,
    "exp": 1579380424,
    "iss": "http://localhost:5000",
    "aud": [
      "http://localhost:5000/resources",
      "api1"
    ],
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579376824,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "api1"
    ],
    "amr": "pwd"
  }
}
2020-01-18 20:47:05.018 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-18 20:47:05.018 +01:00 [DBG] Creating userinfo response
2020-01-18 20:47:05.018 +01:00 [DBG] Scopes in access token: openid profile api1
2020-01-18 20:47:05.018 +01:00 [DBG] Scopes in access token: openid profile api1
2020-01-18 20:47:05.019 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 20:47:05.019 +01:00 [DBG] Scopes in access token: openid profile api1
2020-01-18 20:47:05.019 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 20:47:05.020 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2020-01-18 20:47:05.021 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website
2020-01-18 20:47:05.021 +01:00 [DBG] End userinfo request
2020-01-18 20:53:55.353 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 20:53:55.419 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 20:53:55.421 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 20:53:55.422 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 20:53:55.422 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 20:53:55.422 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 20:53:56.208 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:53:56.219 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:53:56.223 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-01-18 20:53:56.410 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "System.InvalidOperationException: Unable to resolve service for type 'Erazer.IdentityProvider.Session.SessionService' while attempting to activate 'Erazer.IdentityProvider.Profile.ProfileService'.\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, ISet`1 callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, ISet`1 callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, ISet`1 callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, ISet`1 callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, ISet`1 callSiteChain)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type serviceType, ServiceProvider serviceProvider)\r\n   at System.Collections.Concurrent.ConcurrentDictionaryExtensions.GetOrAdd[TKey,TValue,TArg](ConcurrentDictionary`2 dictionary, TKey key, Func`3 valueFactory, TArg arg)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)\r\n   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\EndpointRouter.cs:line 52\r\n   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\EndpointRouter.cs:line 39\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 49",
  "Message": "Unable to resolve service for type 'Erazer.IdentityProvider.Session.SessionService' while attempting to activate 'Erazer.IdentityProvider.Profile.ProfileService'.",
  "ActivityId": "0HLSSA0JF857Q:00000001",
  "TimeStamp": "2020-01-18T19:53:56Z",
  "ProcessId": 14956,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:53:56.414 +01:00 [FTL] Unhandled exception: Unable to resolve service for type 'Erazer.IdentityProvider.Session.SessionService' while attempting to activate 'Erazer.IdentityProvider.Profile.ProfileService'.
System.InvalidOperationException: Unable to resolve service for type 'Erazer.IdentityProvider.Session.SessionService' while attempting to activate 'Erazer.IdentityProvider.Profile.ProfileService'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, ISet`1 callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, ISet`1 callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, ISet`1 callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, ISet`1 callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type serviceType, ServiceProvider serviceProvider)
   at System.Collections.Concurrent.ConcurrentDictionaryExtensions.GetOrAdd[TKey,TValue,TArg](ConcurrentDictionary`2 dictionary, TKey key, Func`3 valueFactory, TArg arg)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 49
2020-01-18 20:53:56.477 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.InvalidOperationException: Unable to resolve service for type 'Erazer.IdentityProvider.Session.SessionService' while attempting to activate 'Erazer.IdentityProvider.Profile.ProfileService'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, ISet`1 callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, ISet`1 callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, ISet`1 callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, ISet`1 callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, ISet`1 callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type serviceType, ServiceProvider serviceProvider)
   at System.Collections.Concurrent.ConcurrentDictionaryExtensions.GetOrAdd[TKey,TValue,TArg](ConcurrentDictionary`2 dictionary, TKey key, Func`3 valueFactory, TArg arg)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 49
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-18 20:54:49.820 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 20:54:49.926 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 20:54:49.929 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 20:54:49.929 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 20:54:49.930 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 20:54:49.930 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 20:54:57.645 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:54:57.653 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:54:57.657 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-01-18 20:54:57.662 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-01-18 20:54:57.663 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-01-18 20:54:57.669 +01:00 [DBG] Processing signout request for 88421113
2020-01-18 20:54:57.672 +01:00 [DBG] Start end session request validation
2020-01-18 20:54:57.675 +01:00 [DBG] Start identity token validation
2020-01-18 20:54:57.721 +01:00 [DBG] Client found: nodejs / ErazerSSO nodejs
2020-01-18 20:55:00.739 +01:00 [ERR] User marked as not active: 88421113
2020-01-18 20:55:00.762 +01:00 [INF] End session request validation failure: Error validating id token hint
{
  "SubjectId": "unknown",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjU0N2NmYzUxNjk3Zjk1ZjFlYTk3NTgwZTlkZTQwYWQxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1NzkzNzY4MjQsImV4cCI6MTU3OTM3NzEyNCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoibm9kZWpzIiwiaWF0IjoxNTc5Mzc2ODI0LCJhdF9oYXNoIjoiZ0tqeldlYjQxUjRQNy16OUJWZE1qUSIsInNpZCI6IjY5NDNiMzIwN2Q5ZTU0MjhjMGY0NDRkMGM1Yjc2NTBjIiwic3ViIjoiODg0MjExMTMiLCJhdXRoX3RpbWUiOjE1NzkzNzY4MjQsImlkcCI6ImxvY2FsIiwiYW1yIjpbInB3ZCJdfQ.WtDnT8VbH_h6u0CapRSEUxS_YjmFNz8ctG4lvWjNG_4qtqSYuGKvQ4SshrUmsH5-htB5GErohxZFgtWu1DPOTo2Iqlfa2AE9PhgDDCw1ImMWSRT4GmkTjITuAn7O1tFqNGdb5f0ScUOZFaAV8HWC9QM-qtfaNaIvQxxfKI-3gJR-D111Wy_0uQ6mX9LRko2dWejMKHQyvwBVsEmz2_je3_clzMT6L04s6sUP7a3E77iOU_wIXEI47X7MjH1kVH_GVBU_zw10AkGU356zOeXB4M4QmN_CQJt41tD-toG8L4-PTyneo9cbWLSa_u8TI8xjgkoitn9MvKaw-Z08G8aakw",
    "post_logout_redirect_uri": "http://localhost:8888"
  }
}
2020-01-18 20:55:00.764 +01:00 [ERR] Error processing end session request Invalid request
2020-01-18 20:55:00.781 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:00.782 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.138 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.140 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.140 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.140 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.140 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.142 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.143 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.143 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.169 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.171 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.206 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.207 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.273 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.274 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.285 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:03.285 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:04.289 +01:00 [DBG] CORS request made for path: /account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 20:55:04.290 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:04.290 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:04.329 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-18 20:55:04.356 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "ActivityId": "0HLSSA15P78FN:00000006",
  "TimeStamp": "2020-01-18T19:55:04Z",
  "ProcessId": 15392,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:55:04.562 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-01-18 20:55:04.582 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-01-18 20:55:04.583 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-01-18 20:55:04.585 +01:00 [DBG] Processing signout callback request
2020-01-18 20:55:04.601 +01:00 [DBG] No client front-channel logout URLs
2020-01-18 20:55:04.602 +01:00 [DBG] No client back-channel logout URLs
2020-01-18 20:55:04.607 +01:00 [INF] Successful signout callback.
2020-01-18 20:55:04.608 +01:00 [DBG] No client front-channel iframe urls
2020-01-18 20:55:04.608 +01:00 [DBG] No client back-channel iframe urls
2020-01-18 20:55:08.056 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2020-01-18 20:55:20.662 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 20:55:20.665 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 20:55:20.665 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 20:55:20.667 +01:00 [DBG] Start authorize request
2020-01-18 20:55:20.669 +01:00 [DBG] No user present in authorize request
2020-01-18 20:55:20.671 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:55:20.679 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:55:20.680 +01:00 [DBG] No PKCE used.
2020-01-18 20:55:20.704 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:55:20.716 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "d08e0aa4-f9d2-4bc1-b99b-97402738098f",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "d08e0aa4-f9d2-4bc1-b99b-97402738098f",
    "client_id": "nodejs"
  }
}
2020-01-18 20:55:20.720 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 20:55:20.728 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:55:20.729 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:55:20.729 +01:00 [DBG] No PKCE used.
2020-01-18 20:55:20.729 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:55:24.621 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 20:55:24.639 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSA15P78FK:0000000D",
  "TimeStamp": "2020-01-18T19:55:24Z",
  "ProcessId": 15392,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:55:24.645 +01:00 [DBG] Augmenting SignInContext
2020-01-18 20:55:24.647 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 20:55:24.647 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 20:55:24.652 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 20:55:24.670 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:24.671 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:24.672 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 20:55:24.673 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 20:55:24.673 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 20:55:24.676 +01:00 [DBG] Start authorize callback request
2020-01-18 20:55:24.680 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 20:55:24.680 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:55:24.682 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:55:24.682 +01:00 [DBG] No PKCE used.
2020-01-18 20:55:24.682 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:55:24.683 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "d08e0aa4-f9d2-4bc1-b99b-97402738098f",
  "SessionId": "0d3d8ac7eb85ea049d75b82c8fc60f94",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "d08e0aa4-f9d2-4bc1-b99b-97402738098f",
    "client_id": "nodejs"
  }
}
2020-01-18 20:55:51.705 +01:00 [INF] Showing login: User is not active
2020-01-18 20:55:51.711 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:51.712 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:55:51.713 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:55:51.713 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:55:51.713 +01:00 [DBG] No PKCE used.
2020-01-18 20:55:51.714 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:56:02.425 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:56:02.426 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:56:12.010 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 20:56:12.012 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:56:12.012 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:56:12.014 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSA15P78FK:00000011",
  "TimeStamp": "2020-01-18T19:56:12Z",
  "ProcessId": 15392,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:56:12.015 +01:00 [DBG] Augmenting SignInContext
2020-01-18 20:56:12.016 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 20:56:12.016 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 20:56:12.017 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 20:56:12.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:56:12.027 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:56:12.028 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 20:56:12.029 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 20:56:12.030 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 20:56:12.031 +01:00 [DBG] Start authorize callback request
2020-01-18 20:56:12.031 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 20:56:12.031 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:56:12.031 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:56:12.032 +01:00 [DBG] No PKCE used.
2020-01-18 20:56:12.032 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:56:12.033 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "d08e0aa4-f9d2-4bc1-b99b-97402738098f",
  "SessionId": "6f6877374a76fb548da87f08b473e856",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "d08e0aa4-f9d2-4bc1-b99b-97402738098f",
    "client_id": "nodejs"
  }
}
2020-01-18 20:57:31.143 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 20:57:31.237 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 20:57:31.240 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 20:57:31.242 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 20:57:31.243 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 20:57:31.243 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 20:57:39.642 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:39.649 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:39.817 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:57:39.825 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:57:39.826 +01:00 [DBG] No PKCE used.
2020-01-18 20:57:39.847 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:57:42.861 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:42.861 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:42.861 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:42.861 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:42.863 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:42.864 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:42.865 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:42.869 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:42.878 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:42.880 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:42.963 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:42.964 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:50.817 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:50.818 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:50.820 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 20:57:50.824 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 20:57:50.825 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 20:57:50.827 +01:00 [DBG] Start authorize request
2020-01-18 20:57:50.831 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 20:57:50.831 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:57:50.831 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:57:50.832 +01:00 [DBG] No PKCE used.
2020-01-18 20:57:50.832 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:57:50.883 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "9602c5b7-8010-4e7c-88f2-e9e0c57a90ca",
  "SessionId": "6f6877374a76fb548da87f08b473e856",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "9602c5b7-8010-4e7c-88f2-e9e0c57a90ca",
    "client_id": "nodejs"
  }
}
2020-01-18 20:57:54.513 +01:00 [INF] Showing login: User is not active
2020-01-18 20:57:54.521 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:54.522 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:54.524 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:57:54.524 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:57:54.524 +01:00 [DBG] No PKCE used.
2020-01-18 20:57:54.525 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:57:54.557 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:54.558 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:54.558 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:54.558 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:54.558 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:54.559 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:54.560 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:54.566 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:54.585 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:54.586 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:54.629 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:57:54.630 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:10.632 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:10.633 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:10.634 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 20:58:10.635 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 20:58:10.635 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 20:58:10.636 +01:00 [DBG] Start authorize request
2020-01-18 20:58:10.636 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 20:58:10.636 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:58:10.637 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:58:10.637 +01:00 [DBG] No PKCE used.
2020-01-18 20:58:10.637 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:58:10.638 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
  "SessionId": "6f6877374a76fb548da87f08b473e856",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
    "client_id": "nodejs"
  }
}
2020-01-18 20:58:39.758 +01:00 [INF] Showing login: User is not active
2020-01-18 20:58:39.770 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:39.771 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:39.772 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:58:39.772 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:58:39.773 +01:00 [DBG] No PKCE used.
2020-01-18 20:58:39.773 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:58:39.812 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:39.812 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:39.813 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:39.814 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:39.814 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:39.842 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:39.842 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:39.842 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:39.864 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:39.869 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:39.915 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:39.916 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:47.203 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 20:58:47.204 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:47.205 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:47.264 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSA2M21P7U:00000005",
  "TimeStamp": "2020-01-18T19:58:47Z",
  "ProcessId": 13240,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:58:47.272 +01:00 [DBG] Augmenting SignInContext
2020-01-18 20:58:47.273 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 20:58:47.274 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 20:58:47.281 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 20:58:47.299 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:47.300 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:58:47.301 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 20:58:47.302 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 20:58:47.302 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 20:58:47.305 +01:00 [DBG] Start authorize callback request
2020-01-18 20:58:47.308 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 20:58:47.309 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:58:47.310 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:58:47.310 +01:00 [DBG] No PKCE used.
2020-01-18 20:58:47.311 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:58:47.312 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
  "SessionId": "29826e6e2be1dff4e12049d24015ba54",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
    "client_id": "nodejs"
  }
}
2020-01-18 20:58:55.100 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 20:58:55.103 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 20:58:55.134 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api1",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****f858"
    }
  ],
  "ActivityId": "0HLSSA2M21P7U:00000006",
  "TimeStamp": "2020-01-18T19:58:55Z",
  "ProcessId": 13240,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:58:55.139 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
  "Scope": "openid profile api1"
}
2020-01-18 20:58:55.148 +01:00 [DBG] Augmenting SignInContext
2020-01-18 20:58:55.148 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 20:58:55.170 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 20:58:55.173 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 20:58:55.174 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 20:58:55.177 +01:00 [DBG] Start token request.
2020-01-18 20:58:55.180 +01:00 [DBG] Start client validation
2020-01-18 20:58:55.182 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 20:58:55.183 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 20:58:55.183 +01:00 [DBG] Secret id found: nodejs
2020-01-18 20:58:55.188 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 20:58:55.189 +01:00 [DBG] Client validation success
2020-01-18 20:58:55.193 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSA2M21P7V:00000001",
  "TimeStamp": "2020-01-18T19:58:55Z",
  "ProcessId": 13240,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 20:58:55.196 +01:00 [DBG] Start token request validation
2020-01-18 20:58:55.201 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 20:58:57.146 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Erazer.IdentityProvider.Profile.ProfileService.<IsActiveAsync>d__3.MoveNext() in Y:\\ErazerSSO\\Erazer.IdentityProvider\\Profile\\ProfileService.cs:line 30\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at IdentityServer4.Validation.TokenRequestValidator.<ValidateAuthorizationCodeRequestAsync>d__15.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\TokenRequestValidator.cs:line 305\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Validation.TokenRequestValidator.<RunValidationAsync>d__14.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\TokenRequestValidator.cs:line 142\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Validation.TokenRequestValidator.<ValidateRequestAsync>d__13.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\TokenRequestValidator.cs:line 127\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 70\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 54",
  "Message": "Object reference not set to an instance of an object.",
  "ActivityId": "0HLSSA2M21P7V:00000001",
  "TimeStamp": "2020-01-18T19:58:57Z",
  "ProcessId": 13240,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 20:58:57.151 +01:00 [FTL] Unhandled exception: Object reference not set to an instance of an object.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<IsActiveAsync>d__3.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 30
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateAuthorizationCodeRequestAsync>d__15.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 305
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<RunValidationAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 142
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateRequestAsync>d__13.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 127
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
2020-01-18 20:58:57.204 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<IsActiveAsync>d__3.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 30
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateAuthorizationCodeRequestAsync>d__15.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 305
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<RunValidationAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 142
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateRequestAsync>d__13.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 127
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-18 20:59:15.788 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 20:59:15.790 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:59:15.790 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:59:15.793 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSA2M21P7U:00000007",
  "TimeStamp": "2020-01-18T19:59:15Z",
  "ProcessId": 13240,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:59:15.794 +01:00 [DBG] Augmenting SignInContext
2020-01-18 20:59:15.794 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 20:59:15.794 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 20:59:15.795 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 20:59:15.805 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:59:15.807 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 20:59:15.808 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 20:59:15.808 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 20:59:15.809 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 20:59:15.810 +01:00 [DBG] Start authorize callback request
2020-01-18 20:59:15.810 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 20:59:15.810 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 20:59:15.811 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 20:59:15.811 +01:00 [DBG] No PKCE used.
2020-01-18 20:59:15.812 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 20:59:15.812 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
  "SessionId": "04d1599f4e80e46d9529e5ae37981ee9",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
    "client_id": "nodejs"
  }
}
2020-01-18 20:59:41.642 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 20:59:46.743 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 20:59:50.202 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api1",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d1d2"
    }
  ],
  "ActivityId": "0HLSSA2M21P7U:00000008",
  "TimeStamp": "2020-01-18T19:59:50Z",
  "ProcessId": 13240,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 20:59:50.804 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
  "Scope": "openid profile api1"
}
2020-01-18 20:59:58.610 +01:00 [DBG] Augmenting SignInContext
2020-01-18 20:59:58.610 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:00:05.085 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:00:05.087 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:00:05.089 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:00:05.090 +01:00 [DBG] Start token request.
2020-01-18 21:00:05.090 +01:00 [DBG] Start client validation
2020-01-18 21:00:05.090 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:00:05.090 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:00:05.091 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:00:05.091 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:00:05.091 +01:00 [DBG] Client validation success
2020-01-18 21:00:05.092 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSA2M21P80:00000001",
  "TimeStamp": "2020-01-18T20:00:05Z",
  "ProcessId": 13240,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:00:05.169 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "System.Threading.Tasks.TaskCanceledException: A task was canceled.\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at System.IO.StreamReader.<ReadBufferAsync>d__65.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()\r\n   at System.IO.StreamReader.<ReadAsyncInternal>d__63.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.WebUtilities.FormReader.<BufferAsync>d__41.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.WebUtilities.FormReader.<ReadNextPairAsyncImpl>d__34.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at Microsoft.AspNetCore.WebUtilities.FormReader.<ReadFormAsync>d__43.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at Microsoft.AspNetCore.Http.Features.FormFeature.<InnerReadFormAsync>d__18.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 86\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 70\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 54",
  "Message": "A task was canceled.",
  "ActivityId": "0HLSSA2M21P80:00000001",
  "TimeStamp": "2020-01-18T20:00:05Z",
  "ProcessId": 13240,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:00:05.176 +01:00 [FTL] Unhandled exception: A task was canceled.
System.Threading.Tasks.TaskCanceledException: A task was canceled.
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()
   at System.IO.StreamReader.<ReadBufferAsync>d__65.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()
   at System.IO.StreamReader.<ReadAsyncInternal>d__63.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Microsoft.AspNetCore.WebUtilities.FormReader.<BufferAsync>d__41.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.WebUtilities.FormReader.<ReadNextPairAsyncImpl>d__34.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.WebUtilities.FormReader.<ReadFormAsync>d__43.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Microsoft.AspNetCore.Http.Features.FormFeature.<InnerReadFormAsync>d__18.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 86
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
2020-01-18 21:00:05.239 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.Threading.Tasks.TaskCanceledException: A task was canceled.
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()
   at System.IO.StreamReader.<ReadBufferAsync>d__65.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()
   at System.IO.StreamReader.<ReadAsyncInternal>d__63.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Microsoft.AspNetCore.WebUtilities.FormReader.<BufferAsync>d__41.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.WebUtilities.FormReader.<ReadNextPairAsyncImpl>d__34.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.WebUtilities.FormReader.<ReadFormAsync>d__43.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at Microsoft.AspNetCore.Http.Features.FormFeature.<InnerReadFormAsync>d__18.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 86
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-18 21:00:11.822 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:00:11.825 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:00:11.826 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:00:11.827 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSA2M21P7U:00000009",
  "TimeStamp": "2020-01-18T20:00:11Z",
  "ProcessId": 13240,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:00:11.828 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:00:11.828 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:00:11.829 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:00:11.829 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:00:11.836 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:00:11.837 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:00:11.837 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:00:11.838 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:00:11.838 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:00:11.839 +01:00 [DBG] Start authorize callback request
2020-01-18 21:00:11.839 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:00:11.839 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:00:11.840 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:00:11.840 +01:00 [DBG] No PKCE used.
2020-01-18 21:00:11.840 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:00:11.841 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
  "SessionId": "c804a525d962e9ba5fbccb94677ad2cb",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
    "client_id": "nodejs"
  }
}
2020-01-18 21:00:19.539 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:00:19.539 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:00:19.547 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api1",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****2bb4"
    }
  ],
  "ActivityId": "0HLSSA2M21P7U:0000000A",
  "TimeStamp": "2020-01-18T20:00:19Z",
  "ProcessId": 13240,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:00:19.548 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
  "Scope": "openid profile api1"
}
2020-01-18 21:00:19.549 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:00:19.550 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:00:19.559 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:00:19.560 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:00:19.560 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:00:19.561 +01:00 [DBG] Start token request.
2020-01-18 21:00:19.561 +01:00 [DBG] Start client validation
2020-01-18 21:00:19.561 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:00:19.562 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:00:19.562 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:00:19.562 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:00:19.563 +01:00 [DBG] Client validation success
2020-01-18 21:00:19.563 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSA2M21P81:00000001",
  "TimeStamp": "2020-01-18T20:00:19Z",
  "ProcessId": 13240,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:00:19.564 +01:00 [DBG] Start token request validation
2020-01-18 21:00:19.564 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 21:00:20.422 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Erazer.IdentityProvider.Profile.ProfileService.<IsActiveAsync>d__3.MoveNext() in Y:\\ErazerSSO\\Erazer.IdentityProvider\\Profile\\ProfileService.cs:line 30\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at IdentityServer4.Validation.TokenRequestValidator.<ValidateAuthorizationCodeRequestAsync>d__15.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\TokenRequestValidator.cs:line 305\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Validation.TokenRequestValidator.<RunValidationAsync>d__14.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\TokenRequestValidator.cs:line 142\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Validation.TokenRequestValidator.<ValidateRequestAsync>d__13.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\TokenRequestValidator.cs:line 127\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 70\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 54",
  "Message": "Object reference not set to an instance of an object.",
  "ActivityId": "0HLSSA2M21P81:00000001",
  "TimeStamp": "2020-01-18T20:00:20Z",
  "ProcessId": 13240,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:00:20.429 +01:00 [FTL] Unhandled exception: Object reference not set to an instance of an object.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<IsActiveAsync>d__3.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 30
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateAuthorizationCodeRequestAsync>d__15.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 305
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<RunValidationAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 142
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateRequestAsync>d__13.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 127
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
2020-01-18 21:00:20.484 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<IsActiveAsync>d__3.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 30
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateAuthorizationCodeRequestAsync>d__15.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 305
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<RunValidationAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 142
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateRequestAsync>d__13.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 127
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-18 21:00:58.569 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:00:58.571 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:00:58.571 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:00:58.573 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSA2M21P7U:0000000B",
  "TimeStamp": "2020-01-18T20:00:58Z",
  "ProcessId": 13240,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:00:58.573 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:00:58.574 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:00:58.574 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:00:58.574 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:00:58.583 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:00:58.584 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:00:58.585 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:00:58.585 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:00:58.586 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:00:58.586 +01:00 [DBG] Start authorize callback request
2020-01-18 21:00:58.586 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:00:58.587 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:00:58.587 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:00:58.587 +01:00 [DBG] No PKCE used.
2020-01-18 21:00:58.588 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:00:58.588 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
  "SessionId": "31066a6268523c7bc89a9f2af1a4b95b",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
    "client_id": "nodejs"
  }
}
2020-01-18 21:01:43.346 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:01:43.346 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:01:43.353 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api1",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****5bb5"
    }
  ],
  "ActivityId": "0HLSSA2M21P7U:0000000C",
  "TimeStamp": "2020-01-18T20:01:43Z",
  "ProcessId": 13240,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:01:43.355 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
  "Scope": "openid profile api1"
}
2020-01-18 21:01:43.355 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:01:43.356 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:01:43.367 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:01:43.368 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:01:43.368 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:01:43.369 +01:00 [DBG] Start token request.
2020-01-18 21:01:43.369 +01:00 [DBG] Start client validation
2020-01-18 21:01:43.369 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:01:43.370 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:01:43.370 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:01:43.370 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:01:43.371 +01:00 [DBG] Client validation success
2020-01-18 21:01:43.371 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSA2M21P82:00000001",
  "TimeStamp": "2020-01-18T20:01:43Z",
  "ProcessId": 13240,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:01:43.372 +01:00 [DBG] Start token request validation
2020-01-18 21:01:43.372 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 21:02:09.142 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Erazer.IdentityProvider.Profile.ProfileService.<IsActiveAsync>d__3.MoveNext() in Y:\\ErazerSSO\\Erazer.IdentityProvider\\Profile\\ProfileService.cs:line 30\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at IdentityServer4.Validation.TokenRequestValidator.<ValidateAuthorizationCodeRequestAsync>d__15.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\TokenRequestValidator.cs:line 305\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Validation.TokenRequestValidator.<RunValidationAsync>d__14.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\TokenRequestValidator.cs:line 142\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Validation.TokenRequestValidator.<ValidateRequestAsync>d__13.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\TokenRequestValidator.cs:line 127\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 70\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 54",
  "Message": "Object reference not set to an instance of an object.",
  "ActivityId": "0HLSSA2M21P82:00000001",
  "TimeStamp": "2020-01-18T20:02:09Z",
  "ProcessId": 13240,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:02:09.146 +01:00 [FTL] Unhandled exception: Object reference not set to an instance of an object.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<IsActiveAsync>d__3.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 30
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateAuthorizationCodeRequestAsync>d__15.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 305
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<RunValidationAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 142
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateRequestAsync>d__13.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 127
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
2020-01-18 21:02:09.202 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<IsActiveAsync>d__3.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 30
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateAuthorizationCodeRequestAsync>d__15.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 305
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<RunValidationAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 142
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateRequestAsync>d__13.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 127
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-18 21:02:11.482 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:02:11.483 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:02:11.485 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:02:11.486 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSA2M21P7U:0000000D",
  "TimeStamp": "2020-01-18T20:02:11Z",
  "ProcessId": 13240,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:02:11.488 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:02:11.488 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:02:11.488 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:02:11.489 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:02:11.495 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:02:11.496 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:02:11.496 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:02:11.497 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:02:11.498 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:02:11.498 +01:00 [DBG] Start authorize callback request
2020-01-18 21:02:11.499 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:02:11.499 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:02:11.499 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:02:11.500 +01:00 [DBG] No PKCE used.
2020-01-18 21:02:11.500 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:02:11.501 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api1",
  "State": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
  "SessionId": "877eda50fc3bb9d2e4776fcad1583b9e",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile api1",
    "response_type": "code",
    "state": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
    "client_id": "nodejs"
  }
}
2020-01-18 21:02:17.893 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:02:17.893 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:02:17.903 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api1",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****428f"
    }
  ],
  "ActivityId": "0HLSSA2M21P7U:0000000E",
  "TimeStamp": "2020-01-18T20:02:17Z",
  "ProcessId": 13240,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:02:17.905 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "f6f5588e-bd9e-4ce6-b25f-256a037e3f1f",
  "Scope": "openid profile api1"
}
2020-01-18 21:02:17.905 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:02:17.906 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:02:17.915 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:02:17.916 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:02:17.916 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:02:17.917 +01:00 [DBG] Start token request.
2020-01-18 21:02:17.917 +01:00 [DBG] Start client validation
2020-01-18 21:02:17.917 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:02:17.918 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:02:17.918 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:02:17.918 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:02:17.918 +01:00 [DBG] Client validation success
2020-01-18 21:02:17.919 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSA2M21P83:00000001",
  "TimeStamp": "2020-01-18T20:02:17Z",
  "ProcessId": 13240,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:02:17.920 +01:00 [DBG] Start token request validation
2020-01-18 21:02:17.920 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 21:25:29.329 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 21:25:29.420 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 21:25:29.423 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 21:25:29.423 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 21:25:29.423 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 21:25:29.424 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 21:25:44.915 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 21:25:44.920 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 21:25:44.921 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 21:25:44.923 +01:00 [DBG] Start discovery request
2020-01-18 21:26:00.521 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:00.525 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:00.527 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:26:00.531 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:26:00.532 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:26:00.534 +01:00 [DBG] Start authorize request
2020-01-18 21:26:00.541 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:26:00.544 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:26:00.552 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:26:00.553 +01:00 [DBG] No PKCE used.
2020-01-18 21:26:00.570 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:26:00.601 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "5434964f-a589-4359-a9c7-b2894d469c88",
  "SessionId": "877eda50fc3bb9d2e4776fcad1583b9e",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "5434964f-a589-4359-a9c7-b2894d469c88",
    "client_id": "nodejs"
  }
}
2020-01-18 21:26:13.911 +01:00 [INF] Showing login: User is not active
2020-01-18 21:26:13.920 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:13.922 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:14.073 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:26:14.074 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:26:14.074 +01:00 [DBG] No PKCE used.
2020-01-18 21:26:14.074 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:26:16.547 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:16.548 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:16.549 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:16.549 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:16.551 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:16.552 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:16.552 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:16.554 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:16.577 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:16.579 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:16.632 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:16.633 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:25.568 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:26:25.569 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:25.570 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:25.637 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSAICABM7T:00000003",
  "TimeStamp": "2020-01-18T20:26:25Z",
  "ProcessId": 14068,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:26:25.646 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:26:25.648 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:26:25.648 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:26:25.657 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:26:25.679 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:25.681 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:26:25.683 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:26:25.686 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:26:25.687 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:26:25.692 +01:00 [DBG] Start authorize callback request
2020-01-18 21:26:25.696 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:26:25.697 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:26:25.698 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:26:25.698 +01:00 [DBG] No PKCE used.
2020-01-18 21:26:25.700 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:26:25.701 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "5434964f-a589-4359-a9c7-b2894d469c88",
  "SessionId": "3bc8ca6fd79923e438a567af031cefcc",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "5434964f-a589-4359-a9c7-b2894d469c88",
    "client_id": "nodejs"
  }
}
2020-01-18 21:26:31.225 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:26:31.228 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:26:31.261 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****a0e3"
    }
  ],
  "ActivityId": "0HLSSAICABM7T:00000004",
  "TimeStamp": "2020-01-18T20:26:31Z",
  "ProcessId": 14068,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:26:31.267 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "5434964f-a589-4359-a9c7-b2894d469c88",
  "Scope": "openid profile"
}
2020-01-18 21:26:31.275 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:26:31.276 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:26:31.299 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:26:31.306 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:26:31.308 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:26:31.316 +01:00 [DBG] Start token request.
2020-01-18 21:26:31.319 +01:00 [DBG] Start client validation
2020-01-18 21:26:31.325 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:26:31.326 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:26:31.327 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:26:31.335 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:26:31.335 +01:00 [DBG] Client validation success
2020-01-18 21:26:31.342 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSAICABM7U:00000001",
  "TimeStamp": "2020-01-18T20:26:31Z",
  "ProcessId": 14068,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:26:31.348 +01:00 [DBG] Start token request validation
2020-01-18 21:26:31.352 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 21:26:47.581 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Erazer.IdentityProvider.Profile.ProfileService.<IsActiveAsync>d__3.MoveNext() in Y:\\ErazerSSO\\Erazer.IdentityProvider\\Profile\\ProfileService.cs:line 30\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at IdentityServer4.Validation.TokenRequestValidator.<ValidateAuthorizationCodeRequestAsync>d__15.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\TokenRequestValidator.cs:line 305\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Validation.TokenRequestValidator.<RunValidationAsync>d__14.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\TokenRequestValidator.cs:line 142\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Validation.TokenRequestValidator.<ValidateRequestAsync>d__13.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\TokenRequestValidator.cs:line 127\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 70\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 54",
  "Message": "Object reference not set to an instance of an object.",
  "ActivityId": "0HLSSAICABM7U:00000001",
  "TimeStamp": "2020-01-18T20:26:47Z",
  "ProcessId": 14068,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:26:47.587 +01:00 [FTL] Unhandled exception: Object reference not set to an instance of an object.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<IsActiveAsync>d__3.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 30
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateAuthorizationCodeRequestAsync>d__15.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 305
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<RunValidationAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 142
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateRequestAsync>d__13.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 127
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
2020-01-18 21:26:47.651 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<IsActiveAsync>d__3.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 30
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateAuthorizationCodeRequestAsync>d__15.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 305
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<RunValidationAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 142
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.TokenRequestValidator.<ValidateRequestAsync>d__13.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\TokenRequestValidator.cs:line 127
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-18 21:27:09.038 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:27:09.041 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:27:09.042 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:27:09.044 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSAICABM7T:00000005",
  "TimeStamp": "2020-01-18T20:27:09Z",
  "ProcessId": 14068,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:27:09.045 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:27:09.046 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:27:09.046 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:27:09.047 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:27:09.054 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:27:09.055 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:27:09.056 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:27:09.057 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:27:09.057 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:27:09.059 +01:00 [DBG] Start authorize callback request
2020-01-18 21:27:09.059 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:27:09.060 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:27:09.060 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:27:09.060 +01:00 [DBG] No PKCE used.
2020-01-18 21:27:09.061 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:27:09.062 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "5434964f-a589-4359-a9c7-b2894d469c88",
  "SessionId": "6853190170985f2ff427af955b6270d0",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "5434964f-a589-4359-a9c7-b2894d469c88",
    "client_id": "nodejs"
  }
}
2020-01-18 21:28:01.681 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 21:28:01.773 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 21:28:01.777 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 21:28:01.777 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 21:28:01.777 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 21:28:01.778 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 21:28:06.316 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:06.324 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:06.483 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:28:06.493 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:28:06.495 +01:00 [DBG] No PKCE used.
2020-01-18 21:28:06.513 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:28:09.106 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:09.106 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:09.106 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:09.106 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:09.107 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:09.108 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:09.108 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:09.110 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:09.144 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:09.145 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:09.197 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:09.197 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:14.295 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:28:14.297 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:14.297 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:14.386 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSAJMEK9F3:00000004",
  "TimeStamp": "2020-01-18T20:28:14Z",
  "ProcessId": 12156,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:28:14.394 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:28:14.395 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:28:14.395 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:28:14.403 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:28:14.422 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:14.422 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:28:14.423 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:28:14.427 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:28:14.427 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:28:14.430 +01:00 [DBG] Start authorize callback request
2020-01-18 21:28:14.436 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:28:14.437 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:28:14.437 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:28:14.437 +01:00 [DBG] No PKCE used.
2020-01-18 21:28:14.438 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:28:14.467 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "5434964f-a589-4359-a9c7-b2894d469c88",
  "SessionId": "46f0bd47c9e4579932113b994ba3a4b3",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "5434964f-a589-4359-a9c7-b2894d469c88",
    "client_id": "nodejs"
  }
}
2020-01-18 21:28:16.969 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:28:16.971 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:28:17.002 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****28e5"
    }
  ],
  "ActivityId": "0HLSSAJMEK9F3:00000005",
  "TimeStamp": "2020-01-18T20:28:16Z",
  "ProcessId": 12156,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:28:17.007 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "5434964f-a589-4359-a9c7-b2894d469c88",
  "Scope": "openid profile"
}
2020-01-18 21:28:17.015 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:28:17.016 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:28:17.032 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:28:17.035 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:28:17.036 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:28:17.041 +01:00 [DBG] Start token request.
2020-01-18 21:28:17.046 +01:00 [DBG] Start client validation
2020-01-18 21:28:17.049 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:28:17.050 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:28:17.051 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:28:17.059 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:28:17.059 +01:00 [DBG] Client validation success
2020-01-18 21:28:17.066 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSAJMEK9F6:00000001",
  "TimeStamp": "2020-01-18T20:28:17Z",
  "ProcessId": 12156,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:28:17.073 +01:00 [DBG] Start token request validation
2020-01-18 21:28:17.077 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 21:28:17.850 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 21:28:17.856 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "732d11fa6fd02c8acef6983b2ff9915b60505b80d5a7239e02bf11b4ae6328e5",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "732d11fa6fd02c8acef6983b2ff9915b60505b80d5a7239e02bf11b4ae6328e5",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "5434964f-a589-4359-a9c7-b2894d469c88"
  }
}
2020-01-18 21:28:17.866 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 21:28:17.867 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 21:28:45.290 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 21:28:45.294 +01:00 [DBG] Issued claims: []
2020-01-18 21:28:45.532 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\\ErazerSSO\\Erazer.IdentityProvider\\Profile\\ProfileService.cs:line 24\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultClaimsService.cs:line 200\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultTokenService.cs:line 159\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 312\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 133\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 98\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 70\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 54",
  "Message": "Object reference not set to an instance of an object.",
  "ActivityId": "0HLSSAJMEK9F6:00000001",
  "TimeStamp": "2020-01-18T20:28:45Z",
  "ProcessId": 12156,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:28:45.543 +01:00 [FTL] Unhandled exception: Object reference not set to an instance of an object.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 24
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
2020-01-18 21:28:45.598 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 24
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-18 21:29:23.684 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 21:29:23.760 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 21:29:23.762 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 21:29:23.763 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 21:29:23.763 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 21:29:23.763 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 21:30:12.737 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:30:12.784 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:12.790 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:13.033 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSAKS4IRH0:00000001",
  "TimeStamp": "2020-01-18T20:30:12Z",
  "ProcessId": 17232,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:30:13.042 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:30:13.044 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:30:13.044 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:30:13.052 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:30:13.080 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:13.081 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:13.082 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:30:13.086 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:30:13.086 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:30:13.090 +01:00 [DBG] Start authorize callback request
2020-01-18 21:30:13.097 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:30:13.100 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:30:13.111 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:30:13.113 +01:00 [DBG] No PKCE used.
2020-01-18 21:30:13.138 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:30:13.177 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "5434964f-a589-4359-a9c7-b2894d469c88",
  "SessionId": "0bebb1904e54fa28be2e79f681d742f5",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "5434964f-a589-4359-a9c7-b2894d469c88",
    "client_id": "nodejs"
  }
}
2020-01-18 21:30:41.403 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 21:30:41.444 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 21:30:41.447 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 21:30:41.447 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 21:30:41.447 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 21:30:41.447 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 21:30:45.700 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:45.714 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:47.606 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:47.606 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:47.607 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:47.608 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:47.608 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:47.608 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:47.611 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:47.612 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:47.635 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:47.635 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:47.636 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:47.637 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:47.719 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:30:47.720 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:31:01.662 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:31:01.663 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:31:01.666 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:31:01.671 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:31:01.671 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:31:01.675 +01:00 [DBG] Start authorize request
2020-01-18 21:31:01.683 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:31:01.690 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:31:01.703 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:31:01.704 +01:00 [DBG] No PKCE used.
2020-01-18 21:31:01.730 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:31:01.790 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "b2756ec8-2358-4ec3-9c1d-f3b98f84f96f",
  "SessionId": "0bebb1904e54fa28be2e79f681d742f5",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "b2756ec8-2358-4ec3-9c1d-f3b98f84f96f",
    "client_id": "nodejs"
  }
}
2020-01-18 21:31:01.808 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:31:01.814 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:31:01.865 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****f1c7"
    }
  ],
  "ActivityId": "0HLSSAL5UTBEV:00000005",
  "TimeStamp": "2020-01-18T20:31:01Z",
  "ProcessId": 9044,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:31:01.869 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "b2756ec8-2358-4ec3-9c1d-f3b98f84f96f",
  "Scope": "openid profile"
}
2020-01-18 21:31:01.888 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:31:01.895 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:31:01.915 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:31:01.919 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:31:01.920 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:31:01.929 +01:00 [DBG] Start token request.
2020-01-18 21:31:01.935 +01:00 [DBG] Start client validation
2020-01-18 21:31:01.941 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:31:01.942 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:31:01.944 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:31:01.953 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:31:01.954 +01:00 [DBG] Client validation success
2020-01-18 21:31:01.959 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSAL5UTBF3:00000001",
  "TimeStamp": "2020-01-18T20:31:01Z",
  "ProcessId": 9044,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:31:01.970 +01:00 [DBG] Start token request validation
2020-01-18 21:31:01.980 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 21:31:02.013 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 21:31:02.017 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "ad061e8452acf949f823bab7fb997d88b0cfdf9244a72491cdfd7192c4adf1c7",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "ad061e8452acf949f823bab7fb997d88b0cfdf9244a72491cdfd7192c4adf1c7",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "b2756ec8-2358-4ec3-9c1d-f3b98f84f96f"
  }
}
2020-01-18 21:31:02.042 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 21:31:02.042 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 21:31:02.048 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 21:31:02.051 +01:00 [DBG] Issued claims: []
2020-01-18 21:31:02.109 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:31:02.110 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 21:31:02.115 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****w3SA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****dr8g"
    }
  ],
  "ActivityId": "0HLSSAL5UTBF3:00000001",
  "TimeStamp": "2020-01-18T20:31:02Z",
  "ProcessId": 9044,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:31:02.116 +01:00 [DBG] Token request success.
2020-01-18 21:31:02.134 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 21:31:02.135 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 21:31:02.136 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 21:31:02.139 +01:00 [DBG] Start key discovery request
2020-01-18 21:31:02.173 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 21:31:02.175 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 21:31:02.176 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 21:31:02.182 +01:00 [DBG] Start userinfo request
2020-01-18 21:31:02.184 +01:00 [DBG] Bearer token found in header
2020-01-18 21:31:02.241 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 21:31:02.245 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579379462,
    "exp": 1579383062,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579379413,
    "idp": "local",
    "scope": [
      "openid",
      "profile"
    ],
    "amr": "pwd"
  }
}
2020-01-18 21:31:02.252 +01:00 [DBG] Creating userinfo response
2020-01-18 21:31:02.255 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:31:02.259 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:31:02.262 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 21:31:02.262 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:31:02.263 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 21:31:02.269 +01:00 [DBG] Issued claims: ["sub"]
2020-01-18 21:31:02.269 +01:00 [INF] Profile service returned to the following claim types: sub
2020-01-18 21:31:02.271 +01:00 [DBG] End userinfo request
2020-01-18 21:31:02.580 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 21:31:02.581 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 21:31:02.582 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 21:31:02.585 +01:00 [DBG] Start discovery request
2020-01-18 21:31:02.642 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 21:31:02.642 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 21:31:02.643 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 21:31:02.643 +01:00 [DBG] Start key discovery request
2020-01-18 21:31:30.317 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:31:30.318 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:31:30.319 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:31:30.319 +01:00 [DBG] Start authorize request
2020-01-18 21:31:30.320 +01:00 [DBG] No user present in authorize request
2020-01-18 21:31:30.320 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:31:30.321 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:31:30.321 +01:00 [DBG] No PKCE used.
2020-01-18 21:31:30.321 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:31:30.322 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "08ab00ea-4e83-4d73-b6c3-4629d91f124a",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "08ab00ea-4e83-4d73-b6c3-4629d91f124a",
    "client_id": "nodejs"
  }
}
2020-01-18 21:31:30.323 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 21:31:30.379 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:31:30.380 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:31:30.380 +01:00 [DBG] No PKCE used.
2020-01-18 21:31:30.380 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:31:42.247 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:31:42.271 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSAL5UTBF0:00000005",
  "TimeStamp": "2020-01-18T20:31:42Z",
  "ProcessId": 9044,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:31:42.279 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:31:42.280 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:31:42.280 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:31:42.281 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:31:42.290 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:31:42.291 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:31:42.292 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:31:42.293 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:31:42.293 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:31:42.298 +01:00 [DBG] Start authorize callback request
2020-01-18 21:31:42.302 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:31:42.303 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:31:42.303 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:31:42.303 +01:00 [DBG] No PKCE used.
2020-01-18 21:31:42.304 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:31:42.304 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "08ab00ea-4e83-4d73-b6c3-4629d91f124a",
  "SessionId": "28f635e07b6ecc7a86343cfe47c42c0a",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "08ab00ea-4e83-4d73-b6c3-4629d91f124a",
    "client_id": "nodejs"
  }
}
2020-01-18 21:31:42.306 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:31:42.306 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:31:42.312 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****c419"
    }
  ],
  "ActivityId": "0HLSSAL5UTBF0:00000006",
  "TimeStamp": "2020-01-18T20:31:42Z",
  "ProcessId": 9044,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:31:42.313 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "08ab00ea-4e83-4d73-b6c3-4629d91f124a",
  "Scope": "openid profile"
}
2020-01-18 21:31:42.314 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:31:42.314 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:31:42.334 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:31:42.335 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:31:42.336 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:31:42.336 +01:00 [DBG] Start token request.
2020-01-18 21:31:42.337 +01:00 [DBG] Start client validation
2020-01-18 21:31:42.337 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:31:42.337 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:31:42.338 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:31:42.338 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:31:42.342 +01:00 [DBG] Client validation success
2020-01-18 21:31:42.343 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSAL5UTBF7:00000001",
  "TimeStamp": "2020-01-18T20:31:42Z",
  "ProcessId": 9044,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:31:42.348 +01:00 [DBG] Start token request validation
2020-01-18 21:31:42.349 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 21:31:42.359 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 21:31:42.359 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "75fc143eacb58065e74b25c3d95c7ea121812729c8980e1589f07044a65bc419",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "75fc143eacb58065e74b25c3d95c7ea121812729c8980e1589f07044a65bc419",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "08ab00ea-4e83-4d73-b6c3-4629d91f124a"
  }
}
2020-01-18 21:31:42.360 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 21:31:42.360 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 21:31:42.361 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 21:31:42.361 +01:00 [DBG] Issued claims: []
2020-01-18 21:31:42.365 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:31:42.365 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 21:31:42.368 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****nYjA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****IliA"
    }
  ],
  "ActivityId": "0HLSSAL5UTBF7:00000001",
  "TimeStamp": "2020-01-18T20:31:42Z",
  "ProcessId": 9044,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:31:42.369 +01:00 [DBG] Token request success.
2020-01-18 21:31:42.385 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 21:31:42.386 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 21:31:42.386 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 21:31:42.387 +01:00 [DBG] Start userinfo request
2020-01-18 21:31:42.387 +01:00 [DBG] Bearer token found in header
2020-01-18 21:31:42.389 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 21:31:42.390 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579379502,
    "exp": 1579383102,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579379502,
    "idp": "local",
    "scope": [
      "openid",
      "profile"
    ],
    "amr": "pwd"
  }
}
2020-01-18 21:31:42.391 +01:00 [DBG] Creating userinfo response
2020-01-18 21:31:42.392 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:31:42.392 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:31:42.392 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 21:31:42.393 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:31:42.393 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 21:31:42.395 +01:00 [DBG] Issued claims: ["sub"]
2020-01-18 21:31:42.395 +01:00 [INF] Profile service returned to the following claim types: sub
2020-01-18 21:31:42.396 +01:00 [DBG] End userinfo request
2020-01-18 21:32:26.755 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:32:26.756 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:32:26.757 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:32:26.758 +01:00 [DBG] Start authorize request
2020-01-18 21:32:26.758 +01:00 [DBG] No user present in authorize request
2020-01-18 21:32:26.759 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:32:26.759 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:32:26.759 +01:00 [DBG] No PKCE used.
2020-01-18 21:32:26.760 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:32:26.761 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "/home",
  "Raw": {
    "state": "/home",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "client_id": "nodejs"
  }
}
2020-01-18 21:32:26.762 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 21:32:26.768 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:32:26.769 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:32:26.769 +01:00 [DBG] No PKCE used.
2020-01-18 21:32:26.770 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:32:33.403 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:32:33.405 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSAL5UTBF2:00000007",
  "TimeStamp": "2020-01-18T20:32:33Z",
  "ProcessId": 9044,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:32:33.406 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:32:33.406 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:32:33.407 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:32:33.408 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:32:33.418 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:32:33.418 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:32:33.419 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:32:33.419 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:32:33.420 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:32:33.420 +01:00 [DBG] Start authorize callback request
2020-01-18 21:32:33.421 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:32:33.421 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:32:33.421 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:32:33.422 +01:00 [DBG] No PKCE used.
2020-01-18 21:32:33.422 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:32:33.422 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "/home",
  "SessionId": "ce025f02fb771c78fbe875731ee93082",
  "Raw": {
    "state": "/home",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "client_id": "nodejs"
  }
}
2020-01-18 21:32:33.424 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:32:33.424 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:32:33.431 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****f557"
    }
  ],
  "ActivityId": "0HLSSAL5UTBF2:00000008",
  "TimeStamp": "2020-01-18T20:32:33Z",
  "ProcessId": 9044,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:32:33.433 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "/home",
  "Scope": "openid profile"
}
2020-01-18 21:32:33.434 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:32:33.434 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:32:33.454 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:32:33.454 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:32:33.455 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:32:33.455 +01:00 [DBG] Start token request.
2020-01-18 21:32:33.455 +01:00 [DBG] Start client validation
2020-01-18 21:32:33.456 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:32:33.456 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:32:33.456 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:32:33.457 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:32:33.457 +01:00 [DBG] Client validation success
2020-01-18 21:32:33.458 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSAL5UTBF9:00000001",
  "TimeStamp": "2020-01-18T20:32:33Z",
  "ProcessId": 9044,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:32:33.459 +01:00 [DBG] Start token request validation
2020-01-18 21:32:33.459 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 21:32:33.466 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 21:32:33.466 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "6a9b7013c5e59e44899cee45047f007b425b765475b6b60357f4349d1b27f557",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "6a9b7013c5e59e44899cee45047f007b425b765475b6b60357f4349d1b27f557",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "/home"
  }
}
2020-01-18 21:32:33.467 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 21:32:33.467 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 21:32:33.468 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 21:32:33.468 +01:00 [DBG] Issued claims: []
2020-01-18 21:32:33.471 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:32:33.472 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 21:32:33.475 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****XpYg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****x9AQ"
    }
  ],
  "ActivityId": "0HLSSAL5UTBF9:00000001",
  "TimeStamp": "2020-01-18T20:32:33Z",
  "ProcessId": 9044,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:32:33.476 +01:00 [DBG] Token request success.
2020-01-18 21:32:33.485 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 21:32:33.486 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 21:32:33.486 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 21:32:33.487 +01:00 [DBG] Start key discovery request
2020-01-18 21:32:33.503 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 21:32:33.504 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 21:32:33.505 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 21:32:33.505 +01:00 [DBG] Start userinfo request
2020-01-18 21:32:33.506 +01:00 [DBG] Bearer token found in header
2020-01-18 21:32:33.509 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 21:32:33.510 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579379553,
    "exp": 1579383153,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579379553,
    "idp": "local",
    "scope": [
      "openid",
      "profile"
    ],
    "amr": "pwd"
  }
}
2020-01-18 21:32:33.512 +01:00 [DBG] Creating userinfo response
2020-01-18 21:32:33.513 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:32:33.514 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:32:33.514 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 21:32:33.516 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:32:33.517 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 21:32:33.518 +01:00 [DBG] Issued claims: ["sub"]
2020-01-18 21:32:33.518 +01:00 [INF] Profile service returned to the following claim types: sub
2020-01-18 21:32:33.518 +01:00 [DBG] End userinfo request
2020-01-18 21:33:00.545 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 21:33:00.546 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 21:33:00.547 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 21:33:00.547 +01:00 [DBG] Start discovery request
2020-01-18 21:33:20.020 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:33:20.020 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:33:20.021 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:33:20.021 +01:00 [DBG] Start authorize request
2020-01-18 21:33:20.022 +01:00 [DBG] No user present in authorize request
2020-01-18 21:33:20.022 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:33:20.022 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:33:20.022 +01:00 [DBG] No PKCE used.
2020-01-18 21:33:20.023 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:33:20.023 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "d8115e3c-c10f-4df3-8669-d962976de8c9",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "d8115e3c-c10f-4df3-8669-d962976de8c9",
    "client_id": "nodejs"
  }
}
2020-01-18 21:33:20.025 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 21:33:20.030 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:33:20.030 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:33:20.030 +01:00 [DBG] No PKCE used.
2020-01-18 21:33:20.031 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:33:27.678 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:33:27.680 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSAL5UTBEV:0000000D",
  "TimeStamp": "2020-01-18T20:33:27Z",
  "ProcessId": 9044,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:33:27.680 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:33:27.681 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:33:27.681 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:33:27.682 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:33:27.697 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:33:27.698 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:33:27.700 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:33:27.700 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:33:27.701 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:33:27.701 +01:00 [DBG] Start authorize callback request
2020-01-18 21:33:27.702 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:33:27.702 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:33:27.702 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:33:27.702 +01:00 [DBG] No PKCE used.
2020-01-18 21:33:27.703 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:33:27.703 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "d8115e3c-c10f-4df3-8669-d962976de8c9",
  "SessionId": "6a7896bdfb7767158f3fab81063f43c7",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "d8115e3c-c10f-4df3-8669-d962976de8c9",
    "client_id": "nodejs"
  }
}
2020-01-18 21:33:27.704 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:33:27.704 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:33:27.711 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****c39f"
    }
  ],
  "ActivityId": "0HLSSAL5UTBEV:0000000E",
  "TimeStamp": "2020-01-18T20:33:27Z",
  "ProcessId": 9044,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:33:27.712 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "d8115e3c-c10f-4df3-8669-d962976de8c9",
  "Scope": "openid profile"
}
2020-01-18 21:33:27.713 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:33:27.714 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:33:27.731 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:33:27.731 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:33:27.732 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:33:27.732 +01:00 [DBG] Start token request.
2020-01-18 21:33:27.733 +01:00 [DBG] Start client validation
2020-01-18 21:33:27.733 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:33:27.733 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:33:27.734 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:33:27.734 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:33:27.735 +01:00 [DBG] Client validation success
2020-01-18 21:33:27.735 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSAL5UTBFD:00000001",
  "TimeStamp": "2020-01-18T20:33:27Z",
  "ProcessId": 9044,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:33:27.736 +01:00 [DBG] Start token request validation
2020-01-18 21:33:27.737 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 21:33:27.746 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 21:33:27.746 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "fd061e9ed052973d3c69ecc29da369d9b8f71b23cd4e59a1710b4e3acce8c39f",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "fd061e9ed052973d3c69ecc29da369d9b8f71b23cd4e59a1710b4e3acce8c39f",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "d8115e3c-c10f-4df3-8669-d962976de8c9"
  }
}
2020-01-18 21:33:27.747 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 21:33:27.748 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 21:33:27.748 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 21:33:27.749 +01:00 [DBG] Issued claims: []
2020-01-18 21:33:27.752 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:33:27.753 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 21:33:27.756 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****ZmtQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****bsEA"
    }
  ],
  "ActivityId": "0HLSSAL5UTBFD:00000001",
  "TimeStamp": "2020-01-18T20:33:27Z",
  "ProcessId": 9044,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:33:27.758 +01:00 [DBG] Token request success.
2020-01-18 21:33:27.769 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 21:33:27.769 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 21:33:27.770 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 21:33:27.771 +01:00 [DBG] Start key discovery request
2020-01-18 21:33:27.788 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 21:33:27.789 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 21:33:27.789 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 21:33:27.790 +01:00 [DBG] Start userinfo request
2020-01-18 21:33:27.791 +01:00 [DBG] Bearer token found in header
2020-01-18 21:33:27.793 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 21:33:27.793 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579379607,
    "exp": 1579383207,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579379607,
    "idp": "local",
    "scope": [
      "openid",
      "profile"
    ],
    "amr": "pwd"
  }
}
2020-01-18 21:33:27.794 +01:00 [DBG] Creating userinfo response
2020-01-18 21:33:27.795 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:33:27.795 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:33:27.795 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 21:33:27.795 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:33:27.796 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 21:33:27.800 +01:00 [DBG] Issued claims: ["sub"]
2020-01-18 21:33:27.800 +01:00 [INF] Profile service returned to the following claim types: sub
2020-01-18 21:33:27.801 +01:00 [DBG] End userinfo request
2020-01-18 21:33:51.038 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 21:33:51.135 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 21:33:51.137 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 21:33:51.137 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 21:33:51.138 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 21:33:51.138 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 21:33:53.553 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 21:33:53.558 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 21:33:53.559 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 21:33:53.561 +01:00 [DBG] Start discovery request
2020-01-18 21:33:53.738 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 21:33:53.742 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 21:33:53.743 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 21:33:53.747 +01:00 [DBG] Start key discovery request
2020-01-18 21:33:56.775 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:33:56.779 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:33:56.780 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:33:56.782 +01:00 [DBG] Start authorize request
2020-01-18 21:33:56.787 +01:00 [DBG] No user present in authorize request
2020-01-18 21:33:56.789 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:33:56.798 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:33:56.799 +01:00 [DBG] No PKCE used.
2020-01-18 21:33:56.816 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:33:56.830 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "/home",
  "Raw": {
    "state": "/home",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "client_id": "nodejs"
  }
}
2020-01-18 21:33:56.834 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 21:33:56.982 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:33:56.982 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:33:56.982 +01:00 [DBG] No PKCE used.
2020-01-18 21:33:56.983 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:34:06.839 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:34:06.894 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSAMTU96VQ:00000003",
  "TimeStamp": "2020-01-18T20:34:06Z",
  "ProcessId": 15908,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:34:06.901 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:34:06.902 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:34:06.903 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:34:06.910 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:34:06.944 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:34:06.945 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:34:06.945 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:34:06.946 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:34:06.946 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:34:06.949 +01:00 [DBG] Start authorize callback request
2020-01-18 21:34:06.952 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:34:06.952 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:34:06.953 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:34:06.953 +01:00 [DBG] No PKCE used.
2020-01-18 21:34:06.953 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:34:06.954 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "/home",
  "SessionId": "9b83f4e0c341ced4459aba432d274400",
  "Raw": {
    "state": "/home",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "client_id": "nodejs"
  }
}
2020-01-18 21:34:11.450 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:34:11.452 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:34:11.484 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****ea2b"
    }
  ],
  "ActivityId": "0HLSSAMTU96VQ:00000004",
  "TimeStamp": "2020-01-18T20:34:11Z",
  "ProcessId": 15908,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:34:11.489 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "/home",
  "Scope": "openid profile"
}
2020-01-18 21:34:11.497 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:34:11.498 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:34:35.596 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:34:35.598 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:34:35.599 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:34:35.601 +01:00 [DBG] Start authorize request
2020-01-18 21:34:35.601 +01:00 [DBG] No user present in authorize request
2020-01-18 21:34:35.602 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:34:35.602 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:34:35.602 +01:00 [DBG] No PKCE used.
2020-01-18 21:34:35.603 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:34:35.603 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "fe6ba9ba-d5cf-4351-840b-199b0e804f33",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "fe6ba9ba-d5cf-4351-840b-199b0e804f33",
    "client_id": "nodejs"
  }
}
2020-01-18 21:34:35.604 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 21:34:35.611 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:34:35.611 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:34:35.611 +01:00 [DBG] No PKCE used.
2020-01-18 21:34:35.612 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:34:46.765 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:34:46.768 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSAMTU96VP:00000005",
  "TimeStamp": "2020-01-18T20:34:46Z",
  "ProcessId": 15908,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:34:46.769 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:34:46.770 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:34:46.770 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:34:46.771 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:34:46.779 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:34:46.779 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:34:46.780 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:34:46.781 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:34:46.782 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:34:46.783 +01:00 [DBG] Start authorize callback request
2020-01-18 21:34:46.784 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:34:46.785 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:34:46.786 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:34:46.786 +01:00 [DBG] No PKCE used.
2020-01-18 21:34:46.787 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:34:46.788 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "fe6ba9ba-d5cf-4351-840b-199b0e804f33",
  "SessionId": "ddd89e5f6f91b73052a3b19e10816d41",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "fe6ba9ba-d5cf-4351-840b-199b0e804f33",
    "client_id": "nodejs"
  }
}
2020-01-18 21:34:52.503 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:34:52.508 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:34:52.515 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****081c"
    }
  ],
  "ActivityId": "0HLSSAMTU96VP:00000006",
  "TimeStamp": "2020-01-18T20:34:52Z",
  "ProcessId": 15908,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:34:52.516 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "fe6ba9ba-d5cf-4351-840b-199b0e804f33",
  "Scope": "openid profile"
}
2020-01-18 21:34:52.517 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:34:52.517 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:34:52.535 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:34:52.538 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:34:52.541 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:34:52.545 +01:00 [DBG] Start token request.
2020-01-18 21:34:52.547 +01:00 [DBG] Start client validation
2020-01-18 21:34:52.550 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:34:52.551 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:34:52.551 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:34:52.556 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:34:52.556 +01:00 [DBG] Client validation success
2020-01-18 21:34:52.560 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSAMTU96VS:00000001",
  "TimeStamp": "2020-01-18T20:34:52Z",
  "ProcessId": 15908,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:34:52.563 +01:00 [DBG] Start token request validation
2020-01-18 21:34:52.567 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 21:34:53.819 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 21:34:53.826 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "b118e4a44b1fc789349e18028571c10d732dd65c3a20456f9b1bdc2cd11d081c",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "b118e4a44b1fc789349e18028571c10d732dd65c3a20456f9b1bdc2cd11d081c",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "fe6ba9ba-d5cf-4351-840b-199b0e804f33"
  }
}
2020-01-18 21:34:53.836 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 21:34:53.837 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 21:35:25.300 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 21:35:25.303 +01:00 [DBG] Issued claims: []
2020-01-18 21:35:25.355 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:35:25.356 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 21:35:25.361 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Sn1A"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****q0Aw"
    }
  ],
  "ActivityId": "0HLSSAMTU96VS:00000001",
  "TimeStamp": "2020-01-18T20:35:25Z",
  "ProcessId": 15908,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:35:25.363 +01:00 [DBG] Token request success.
2020-01-18 21:35:41.465 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:35:41.467 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:41.468 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:42.842 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:42.843 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:42.844 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:35:42.844 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:35:42.844 +01:00 [DBG] No PKCE used.
2020-01-18 21:35:42.845 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:35:42.872 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:42.872 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:42.873 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:42.874 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:42.875 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:42.875 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:42.878 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:42.881 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:42.902 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:42.903 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:42.945 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:42.946 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:46.772 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:35:46.773 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:46.774 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:46.775 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSAMTU96VP:0000000C",
  "TimeStamp": "2020-01-18T20:35:46Z",
  "ProcessId": 15908,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:35:46.776 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:35:46.777 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:35:46.777 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:35:46.777 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:35:46.785 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:46.786 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:35:46.786 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:35:46.787 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:35:46.788 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:35:46.789 +01:00 [DBG] Start authorize callback request
2020-01-18 21:35:46.789 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:35:46.789 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:35:46.790 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:35:46.790 +01:00 [DBG] No PKCE used.
2020-01-18 21:35:46.791 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:35:46.792 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "fe6ba9ba-d5cf-4351-840b-199b0e804f33",
  "SessionId": "08a96ffd36d495838c3942f5daae5d6e",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "fe6ba9ba-d5cf-4351-840b-199b0e804f33",
    "client_id": "nodejs"
  }
}
2020-01-18 21:35:50.039 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:35:50.040 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:35:50.047 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****e5eb"
    }
  ],
  "ActivityId": "0HLSSAMTU96VP:0000000D",
  "TimeStamp": "2020-01-18T20:35:50Z",
  "ProcessId": 15908,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:35:50.048 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "fe6ba9ba-d5cf-4351-840b-199b0e804f33",
  "Scope": "openid profile"
}
2020-01-18 21:35:50.049 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:35:50.050 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:35:50.060 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:35:50.061 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:35:50.061 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:35:50.062 +01:00 [DBG] Start token request.
2020-01-18 21:35:50.062 +01:00 [DBG] Start client validation
2020-01-18 21:35:50.063 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:35:50.063 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:35:50.063 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:35:50.064 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:35:50.064 +01:00 [DBG] Client validation success
2020-01-18 21:35:50.065 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSAMTU96VT:00000001",
  "TimeStamp": "2020-01-18T20:35:50Z",
  "ProcessId": 15908,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:35:50.066 +01:00 [DBG] Start token request validation
2020-01-18 21:35:50.066 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 21:35:50.600 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 21:35:50.601 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "87df605c0bed0bb9c9e1b458250156844b55aebaaa650920d0783119245fe5eb",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "87df605c0bed0bb9c9e1b458250156844b55aebaaa650920d0783119245fe5eb",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "fe6ba9ba-d5cf-4351-840b-199b0e804f33"
  }
}
2020-01-18 21:35:50.603 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 21:35:50.604 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 21:35:51.063 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 21:35:51.065 +01:00 [DBG] Issued claims: []
2020-01-18 21:35:51.069 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:35:51.070 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 21:35:51.074 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****EvDA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****ZuJA"
    }
  ],
  "ActivityId": "0HLSSAMTU96VT:00000001",
  "TimeStamp": "2020-01-18T20:35:51Z",
  "ProcessId": 15908,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:35:51.077 +01:00 [DBG] Token request success.
2020-01-18 21:35:51.087 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 21:35:51.088 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 21:35:51.088 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 21:35:51.089 +01:00 [DBG] Start key discovery request
2020-01-18 21:35:51.107 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 21:35:51.108 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 21:35:51.109 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 21:35:51.111 +01:00 [DBG] Start userinfo request
2020-01-18 21:35:51.113 +01:00 [DBG] Bearer token found in header
2020-01-18 21:35:51.647 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 21:35:51.651 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579379751,
    "exp": 1579383351,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579379746,
    "idp": "local",
    "scope": [
      "openid",
      "profile"
    ],
    "amr": "pwd"
  }
}
2020-01-18 21:35:52.132 +01:00 [DBG] Creating userinfo response
2020-01-18 21:35:52.135 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:35:52.136 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:35:52.137 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 21:35:52.138 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:35:52.665 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 21:35:52.670 +01:00 [DBG] Issued claims: ["sub"]
2020-01-18 21:35:52.670 +01:00 [INF] Profile service returned to the following claim types: sub
2020-01-18 21:35:52.671 +01:00 [DBG] End userinfo request
2020-01-18 21:42:30.173 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 21:42:30.174 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 21:42:30.175 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 21:42:30.177 +01:00 [DBG] Start discovery request
2020-01-18 21:42:50.266 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:42:50.267 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:42:50.268 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:42:50.269 +01:00 [DBG] Start authorize request
2020-01-18 21:42:50.269 +01:00 [DBG] No user present in authorize request
2020-01-18 21:42:50.269 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:42:50.270 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:42:50.270 +01:00 [DBG] No PKCE used.
2020-01-18 21:42:50.270 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:42:50.271 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "98a540cd-7fc3-427e-9a32-bbc7d4555e0c",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "98a540cd-7fc3-427e-9a32-bbc7d4555e0c",
    "client_id": "nodejs"
  }
}
2020-01-18 21:42:50.272 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 21:42:50.277 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:42:50.277 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:42:50.278 +01:00 [DBG] No PKCE used.
2020-01-18 21:42:50.278 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:42:56.866 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:42:56.868 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSAMTU9703:00000003",
  "TimeStamp": "2020-01-18T20:42:56Z",
  "ProcessId": 15908,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:42:56.869 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:42:56.869 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:42:56.869 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:42:56.870 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:42:56.880 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:42:56.880 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:42:56.882 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:42:56.883 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:42:56.887 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:42:56.887 +01:00 [DBG] Start authorize callback request
2020-01-18 21:42:56.888 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:42:56.888 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:42:56.888 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:42:56.889 +01:00 [DBG] No PKCE used.
2020-01-18 21:42:56.889 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:42:56.890 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "98a540cd-7fc3-427e-9a32-bbc7d4555e0c",
  "SessionId": "6b194bf2ace94f0208ae1bfd5ba4e595",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "98a540cd-7fc3-427e-9a32-bbc7d4555e0c",
    "client_id": "nodejs"
  }
}
2020-01-18 21:43:00.558 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:43:00.558 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:43:00.565 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****aac0"
    }
  ],
  "ActivityId": "0HLSSAMTU9703:00000004",
  "TimeStamp": "2020-01-18T20:43:00Z",
  "ProcessId": 15908,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:43:00.566 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "98a540cd-7fc3-427e-9a32-bbc7d4555e0c",
  "Scope": "openid profile"
}
2020-01-18 21:43:00.567 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:43:00.568 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:43:00.591 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:43:00.592 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:43:00.592 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:43:00.593 +01:00 [DBG] Start token request.
2020-01-18 21:43:00.593 +01:00 [DBG] Start client validation
2020-01-18 21:43:00.593 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:43:00.594 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:43:00.594 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:43:00.595 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:43:00.595 +01:00 [DBG] Client validation success
2020-01-18 21:43:00.595 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSAMTU9706:00000001",
  "TimeStamp": "2020-01-18T20:43:00Z",
  "ProcessId": 15908,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:43:00.596 +01:00 [DBG] Start token request validation
2020-01-18 21:43:00.597 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 21:43:01.614 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 21:43:01.614 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "55780bf915625d53c19a12e525ba315e688ba39b02650a0966bfdc1a2178aac0",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "55780bf915625d53c19a12e525ba315e688ba39b02650a0966bfdc1a2178aac0",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "98a540cd-7fc3-427e-9a32-bbc7d4555e0c"
  }
}
2020-01-18 21:43:01.615 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 21:43:01.616 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 21:43:24.283 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 21:43:24.291 +01:00 [DBG] Issued claims: []
2020-01-18 21:43:24.297 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:43:24.298 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 21:43:24.301 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****E6kg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****afoA"
    }
  ],
  "ActivityId": "0HLSSAMTU9706:00000001",
  "TimeStamp": "2020-01-18T20:43:24Z",
  "ProcessId": 15908,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:43:24.302 +01:00 [DBG] Token request success.
2020-01-18 21:43:45.845 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 21:43:45.847 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 21:43:45.850 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 21:43:45.852 +01:00 [DBG] Start discovery request
2020-01-18 21:43:46.400 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:46.403 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:46.403 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:43:46.404 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:43:46.404 +01:00 [DBG] No PKCE used.
2020-01-18 21:43:46.405 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:43:46.454 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:46.454 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:46.454 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:46.455 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:46.455 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:46.457 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:46.478 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:46.481 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:46.482 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:46.510 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:46.580 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:46.581 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:51.537 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:43:51.538 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:51.539 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:51.540 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSAMTU9702:00000004",
  "TimeStamp": "2020-01-18T20:43:51Z",
  "ProcessId": 15908,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:43:51.541 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:43:51.541 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:43:51.541 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:43:51.542 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:43:51.549 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:51.550 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:43:51.550 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:43:51.551 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:43:51.551 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:43:51.552 +01:00 [DBG] Start authorize callback request
2020-01-18 21:43:51.552 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:43:51.552 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:43:51.553 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:43:51.553 +01:00 [DBG] No PKCE used.
2020-01-18 21:43:51.553 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:43:51.554 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "98a540cd-7fc3-427e-9a32-bbc7d4555e0c",
  "SessionId": "1ca80d7395ee58dac1fcaab8914eed17",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "98a540cd-7fc3-427e-9a32-bbc7d4555e0c",
    "client_id": "nodejs"
  }
}
2020-01-18 21:43:51.555 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:43:51.555 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:43:51.562 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****2d62"
    }
  ],
  "ActivityId": "0HLSSAMTU9702:00000005",
  "TimeStamp": "2020-01-18T20:43:51Z",
  "ProcessId": 15908,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:43:51.564 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "98a540cd-7fc3-427e-9a32-bbc7d4555e0c",
  "Scope": "openid profile"
}
2020-01-18 21:43:51.564 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:43:51.565 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:43:51.583 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:43:51.584 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:43:51.584 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:43:51.585 +01:00 [DBG] Start token request.
2020-01-18 21:43:51.585 +01:00 [DBG] Start client validation
2020-01-18 21:43:51.585 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:43:51.586 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:43:51.586 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:43:51.586 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:43:51.587 +01:00 [DBG] Client validation success
2020-01-18 21:43:51.592 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSAMTU9708:00000001",
  "TimeStamp": "2020-01-18T20:43:51Z",
  "ProcessId": 15908,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:43:51.593 +01:00 [DBG] Start token request validation
2020-01-18 21:43:51.594 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 21:43:51.602 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 21:43:51.602 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "0fd8614bf6a2d2ac367fb01437b70e4b18100875b96ddfbe5e23aafe401c2d62",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "0fd8614bf6a2d2ac367fb01437b70e4b18100875b96ddfbe5e23aafe401c2d62",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "98a540cd-7fc3-427e-9a32-bbc7d4555e0c"
  }
}
2020-01-18 21:43:51.603 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 21:43:51.603 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 21:43:51.603 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 21:43:51.604 +01:00 [DBG] Issued claims: []
2020-01-18 21:43:51.607 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:43:51.607 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 21:43:51.611 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****j2yQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****9T1g"
    }
  ],
  "ActivityId": "0HLSSAMTU9708:00000001",
  "TimeStamp": "2020-01-18T20:43:51Z",
  "ProcessId": 15908,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:43:51.612 +01:00 [DBG] Token request success.
2020-01-18 21:43:51.618 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 21:43:51.620 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 21:43:51.620 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 21:43:51.621 +01:00 [DBG] Start key discovery request
2020-01-18 21:43:51.640 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 21:43:51.641 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 21:43:51.642 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 21:43:51.642 +01:00 [DBG] Start userinfo request
2020-01-18 21:43:51.642 +01:00 [DBG] Bearer token found in header
2020-01-18 21:43:51.645 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 21:43:51.646 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579380231,
    "exp": 1579383831,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579380231,
    "idp": "local",
    "scope": [
      "openid",
      "profile"
    ],
    "amr": "pwd"
  }
}
2020-01-18 21:43:51.648 +01:00 [DBG] Creating userinfo response
2020-01-18 21:43:51.649 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:43:51.649 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:43:51.649 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 21:43:51.650 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:43:51.651 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 21:43:51.652 +01:00 [DBG] Issued claims: ["sub"]
2020-01-18 21:43:51.652 +01:00 [INF] Profile service returned to the following claim types: sub
2020-01-18 21:43:51.652 +01:00 [DBG] End userinfo request
2020-01-18 21:44:20.279 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 21:44:20.279 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 21:44:20.280 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 21:44:20.280 +01:00 [DBG] Start discovery request
2020-01-18 21:44:31.483 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:44:31.484 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:44:31.485 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:44:31.487 +01:00 [DBG] Start authorize request
2020-01-18 21:44:31.487 +01:00 [DBG] No user present in authorize request
2020-01-18 21:44:31.487 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:44:31.488 +01:00 [ERR] Invalid grant type for client: implicit
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "",
  "State": "15a89274-3a95-445f-ab0d-c67bd77ce566",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "15a89274-3a95-445f-ab0d-c67bd77ce566",
    "nonce": "efbe1ea3-ce07-4453-b791-92f61d996abe",
    "client_id": "nodejs"
  }
}
2020-01-18 21:44:31.490 +01:00 [ERR] Request validation failed
2020-01-18 21:44:31.490 +01:00 [INF] {
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "",
  "State": "15a89274-3a95-445f-ab0d-c67bd77ce566",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "15a89274-3a95-445f-ab0d-c67bd77ce566",
    "nonce": "efbe1ea3-ce07-4453-b791-92f61d996abe",
    "client_id": "nodejs"
  }
}
2020-01-18 21:44:31.498 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "Scopes": "",
  "GrantType": "implicit",
  "Error": "unauthorized_client",
  "ActivityId": "0HLSSAMTU9702:00000006",
  "TimeStamp": "2020-01-18T20:44:31Z",
  "ProcessId": 15908,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:46:54.034 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 21:46:54.109 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 21:46:54.111 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 21:46:54.112 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 21:46:54.112 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 21:46:54.113 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 21:47:16.653 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:47:16.660 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:47:16.661 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:47:16.663 +01:00 [DBG] Start authorize request
2020-01-18 21:47:16.686 +01:00 [DBG] No user present in authorize request
2020-01-18 21:47:16.688 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:47:16.714 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:47:16.764 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile",
  "State": "93f5f117-45a6-4b6b-ab40-a4d84caacac0",
  "Nonce": "40f131ed-2f7c-4151-9845-c9afa31178ef",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "93f5f117-45a6-4b6b-ab40-a4d84caacac0",
    "nonce": "40f131ed-2f7c-4151-9845-c9afa31178ef",
    "client_id": "nodejs"
  }
}
2020-01-18 21:47:16.770 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 21:47:16.945 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:47:16.945 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:47:28.910 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:47:28.976 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSAUD98N42:00000004",
  "TimeStamp": "2020-01-18T20:47:28Z",
  "ProcessId": 14084,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:47:28.985 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:47:28.986 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:47:28.987 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:47:28.995 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:47:29.039 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.040 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.041 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:47:29.043 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:47:29.045 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:47:29.050 +01:00 [DBG] Start authorize callback request
2020-01-18 21:47:29.055 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:47:29.055 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:47:29.057 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:47:29.058 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile",
  "State": "93f5f117-45a6-4b6b-ab40-a4d84caacac0",
  "Nonce": "40f131ed-2f7c-4151-9845-c9afa31178ef",
  "SessionId": "25a98abd33ef95913a7610517fd2cde6",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "93f5f117-45a6-4b6b-ab40-a4d84caacac0",
    "nonce": "40f131ed-2f7c-4151-9845-c9afa31178ef",
    "client_id": "nodejs"
  }
}
2020-01-18 21:47:29.071 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:47:29.074 +01:00 [DBG] Creating Implicit Flow response.
2020-01-18 21:47:29.079 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:47:29.088 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via ClaimsProviderIdentityToken
2020-01-18 21:47:29.098 +01:00 [DBG] Issued claims: ["name"]
2020-01-18 21:47:29.166 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****jrvw"
    }
  ],
  "ActivityId": "0HLSSAUD98N42:00000005",
  "TimeStamp": "2020-01-18T20:47:29Z",
  "ProcessId": 14084,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:47:29.172 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "93f5f117-45a6-4b6b-ab40-a4d84caacac0",
  "Scope": "openid profile"
}
2020-01-18 21:47:29.183 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:47:29.184 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:47:29.203 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.205 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.206 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:47:29.207 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:47:29.207 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:47:29.208 +01:00 [DBG] Start authorize request
2020-01-18 21:47:29.209 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:47:29.209 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:47:29.210 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:47:29.210 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile",
  "State": "61328924-4c28-4f15-a695-bff286ab916a",
  "Nonce": "4fe22ecc-7d19-4de4-bfcb-4566e85e72e3",
  "SessionId": "25a98abd33ef95913a7610517fd2cde6",
  "Raw": {
    "successRedirect": "/auth/dashboard",
    "failureRedirect": "/",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "61328924-4c28-4f15-a695-bff286ab916a",
    "nonce": "4fe22ecc-7d19-4de4-bfcb-4566e85e72e3",
    "client_id": "nodejs"
  }
}
2020-01-18 21:47:29.216 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:47:29.216 +01:00 [DBG] Creating Implicit Flow response.
2020-01-18 21:47:29.216 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:47:29.217 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via ClaimsProviderIdentityToken
2020-01-18 21:47:29.219 +01:00 [DBG] Issued claims: ["name"]
2020-01-18 21:47:29.223 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****XX_Q"
    }
  ],
  "ActivityId": "0HLSSAUD98N42:00000006",
  "TimeStamp": "2020-01-18T20:47:29Z",
  "ProcessId": 14084,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:47:29.226 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "61328924-4c28-4f15-a695-bff286ab916a",
  "Scope": "openid profile"
}
2020-01-18 21:47:29.250 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.251 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.252 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:47:29.253 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:47:29.253 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:47:29.254 +01:00 [DBG] Start authorize request
2020-01-18 21:47:29.255 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:47:29.255 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:47:29.255 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:47:29.256 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile",
  "State": "4f808b3b-ebb5-4305-930c-f345722950a8",
  "Nonce": "1c17029a-9ceb-49dc-8aec-ea8c0b84b18a",
  "SessionId": "25a98abd33ef95913a7610517fd2cde6",
  "Raw": {
    "successRedirect": "/auth/dashboard",
    "failureRedirect": "/",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "4f808b3b-ebb5-4305-930c-f345722950a8",
    "nonce": "1c17029a-9ceb-49dc-8aec-ea8c0b84b18a",
    "client_id": "nodejs"
  }
}
2020-01-18 21:47:29.257 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:47:29.258 +01:00 [DBG] Creating Implicit Flow response.
2020-01-18 21:47:29.258 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:47:29.258 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via ClaimsProviderIdentityToken
2020-01-18 21:47:29.261 +01:00 [DBG] Issued claims: ["name"]
2020-01-18 21:47:29.264 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****9QXQ"
    }
  ],
  "ActivityId": "0HLSSAUD98N42:00000007",
  "TimeStamp": "2020-01-18T20:47:29Z",
  "ProcessId": 14084,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:47:29.266 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "4f808b3b-ebb5-4305-930c-f345722950a8",
  "Scope": "openid profile"
}
2020-01-18 21:47:29.282 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.283 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.284 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:47:29.284 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:47:29.285 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:47:29.285 +01:00 [DBG] Start authorize request
2020-01-18 21:47:29.285 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:47:29.286 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:47:29.286 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:47:29.288 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile",
  "State": "584a304e-5cad-4a3d-955d-2400de417c68",
  "Nonce": "00d6fb75-f09d-42e6-ba76-cbb7c2a11578",
  "SessionId": "25a98abd33ef95913a7610517fd2cde6",
  "Raw": {
    "successRedirect": "/auth/dashboard",
    "failureRedirect": "/",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "584a304e-5cad-4a3d-955d-2400de417c68",
    "nonce": "00d6fb75-f09d-42e6-ba76-cbb7c2a11578",
    "client_id": "nodejs"
  }
}
2020-01-18 21:47:29.289 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:47:29.290 +01:00 [DBG] Creating Implicit Flow response.
2020-01-18 21:47:29.290 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:47:29.291 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via ClaimsProviderIdentityToken
2020-01-18 21:47:29.292 +01:00 [DBG] Issued claims: ["name"]
2020-01-18 21:47:29.296 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Jiow"
    }
  ],
  "ActivityId": "0HLSSAUD98N42:00000008",
  "TimeStamp": "2020-01-18T20:47:29Z",
  "ProcessId": 14084,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:47:29.299 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "584a304e-5cad-4a3d-955d-2400de417c68",
  "Scope": "openid profile"
}
2020-01-18 21:47:29.313 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.314 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.316 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:47:29.317 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:47:29.318 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:47:29.318 +01:00 [DBG] Start authorize request
2020-01-18 21:47:29.319 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:47:29.319 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:47:29.319 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:47:29.320 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile",
  "State": "d5fcff74-2df7-4651-8aac-e0abb3a0debe",
  "Nonce": "f033592b-6408-4607-9d50-7eebe2d875d2",
  "SessionId": "25a98abd33ef95913a7610517fd2cde6",
  "Raw": {
    "successRedirect": "/auth/dashboard",
    "failureRedirect": "/",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "d5fcff74-2df7-4651-8aac-e0abb3a0debe",
    "nonce": "f033592b-6408-4607-9d50-7eebe2d875d2",
    "client_id": "nodejs"
  }
}
2020-01-18 21:47:29.321 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:47:29.321 +01:00 [DBG] Creating Implicit Flow response.
2020-01-18 21:47:29.322 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:47:29.323 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via ClaimsProviderIdentityToken
2020-01-18 21:47:29.324 +01:00 [DBG] Issued claims: ["name"]
2020-01-18 21:47:29.327 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****v59Q"
    }
  ],
  "ActivityId": "0HLSSAUD98N42:00000009",
  "TimeStamp": "2020-01-18T20:47:29Z",
  "ProcessId": 14084,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:47:29.328 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "d5fcff74-2df7-4651-8aac-e0abb3a0debe",
  "Scope": "openid profile"
}
2020-01-18 21:47:29.342 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.343 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.343 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:47:29.344 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:47:29.344 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:47:29.345 +01:00 [DBG] Start authorize request
2020-01-18 21:47:29.345 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:47:29.346 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:47:29.346 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:47:29.347 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile",
  "State": "e815872a-6660-4a11-94cb-2da70e154ab8",
  "Nonce": "ae6dbc9e-a714-4f4c-bac9-f991d8f4d38a",
  "SessionId": "25a98abd33ef95913a7610517fd2cde6",
  "Raw": {
    "successRedirect": "/auth/dashboard",
    "failureRedirect": "/",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "e815872a-6660-4a11-94cb-2da70e154ab8",
    "nonce": "ae6dbc9e-a714-4f4c-bac9-f991d8f4d38a",
    "client_id": "nodejs"
  }
}
2020-01-18 21:47:29.349 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:47:29.349 +01:00 [DBG] Creating Implicit Flow response.
2020-01-18 21:47:29.349 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:47:29.350 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via ClaimsProviderIdentityToken
2020-01-18 21:47:29.351 +01:00 [DBG] Issued claims: ["name"]
2020-01-18 21:47:29.354 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Jsug"
    }
  ],
  "ActivityId": "0HLSSAUD98N42:0000000A",
  "TimeStamp": "2020-01-18T20:47:29Z",
  "ProcessId": 14084,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:47:29.356 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "e815872a-6660-4a11-94cb-2da70e154ab8",
  "Scope": "openid profile"
}
2020-01-18 21:47:29.373 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.374 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.375 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:47:29.375 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:47:29.376 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:47:29.376 +01:00 [DBG] Start authorize request
2020-01-18 21:47:29.377 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:47:29.377 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:47:29.377 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:47:29.378 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile",
  "State": "1b16dcc2-83a1-4521-9302-87dd9f285d60",
  "Nonce": "166464c6-2738-4e66-8b58-87a72ee851c4",
  "SessionId": "25a98abd33ef95913a7610517fd2cde6",
  "Raw": {
    "successRedirect": "/auth/dashboard",
    "failureRedirect": "/",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "1b16dcc2-83a1-4521-9302-87dd9f285d60",
    "nonce": "166464c6-2738-4e66-8b58-87a72ee851c4",
    "client_id": "nodejs"
  }
}
2020-01-18 21:47:29.380 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:47:29.381 +01:00 [DBG] Creating Implicit Flow response.
2020-01-18 21:47:29.381 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:47:29.382 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via ClaimsProviderIdentityToken
2020-01-18 21:47:29.383 +01:00 [DBG] Issued claims: ["name"]
2020-01-18 21:47:29.387 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****szrA"
    }
  ],
  "ActivityId": "0HLSSAUD98N42:0000000B",
  "TimeStamp": "2020-01-18T20:47:29Z",
  "ProcessId": 14084,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:47:29.388 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "1b16dcc2-83a1-4521-9302-87dd9f285d60",
  "Scope": "openid profile"
}
2020-01-18 21:47:29.404 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.404 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.406 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:47:29.406 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:47:29.407 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:47:29.407 +01:00 [DBG] Start authorize request
2020-01-18 21:47:29.407 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:47:29.408 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:47:29.408 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:47:29.409 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile",
  "State": "20947b03-aa01-4247-892b-4210e43d907b",
  "Nonce": "7d596fc6-cbec-40ea-8e59-72a568b4547f",
  "SessionId": "25a98abd33ef95913a7610517fd2cde6",
  "Raw": {
    "successRedirect": "/auth/dashboard",
    "failureRedirect": "/",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "20947b03-aa01-4247-892b-4210e43d907b",
    "nonce": "7d596fc6-cbec-40ea-8e59-72a568b4547f",
    "client_id": "nodejs"
  }
}
2020-01-18 21:47:29.410 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:47:29.410 +01:00 [DBG] Creating Implicit Flow response.
2020-01-18 21:47:29.411 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:47:29.411 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via ClaimsProviderIdentityToken
2020-01-18 21:47:29.413 +01:00 [DBG] Issued claims: ["name"]
2020-01-18 21:47:29.417 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****qhjg"
    }
  ],
  "ActivityId": "0HLSSAUD98N42:0000000C",
  "TimeStamp": "2020-01-18T20:47:29Z",
  "ProcessId": 14084,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:47:29.418 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "20947b03-aa01-4247-892b-4210e43d907b",
  "Scope": "openid profile"
}
2020-01-18 21:47:29.434 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.437 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.437 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:47:29.438 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:47:29.438 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:47:29.439 +01:00 [DBG] Start authorize request
2020-01-18 21:47:29.439 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:47:29.439 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:47:29.439 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:47:29.440 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile",
  "State": "db3f31f2-5ea8-458b-9f77-d70827af2481",
  "Nonce": "9b580215-692d-42bc-a416-203e23e1b349",
  "SessionId": "25a98abd33ef95913a7610517fd2cde6",
  "Raw": {
    "successRedirect": "/auth/dashboard",
    "failureRedirect": "/",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "db3f31f2-5ea8-458b-9f77-d70827af2481",
    "nonce": "9b580215-692d-42bc-a416-203e23e1b349",
    "client_id": "nodejs"
  }
}
2020-01-18 21:47:29.442 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:47:29.442 +01:00 [DBG] Creating Implicit Flow response.
2020-01-18 21:47:29.443 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:47:29.443 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via ClaimsProviderIdentityToken
2020-01-18 21:47:29.445 +01:00 [DBG] Issued claims: ["name"]
2020-01-18 21:47:29.449 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****kkbg"
    }
  ],
  "ActivityId": "0HLSSAUD98N42:0000000D",
  "TimeStamp": "2020-01-18T20:47:29Z",
  "ProcessId": 14084,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:47:29.451 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "db3f31f2-5ea8-458b-9f77-d70827af2481",
  "Scope": "openid profile"
}
2020-01-18 21:47:29.466 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.467 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:47:29.468 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:47:29.469 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:47:29.469 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:47:29.469 +01:00 [DBG] Start authorize request
2020-01-18 21:47:29.470 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:47:29.470 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:47:29.470 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:47:29.471 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "openid profile",
  "State": "36c99636-87ff-4fa1-a4e2-1b1782a780e0",
  "Nonce": "e960bf9e-217d-4f91-b2f7-cbe588c7b70b",
  "SessionId": "25a98abd33ef95913a7610517fd2cde6",
  "Raw": {
    "successRedirect": "/auth/dashboard",
    "failureRedirect": "/",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "36c99636-87ff-4fa1-a4e2-1b1782a780e0",
    "nonce": "e960bf9e-217d-4f91-b2f7-cbe588c7b70b",
    "client_id": "nodejs"
  }
}
2020-01-18 21:47:29.473 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:47:29.474 +01:00 [DBG] Creating Implicit Flow response.
2020-01-18 21:47:29.474 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:47:29.481 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via ClaimsProviderIdentityToken
2020-01-18 21:47:29.489 +01:00 [DBG] Issued claims: ["name"]
2020-01-18 21:47:29.493 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "implicit",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****vMRQ"
    }
  ],
  "ActivityId": "0HLSSAUD98N42:0000000E",
  "TimeStamp": "2020-01-18T20:47:29Z",
  "ProcessId": 14084,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:47:29.495 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "36c99636-87ff-4fa1-a4e2-1b1782a780e0",
  "Scope": "openid profile"
}
2020-01-18 21:56:02.332 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 21:56:02.399 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 21:56:02.401 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 21:56:02.401 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 21:56:02.401 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 21:56:02.402 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 21:56:42.398 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:56:42.406 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:56:42.407 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:56:42.409 +01:00 [DBG] Start authorize request
2020-01-18 21:56:42.423 +01:00 [DBG] No user present in authorize request
2020-01-18 21:56:42.425 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:56:42.484 +01:00 [ERR] Invalid grant type for client: implicit
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "",
  "State": "975f70f7-9fcb-4126-8ae8-a0ee1d8c5430",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "975f70f7-9fcb-4126-8ae8-a0ee1d8c5430",
    "nonce": "c9eb00fc-bb55-4ccf-8685-84a801937ef5",
    "client_id": "nodejs"
  }
}
2020-01-18 21:56:42.488 +01:00 [ERR] Request validation failed
2020-01-18 21:56:42.489 +01:00 [INF] {
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "id_token",
  "ResponseMode": "fragment",
  "GrantType": "implicit",
  "RequestedScopes": "",
  "State": "975f70f7-9fcb-4126-8ae8-a0ee1d8c5430",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "id_token",
    "state": "975f70f7-9fcb-4126-8ae8-a0ee1d8c5430",
    "nonce": "c9eb00fc-bb55-4ccf-8685-84a801937ef5",
    "client_id": "nodejs"
  }
}
2020-01-18 21:56:42.531 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "Scopes": "",
  "GrantType": "implicit",
  "Error": "unauthorized_client",
  "ActivityId": "0HLSSB3LSJI1G:00000001",
  "TimeStamp": "2020-01-18T20:56:42Z",
  "ProcessId": 10592,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:57:07.543 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 21:57:07.633 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 21:57:07.636 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 21:57:07.636 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 21:57:07.637 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 21:57:07.637 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 21:57:10.008 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 21:57:10.013 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 21:57:10.013 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 21:57:10.015 +01:00 [DBG] Start discovery request
2020-01-18 21:57:40.137 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 21:57:40.140 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 21:57:40.142 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 21:57:40.143 +01:00 [DBG] Start discovery request
2020-01-18 21:57:45.794 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 21:57:45.798 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 21:57:45.798 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 21:57:45.801 +01:00 [DBG] Start authorize request
2020-01-18 21:57:45.806 +01:00 [DBG] No user present in authorize request
2020-01-18 21:57:45.808 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:57:45.816 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:57:45.818 +01:00 [DBG] No PKCE used.
2020-01-18 21:57:45.834 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:57:45.854 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "c81b0cad-4b99-48bc-9d91-79f025cf4166",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "c81b0cad-4b99-48bc-9d91-79f025cf4166",
    "client_id": "nodejs"
  }
}
2020-01-18 21:57:45.858 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 21:57:46.003 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:57:46.004 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:57:46.004 +01:00 [DBG] No PKCE used.
2020-01-18 21:57:46.005 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:57:52.750 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 21:57:52.813 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSB3U3TMUT:00000004",
  "TimeStamp": "2020-01-18T20:57:52Z",
  "ProcessId": 8224,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:57:52.821 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:57:52.822 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 21:57:52.823 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 21:57:52.830 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:57:52.863 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:57:52.863 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 21:57:52.864 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 21:57:52.865 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 21:57:52.865 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 21:57:52.868 +01:00 [DBG] Start authorize callback request
2020-01-18 21:57:52.871 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 21:57:52.872 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 21:57:52.872 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 21:57:52.872 +01:00 [DBG] No PKCE used.
2020-01-18 21:57:52.873 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 21:57:52.873 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "c81b0cad-4b99-48bc-9d91-79f025cf4166",
  "SessionId": "112089c1f2e08213373edf625e11afac",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "c81b0cad-4b99-48bc-9d91-79f025cf4166",
    "client_id": "nodejs"
  }
}
2020-01-18 21:57:52.879 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 21:57:52.881 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 21:57:52.911 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****e4b7"
    }
  ],
  "ActivityId": "0HLSSB3U3TMUT:00000005",
  "TimeStamp": "2020-01-18T20:57:52Z",
  "ProcessId": 8224,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 21:57:52.916 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "c81b0cad-4b99-48bc-9d91-79f025cf4166",
  "Scope": "openid profile"
}
2020-01-18 21:57:52.924 +01:00 [DBG] Augmenting SignInContext
2020-01-18 21:57:52.924 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 21:57:52.939 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 21:57:52.942 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 21:57:52.942 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 21:57:52.946 +01:00 [DBG] Start token request.
2020-01-18 21:57:52.948 +01:00 [DBG] Start client validation
2020-01-18 21:57:52.950 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 21:57:52.951 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 21:57:52.951 +01:00 [DBG] Secret id found: nodejs
2020-01-18 21:57:52.957 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 21:57:52.957 +01:00 [DBG] Client validation success
2020-01-18 21:57:52.962 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSB3U3TMUU:00000001",
  "TimeStamp": "2020-01-18T20:57:52Z",
  "ProcessId": 8224,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:57:52.965 +01:00 [DBG] Start token request validation
2020-01-18 21:57:52.969 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 21:57:52.994 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 21:57:53.000 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "bafc2287263845d06ffa084625c7e5ca9031950978727a3f0826638f64d7e4b7",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "bafc2287263845d06ffa084625c7e5ca9031950978727a3f0826638f64d7e4b7",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "c81b0cad-4b99-48bc-9d91-79f025cf4166"
  }
}
2020-01-18 21:57:53.011 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 21:57:53.012 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 21:57:53.017 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 21:57:53.021 +01:00 [DBG] Issued claims: []
2020-01-18 21:57:53.075 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 21:57:53.076 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 21:57:53.080 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Qkfg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****n9ww"
    }
  ],
  "ActivityId": "0HLSSB3U3TMUU:00000001",
  "TimeStamp": "2020-01-18T20:57:53Z",
  "ProcessId": 8224,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 21:57:53.082 +01:00 [DBG] Token request success.
2020-01-18 21:57:53.093 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 21:57:53.094 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 21:57:53.095 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 21:57:53.096 +01:00 [DBG] Start key discovery request
2020-01-18 21:57:53.131 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 21:57:53.133 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 21:57:53.134 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 21:57:53.137 +01:00 [DBG] Start userinfo request
2020-01-18 21:57:53.139 +01:00 [DBG] Bearer token found in header
2020-01-18 21:57:53.176 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 21:57:53.181 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579381073,
    "exp": 1579384673,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579381072,
    "idp": "local",
    "scope": [
      "openid",
      "profile"
    ],
    "amr": "pwd"
  }
}
2020-01-18 21:57:53.185 +01:00 [DBG] Creating userinfo response
2020-01-18 21:57:53.187 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:57:53.188 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:57:53.189 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 21:57:53.190 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 21:57:53.190 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 21:57:53.195 +01:00 [DBG] Issued claims: ["sub"]
2020-01-18 21:57:53.196 +01:00 [INF] Profile service returned to the following claim types: sub
2020-01-18 21:57:53.197 +01:00 [DBG] End userinfo request
2020-01-18 21:57:53.699 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 21:57:53.701 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 21:57:53.701 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 21:57:53.702 +01:00 [DBG] Start discovery request
2020-01-18 21:57:53.758 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 21:57:53.759 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 21:57:53.760 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 21:57:53.761 +01:00 [DBG] Start key discovery request
2020-01-18 21:58:44.084 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-18 21:58:44.088 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 21:58:44.089 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 21:58:44.089 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 21:58:44.090 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 21:58:44.090 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 21:58:44.091 +01:00 [DBG] Start discovery request
2020-01-18 21:58:44.096 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2020-01-18 21:58:44.097 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 21:58:44.098 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 21:58:44.099 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 21:58:44.100 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 21:58:44.101 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 21:58:44.101 +01:00 [DBG] Start key discovery request
2020-01-18 21:58:57.547 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-18 21:58:57.548 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 21:58:57.548 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 21:58:57.549 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 21:58:57.549 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 21:58:57.550 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 21:58:57.550 +01:00 [DBG] Start discovery request
2020-01-18 21:58:57.568 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2020-01-18 21:58:57.569 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 21:58:57.569 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 21:58:57.570 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 21:58:57.570 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 21:58:57.571 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 21:58:57.571 +01:00 [DBG] Start key discovery request
2020-01-18 21:59:16.319 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-18 21:59:16.320 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 21:59:16.320 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 21:59:16.320 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 21:59:16.321 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 21:59:16.321 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 21:59:16.322 +01:00 [DBG] Start discovery request
2020-01-18 21:59:16.328 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2020-01-18 21:59:16.329 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 21:59:16.330 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 21:59:16.330 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 21:59:16.331 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 21:59:16.331 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 21:59:16.331 +01:00 [DBG] Start key discovery request
2020-01-18 22:00:24.190 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 22:00:24.191 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 22:00:24.192 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 22:00:24.194 +01:00 [DBG] Start authorize request
2020-01-18 22:00:24.194 +01:00 [DBG] No user present in authorize request
2020-01-18 22:00:24.194 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:00:24.195 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:00:24.195 +01:00 [DBG] No PKCE used.
2020-01-18 22:00:24.195 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:00:24.196 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b",
    "client_id": "nodejs"
  }
}
2020-01-18 22:00:24.197 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 22:00:24.204 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:00:24.204 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:00:24.204 +01:00 [DBG] No PKCE used.
2020-01-18 22:00:24.205 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:00:49.112 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 22:00:49.211 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 22:00:49.215 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 22:00:49.216 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 22:00:49.217 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 22:00:49.218 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 22:01:23.090 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 22:01:23.202 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 22:01:23.205 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 22:01:23.205 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 22:01:23.206 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 22:01:23.207 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 22:01:29.661 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 22:01:29.935 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSB6BGE64R:00000001",
  "TimeStamp": "2020-01-18T21:01:29Z",
  "ProcessId": 10248,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:01:29.946 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:01:29.948 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 22:01:29.948 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 22:01:29.960 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:01:30.001 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:01:30.002 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:01:30.003 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 22:01:30.007 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 22:01:30.007 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 22:01:30.010 +01:00 [DBG] Start authorize callback request
2020-01-18 22:01:30.017 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 22:01:30.019 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:01:30.027 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:01:30.028 +01:00 [DBG] No PKCE used.
2020-01-18 22:01:30.046 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:01:30.075 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "SessionId": "a88072fc64ee7543e87efde47efa21fb",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b",
    "client_id": "nodejs"
  }
}
2020-01-18 22:01:30.084 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 22:01:30.086 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 22:01:30.116 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****a878"
    }
  ],
  "ActivityId": "0HLSSB6BGE64R:00000002",
  "TimeStamp": "2020-01-18T21:01:30Z",
  "ProcessId": 10248,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:01:30.121 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "Scope": "openid profile"
}
2020-01-18 22:01:30.129 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:01:30.130 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:01:30.154 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 22:01:30.158 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 22:01:30.158 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 22:01:30.162 +01:00 [DBG] Start token request.
2020-01-18 22:01:30.164 +01:00 [DBG] Start client validation
2020-01-18 22:01:30.166 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 22:01:30.168 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 22:01:30.169 +01:00 [DBG] Secret id found: nodejs
2020-01-18 22:01:30.174 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 22:01:30.174 +01:00 [DBG] Client validation success
2020-01-18 22:01:30.180 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSB6BGE64S:00000001",
  "TimeStamp": "2020-01-18T21:01:30Z",
  "ProcessId": 10248,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:01:30.185 +01:00 [DBG] Start token request validation
2020-01-18 22:01:30.190 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 22:01:30.213 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 22:01:30.219 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "ebe4051af260c37dea181ff452ca105c32f1353436a790c0d0ead5629c9ba878",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "ebe4051af260c37dea181ff452ca105c32f1353436a790c0d0ead5629c9ba878",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b"
  }
}
2020-01-18 22:01:30.229 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 22:01:30.229 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 22:01:51.169 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 22:01:51.172 +01:00 [DBG] Issued claims: []
2020-01-18 22:01:51.223 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 22:01:51.224 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 22:01:51.228 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****QZrw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****N7Aw"
    }
  ],
  "ActivityId": "0HLSSB6BGE64S:00000001",
  "TimeStamp": "2020-01-18T21:01:51Z",
  "ProcessId": 10248,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:01:51.230 +01:00 [DBG] Token request success.
2020-01-18 22:02:00.883 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 22:02:00.884 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:00.885 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:02.509 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:02.510 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:02.525 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:02:02.526 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:02:02.526 +01:00 [DBG] No PKCE used.
2020-01-18 22:02:02.526 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:02:05.029 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:05.032 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:05.033 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:05.033 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:05.034 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:05.039 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:05.042 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:05.063 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:05.080 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:05.080 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:05.113 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:05.114 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:09.560 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 22:02:09.561 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:09.562 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:09.564 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSB6BGE650:00000003",
  "TimeStamp": "2020-01-18T21:02:09Z",
  "ProcessId": 10248,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:02:09.565 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:02:09.565 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 22:02:09.565 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 22:02:09.566 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:02:09.576 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:09.576 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:09.577 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 22:02:09.577 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 22:02:09.578 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 22:02:09.578 +01:00 [DBG] Start authorize callback request
2020-01-18 22:02:09.579 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 22:02:09.579 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:02:09.580 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:02:09.581 +01:00 [DBG] No PKCE used.
2020-01-18 22:02:09.581 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:02:09.581 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "SessionId": "40ee695b8c2307f87cbac9389d14858c",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b",
    "client_id": "nodejs"
  }
}
2020-01-18 22:02:09.585 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 22:02:09.585 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 22:02:09.593 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****88b9"
    }
  ],
  "ActivityId": "0HLSSB6BGE650:00000004",
  "TimeStamp": "2020-01-18T21:02:09Z",
  "ProcessId": 10248,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:02:09.594 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "Scope": "openid profile"
}
2020-01-18 22:02:09.595 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:02:09.595 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:02:09.606 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 22:02:09.607 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 22:02:09.607 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 22:02:09.608 +01:00 [DBG] Start token request.
2020-01-18 22:02:09.608 +01:00 [DBG] Start client validation
2020-01-18 22:02:09.608 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 22:02:09.608 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 22:02:09.609 +01:00 [DBG] Secret id found: nodejs
2020-01-18 22:02:09.609 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 22:02:09.609 +01:00 [DBG] Client validation success
2020-01-18 22:02:09.610 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSB6BGE651:00000001",
  "TimeStamp": "2020-01-18T21:02:09Z",
  "ProcessId": 10248,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:02:09.614 +01:00 [DBG] Start token request validation
2020-01-18 22:02:09.615 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 22:02:09.623 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 22:02:09.624 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "fcb71bfd33ae759ba54e72a7915a1441e8ba3ccedda99b149fbadec40c3d88b9",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "fcb71bfd33ae759ba54e72a7915a1441e8ba3ccedda99b149fbadec40c3d88b9",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b"
  }
}
2020-01-18 22:02:09.625 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 22:02:09.625 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 22:02:11.632 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 22:02:11.633 +01:00 [DBG] Issued claims: []
2020-01-18 22:02:11.637 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 22:02:11.637 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 22:02:11.641 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****vHeA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****keuw"
    }
  ],
  "ActivityId": "0HLSSB6BGE651:00000001",
  "TimeStamp": "2020-01-18T21:02:11Z",
  "ProcessId": 10248,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:02:11.643 +01:00 [DBG] Token request success.
2020-01-18 22:02:24.047 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 22:02:24.049 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:24.049 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:24.051 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSB6BGE650:00000005",
  "TimeStamp": "2020-01-18T21:02:24Z",
  "ProcessId": 10248,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:02:24.054 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:02:24.054 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 22:02:24.055 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 22:02:24.056 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:02:24.063 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:24.064 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:24.065 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 22:02:24.066 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 22:02:24.066 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 22:02:24.068 +01:00 [DBG] Start authorize callback request
2020-01-18 22:02:24.069 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 22:02:24.069 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:02:24.070 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:02:24.070 +01:00 [DBG] No PKCE used.
2020-01-18 22:02:24.071 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:02:24.072 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "SessionId": "e9e466d40a38c8ab08a4e815ce7d5d1e",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b",
    "client_id": "nodejs"
  }
}
2020-01-18 22:02:24.073 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 22:02:24.074 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 22:02:24.081 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****7009"
    }
  ],
  "ActivityId": "0HLSSB6BGE650:00000006",
  "TimeStamp": "2020-01-18T21:02:24Z",
  "ProcessId": 10248,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:02:24.087 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "Scope": "openid profile"
}
2020-01-18 22:02:24.088 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:02:24.089 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:02:24.099 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 22:02:24.100 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 22:02:24.100 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 22:02:24.100 +01:00 [DBG] Start token request.
2020-01-18 22:02:24.101 +01:00 [DBG] Start client validation
2020-01-18 22:02:24.101 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 22:02:24.101 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 22:02:24.102 +01:00 [DBG] Secret id found: nodejs
2020-01-18 22:02:24.102 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 22:02:24.102 +01:00 [DBG] Client validation success
2020-01-18 22:02:24.103 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSB6BGE652:00000001",
  "TimeStamp": "2020-01-18T21:02:24Z",
  "ProcessId": 10248,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:02:24.104 +01:00 [DBG] Start token request validation
2020-01-18 22:02:24.104 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 22:02:24.111 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 22:02:24.111 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "1d46516a63db3fce5ee255f71d03dd956c71614af7ca3937a119c0722c5e7009",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "1d46516a63db3fce5ee255f71d03dd956c71614af7ca3937a119c0722c5e7009",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b"
  }
}
2020-01-18 22:02:24.112 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 22:02:24.112 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 22:02:26.358 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 22:02:26.360 +01:00 [DBG] Issued claims: []
2020-01-18 22:02:26.363 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 22:02:26.364 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 22:02:26.367 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****AQJg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****zBOw"
    }
  ],
  "ActivityId": "0HLSSB6BGE652:00000001",
  "TimeStamp": "2020-01-18T21:02:26Z",
  "ProcessId": 10248,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:02:26.368 +01:00 [DBG] Token request success.
2020-01-18 22:02:39.040 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 22:02:39.042 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:39.042 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:39.043 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSB6BGE650:00000007",
  "TimeStamp": "2020-01-18T21:02:39Z",
  "ProcessId": 10248,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:02:39.044 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:02:39.044 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 22:02:39.045 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 22:02:39.045 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:02:39.052 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:39.053 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:02:39.054 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 22:02:39.055 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 22:02:39.055 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 22:02:39.056 +01:00 [DBG] Start authorize callback request
2020-01-18 22:02:39.057 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 22:02:39.058 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:02:39.058 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:02:39.060 +01:00 [DBG] No PKCE used.
2020-01-18 22:02:39.060 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:02:39.061 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "SessionId": "b1394d09708b027d0baefae78539f2b6",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b",
    "client_id": "nodejs"
  }
}
2020-01-18 22:02:39.062 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 22:02:39.062 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 22:02:39.070 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****3bc6"
    }
  ],
  "ActivityId": "0HLSSB6BGE650:00000008",
  "TimeStamp": "2020-01-18T21:02:39Z",
  "ProcessId": 10248,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:02:39.072 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "Scope": "openid profile"
}
2020-01-18 22:02:39.074 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:02:39.074 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:02:39.086 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 22:02:39.089 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 22:02:39.093 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 22:02:39.094 +01:00 [DBG] Start token request.
2020-01-18 22:02:39.094 +01:00 [DBG] Start client validation
2020-01-18 22:02:39.095 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 22:02:39.096 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 22:02:39.096 +01:00 [DBG] Secret id found: nodejs
2020-01-18 22:02:39.096 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 22:02:39.097 +01:00 [DBG] Client validation success
2020-01-18 22:02:39.099 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSB6BGE653:00000001",
  "TimeStamp": "2020-01-18T21:02:39Z",
  "ProcessId": 10248,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:02:39.101 +01:00 [DBG] Start token request validation
2020-01-18 22:02:39.101 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 22:02:39.110 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 22:02:39.111 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "113dd582bf2b0904865a811042eea8eaea5065bb02e7369818a9db67d0773bc6",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "113dd582bf2b0904865a811042eea8eaea5065bb02e7369818a9db67d0773bc6",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b"
  }
}
2020-01-18 22:02:39.113 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 22:02:39.113 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 22:03:11.784 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 22:03:11.789 +01:00 [DBG] Issued claims: []
2020-01-18 22:03:11.793 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 22:03:11.793 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 22:03:11.796 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****uz6g"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****ex7A"
    }
  ],
  "ActivityId": "0HLSSB6BGE653:00000001",
  "TimeStamp": "2020-01-18T21:03:11Z",
  "ProcessId": 10248,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:03:11.798 +01:00 [DBG] Token request success.
2020-01-18 22:03:13.075 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 22:03:13.078 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:03:13.079 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:03:13.080 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSB6BGE650:00000009",
  "TimeStamp": "2020-01-18T21:03:13Z",
  "ProcessId": 10248,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:03:13.081 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:03:13.081 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 22:03:13.081 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 22:03:13.081 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:03:13.090 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:03:13.090 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:03:13.091 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 22:03:13.091 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 22:03:13.092 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 22:03:13.092 +01:00 [DBG] Start authorize callback request
2020-01-18 22:03:13.093 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 22:03:13.093 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:03:13.093 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:03:13.093 +01:00 [DBG] No PKCE used.
2020-01-18 22:03:13.094 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:03:13.094 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "SessionId": "89954a8cd0281bc50115593258312c2b",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b",
    "client_id": "nodejs"
  }
}
2020-01-18 22:03:13.095 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 22:03:13.095 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 22:03:13.102 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****cff1"
    }
  ],
  "ActivityId": "0HLSSB6BGE650:0000000A",
  "TimeStamp": "2020-01-18T21:03:13Z",
  "ProcessId": 10248,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:03:13.104 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "Scope": "openid profile"
}
2020-01-18 22:03:13.105 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:03:13.105 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:03:13.114 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 22:03:13.115 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 22:03:13.116 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 22:03:13.117 +01:00 [DBG] Start token request.
2020-01-18 22:03:13.117 +01:00 [DBG] Start client validation
2020-01-18 22:03:13.118 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 22:03:13.118 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 22:03:13.119 +01:00 [DBG] Secret id found: nodejs
2020-01-18 22:03:13.119 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 22:03:13.120 +01:00 [DBG] Client validation success
2020-01-18 22:03:13.120 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSB6BGE654:00000001",
  "TimeStamp": "2020-01-18T21:03:13Z",
  "ProcessId": 10248,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:03:13.122 +01:00 [DBG] Start token request validation
2020-01-18 22:03:13.122 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 22:03:13.129 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 22:03:13.130 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "1be535bb80e18d41a370c77227077b0a3a22a33e52eefe9e55773f985a5ecff1",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "1be535bb80e18d41a370c77227077b0a3a22a33e52eefe9e55773f985a5ecff1",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b"
  }
}
2020-01-18 22:03:13.135 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 22:03:13.135 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 22:03:13.232 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 22:03:13.233 +01:00 [DBG] Issued claims: []
2020-01-18 22:03:13.236 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 22:03:13.236 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 22:03:13.240 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****qdmA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****ZgaQ"
    }
  ],
  "ActivityId": "0HLSSB6BGE654:00000001",
  "TimeStamp": "2020-01-18T21:03:13Z",
  "ProcessId": 10248,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:03:13.241 +01:00 [DBG] Token request success.
2020-01-18 22:03:13.251 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 22:03:13.253 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 22:03:13.253 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 22:03:13.255 +01:00 [DBG] Start key discovery request
2020-01-18 22:03:13.281 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 22:03:13.283 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 22:03:13.283 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 22:03:13.286 +01:00 [DBG] Start userinfo request
2020-01-18 22:03:13.288 +01:00 [DBG] Bearer token found in header
2020-01-18 22:03:13.328 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 22:03:13.334 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579381393,
    "exp": 1579384993,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579381393,
    "idp": "local",
    "scope": [
      "openid",
      "profile"
    ],
    "amr": "pwd"
  }
}
2020-01-18 22:03:13.338 +01:00 [DBG] Creating userinfo response
2020-01-18 22:03:13.340 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:03:13.341 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:03:13.343 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 22:03:13.343 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:03:44.131 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 22:09:42.746 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 22:09:42.846 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 22:09:42.866 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 22:09:42.876 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 22:09:42.890 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 22:09:42.900 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 22:09:46.955 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 22:09:47.002 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:09:47.009 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:09:47.299 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSBAVMR68S:00000001",
  "TimeStamp": "2020-01-18T21:09:47Z",
  "ProcessId": 17232,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:09:47.311 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:09:47.313 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 22:09:47.313 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 22:09:47.324 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:09:47.365 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:09:47.367 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:09:47.368 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 22:09:47.374 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 22:09:47.375 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 22:09:47.379 +01:00 [DBG] Start authorize callback request
2020-01-18 22:09:47.387 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 22:09:47.390 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:09:47.399 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:09:47.400 +01:00 [DBG] No PKCE used.
2020-01-18 22:09:47.419 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:09:47.450 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "SessionId": "0a7a0d158427d27f9a0ca80801529935",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b",
    "client_id": "nodejs"
  }
}
2020-01-18 22:09:47.463 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 22:09:47.466 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 22:09:47.510 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****a3b8"
    }
  ],
  "ActivityId": "0HLSSBAVMR68S:00000002",
  "TimeStamp": "2020-01-18T21:09:47Z",
  "ProcessId": 17232,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:09:47.517 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "Scope": "openid profile"
}
2020-01-18 22:09:47.531 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:09:47.532 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:09:47.551 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 22:09:47.557 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 22:09:47.558 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 22:09:47.562 +01:00 [DBG] Start token request.
2020-01-18 22:09:47.565 +01:00 [DBG] Start client validation
2020-01-18 22:09:47.567 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 22:09:47.569 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 22:09:47.569 +01:00 [DBG] Secret id found: nodejs
2020-01-18 22:09:47.576 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 22:09:47.576 +01:00 [DBG] Client validation success
2020-01-18 22:09:47.583 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSBAVMR68T:00000001",
  "TimeStamp": "2020-01-18T21:09:47Z",
  "ProcessId": 17232,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:09:47.587 +01:00 [DBG] Start token request validation
2020-01-18 22:09:47.592 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 22:09:47.618 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 22:09:47.626 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "d6108662ff0e6e197a0b305469fdb93034772d07893ab69e126309156cc3a3b8",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "d6108662ff0e6e197a0b305469fdb93034772d07893ab69e126309156cc3a3b8",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b"
  }
}
2020-01-18 22:09:47.638 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 22:09:47.639 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 22:09:48.382 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 22:09:48.385 +01:00 [DBG] Issued claims: []
2020-01-18 22:09:48.438 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 22:09:48.439 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 22:09:48.443 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****VYuQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Zkhw"
    }
  ],
  "ActivityId": "0HLSSBAVMR68T:00000001",
  "TimeStamp": "2020-01-18T21:09:48Z",
  "ProcessId": 17232,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:09:48.445 +01:00 [DBG] Token request success.
2020-01-18 22:09:48.455 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 22:09:48.457 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 22:09:48.459 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 22:09:48.460 +01:00 [DBG] Start key discovery request
2020-01-18 22:09:48.474 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 22:09:48.476 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 22:09:48.476 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 22:09:48.479 +01:00 [DBG] Start userinfo request
2020-01-18 22:09:48.481 +01:00 [DBG] Bearer token found in header
2020-01-18 22:09:48.519 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 22:09:48.524 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579381788,
    "exp": 1579385388,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579381787,
    "idp": "local",
    "scope": [
      "openid",
      "profile"
    ],
    "amr": "pwd"
  }
}
2020-01-18 22:09:48.528 +01:00 [DBG] Creating userinfo response
2020-01-18 22:09:48.530 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:09:48.531 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:09:48.532 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 22:09:48.533 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:09:55.037 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 22:09:59.309 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2020-01-18 22:10:03.714 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website
2020-01-18 22:10:03.716 +01:00 [DBG] End userinfo request
2020-01-18 22:10:37.037 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 22:10:37.039 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:10:37.040 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:10:37.056 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSBAVMR68S:00000003",
  "TimeStamp": "2020-01-18T21:10:37Z",
  "ProcessId": 17232,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:10:37.058 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:10:37.058 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 22:10:37.058 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 22:10:37.059 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:10:37.065 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:10:37.066 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:10:37.067 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 22:10:37.067 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 22:10:37.068 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 22:10:37.068 +01:00 [DBG] Start authorize callback request
2020-01-18 22:10:37.069 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 22:10:37.069 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:10:37.069 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:10:37.070 +01:00 [DBG] No PKCE used.
2020-01-18 22:10:37.070 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:10:37.071 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "SessionId": "17bae321190fba66940a03682f225e9a",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b",
    "client_id": "nodejs"
  }
}
2020-01-18 22:10:37.072 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 22:10:37.072 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 22:10:37.080 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d433"
    }
  ],
  "ActivityId": "0HLSSBAVMR68S:00000004",
  "TimeStamp": "2020-01-18T21:10:37Z",
  "ProcessId": 17232,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:10:37.086 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "1ad6598b-a95a-4139-bce0-4deb039e984b",
  "Scope": "openid profile"
}
2020-01-18 22:10:37.087 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:10:37.089 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:10:37.099 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 22:10:37.100 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 22:10:37.100 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 22:10:37.101 +01:00 [DBG] Start token request.
2020-01-18 22:10:37.101 +01:00 [DBG] Start client validation
2020-01-18 22:10:37.101 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 22:10:37.101 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 22:10:37.102 +01:00 [DBG] Secret id found: nodejs
2020-01-18 22:10:37.102 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 22:10:37.102 +01:00 [DBG] Client validation success
2020-01-18 22:10:37.103 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSBAVMR690:00000001",
  "TimeStamp": "2020-01-18T21:10:37Z",
  "ProcessId": 17232,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:10:37.103 +01:00 [DBG] Start token request validation
2020-01-18 22:10:37.104 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 22:10:37.111 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 22:10:37.114 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "c4b541b8722e373703e13bebdecfe279a238527e7b13ec37aa97fcd53732d433",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "c4b541b8722e373703e13bebdecfe279a238527e7b13ec37aa97fcd53732d433",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "1ad6598b-a95a-4139-bce0-4deb039e984b"
  }
}
2020-01-18 22:10:37.119 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 22:10:37.120 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 22:10:37.120 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 22:10:37.120 +01:00 [DBG] Issued claims: []
2020-01-18 22:10:37.124 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 22:10:37.125 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-18 22:10:37.128 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****TnqA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****5_aA"
    }
  ],
  "ActivityId": "0HLSSBAVMR690:00000001",
  "TimeStamp": "2020-01-18T21:10:37Z",
  "ProcessId": 17232,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:10:37.129 +01:00 [DBG] Token request success.
2020-01-18 22:10:37.134 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 22:10:37.135 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 22:10:37.135 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 22:10:37.136 +01:00 [DBG] Start userinfo request
2020-01-18 22:10:37.136 +01:00 [DBG] Bearer token found in header
2020-01-18 22:10:37.139 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 22:10:37.140 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579381837,
    "exp": 1579385437,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579381837,
    "idp": "local",
    "scope": [
      "openid",
      "profile"
    ],
    "amr": "pwd"
  }
}
2020-01-18 22:10:37.141 +01:00 [DBG] Creating userinfo response
2020-01-18 22:10:37.141 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:10:37.141 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:10:37.142 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 22:10:37.143 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:10:37.143 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 22:10:37.144 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2020-01-18 22:10:37.145 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website
2020-01-18 22:10:37.145 +01:00 [DBG] End userinfo request
2020-01-18 22:10:37.610 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 22:10:37.611 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 22:10:37.612 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 22:10:37.613 +01:00 [DBG] Start discovery request
2020-01-18 22:10:37.721 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 22:10:37.722 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 22:10:37.723 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 22:10:37.725 +01:00 [DBG] Start key discovery request
2020-01-18 22:11:04.197 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-18 22:11:04.200 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 22:11:04.201 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 22:11:04.201 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 22:11:04.201 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 22:11:04.203 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 22:11:04.204 +01:00 [DBG] Start discovery request
2020-01-18 22:11:04.211 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2020-01-18 22:11:04.212 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 22:11:04.212 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 22:11:04.213 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 22:11:04.213 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 22:11:04.214 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 22:11:04.214 +01:00 [DBG] Start key discovery request
2020-01-18 22:11:18.711 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-18 22:11:18.712 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 22:11:18.713 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 22:11:18.713 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 22:11:18.713 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 22:11:18.714 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 22:11:18.714 +01:00 [DBG] Start discovery request
2020-01-18 22:11:18.730 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2020-01-18 22:11:18.731 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 22:11:18.732 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 22:11:18.732 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 22:11:18.732 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 22:11:18.733 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 22:11:18.733 +01:00 [DBG] Start key discovery request
2020-01-18 22:12:10.302 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 22:12:10.382 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 22:12:10.384 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 22:12:10.384 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 22:12:10.384 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 22:12:10.384 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 22:12:32.572 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 22:12:32.580 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 22:12:32.581 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 22:12:32.583 +01:00 [DBG] Start authorize request
2020-01-18 22:12:32.596 +01:00 [DBG] No user present in authorize request
2020-01-18 22:12:32.598 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:12:32.608 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:12:32.609 +01:00 [DBG] No PKCE used.
2020-01-18 22:12:32.631 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:12:32.685 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "12b04a9f-5b32-4649-b59a-51a3c0e07d16",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "12b04a9f-5b32-4649-b59a-51a3c0e07d16",
    "client_id": "nodejs"
  }
}
2020-01-18 22:12:32.690 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 22:12:32.870 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:12:32.870 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:12:32.871 +01:00 [DBG] No PKCE used.
2020-01-18 22:12:32.871 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:12:41.511 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 22:12:41.576 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSBCH27TA5:00000004",
  "TimeStamp": "2020-01-18T21:12:41Z",
  "ProcessId": 17024,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:12:41.584 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:12:41.585 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 22:12:41.585 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 22:12:41.594 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:12:41.625 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:12:41.626 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:12:41.626 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 22:12:41.627 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 22:12:41.627 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 22:12:41.630 +01:00 [DBG] Start authorize callback request
2020-01-18 22:12:41.634 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 22:12:41.634 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:12:41.634 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:12:41.635 +01:00 [DBG] No PKCE used.
2020-01-18 22:12:41.635 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:12:41.636 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "12b04a9f-5b32-4649-b59a-51a3c0e07d16",
  "SessionId": "4135d4d165927747100a7125fcd52abe",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "12b04a9f-5b32-4649-b59a-51a3c0e07d16",
    "client_id": "nodejs"
  }
}
2020-01-18 22:12:41.641 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 22:12:41.644 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 22:12:41.682 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****2742"
    }
  ],
  "ActivityId": "0HLSSBCH27TA5:00000005",
  "TimeStamp": "2020-01-18T21:12:41Z",
  "ProcessId": 17024,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:12:41.688 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "12b04a9f-5b32-4649-b59a-51a3c0e07d16",
  "Scope": "openid profile"
}
2020-01-18 22:12:41.696 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:12:41.697 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:12:41.719 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 22:12:41.723 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 22:12:41.724 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 22:12:41.727 +01:00 [DBG] Start token request.
2020-01-18 22:12:41.729 +01:00 [DBG] Start client validation
2020-01-18 22:12:41.731 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 22:12:41.732 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 22:12:41.733 +01:00 [DBG] Secret id found: nodejs
2020-01-18 22:12:41.738 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 22:12:41.738 +01:00 [DBG] Client validation success
2020-01-18 22:12:41.743 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSBCH27TA6:00000001",
  "TimeStamp": "2020-01-18T21:12:41Z",
  "ProcessId": 17024,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:12:41.748 +01:00 [DBG] Start token request validation
2020-01-18 22:12:41.754 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 22:12:41.781 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 22:12:41.787 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "2ae47b8159d0ff0e17cb611e15e5ca4cf8787314a25c76040bc6cd6393632742",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "2ae47b8159d0ff0e17cb611e15e5ca4cf8787314a25c76040bc6cd6393632742",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "12b04a9f-5b32-4649-b59a-51a3c0e07d16"
  }
}
2020-01-18 22:12:41.797 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 22:12:41.797 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 22:12:41.803 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 22:12:41.807 +01:00 [DBG] Issued claims: []
2020-01-18 22:12:41.858 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 22:12:41.861 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via ClaimsProviderIdentityToken
2020-01-18 22:12:41.866 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2020-01-18 22:12:41.871 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****hKzA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****RcWA"
    }
  ],
  "ActivityId": "0HLSSBCH27TA6:00000001",
  "TimeStamp": "2020-01-18T21:12:41Z",
  "ProcessId": 17024,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:12:41.873 +01:00 [DBG] Token request success.
2020-01-18 22:12:41.888 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 22:12:41.890 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 22:12:41.890 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 22:12:41.892 +01:00 [DBG] Start key discovery request
2020-01-18 22:12:41.920 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 22:12:41.923 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 22:12:41.924 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 22:12:41.928 +01:00 [DBG] Start userinfo request
2020-01-18 22:12:41.930 +01:00 [DBG] Bearer token found in header
2020-01-18 22:12:41.978 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 22:12:41.983 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579381961,
    "exp": 1579385561,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579381961,
    "idp": "local",
    "scope": [
      "openid",
      "profile"
    ],
    "amr": "pwd"
  }
}
2020-01-18 22:12:41.988 +01:00 [DBG] Creating userinfo response
2020-01-18 22:12:41.993 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:12:41.995 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:12:41.997 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 22:12:41.998 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:12:41.998 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 22:12:42.000 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2020-01-18 22:12:42.001 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website
2020-01-18 22:12:42.002 +01:00 [DBG] End userinfo request
2020-01-18 22:13:07.073 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-18 22:13:07.075 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 22:13:07.076 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 22:13:07.076 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 22:13:07.077 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 22:13:07.079 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 22:13:07.081 +01:00 [DBG] Start discovery request
2020-01-18 22:13:07.103 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2020-01-18 22:13:07.103 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 22:13:07.104 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 22:13:07.105 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 22:13:07.106 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 22:13:07.107 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 22:13:07.108 +01:00 [DBG] Start key discovery request
2020-01-18 22:14:08.064 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-18 22:14:08.065 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 22:14:08.065 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 22:14:08.066 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 22:14:08.066 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 22:14:08.067 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 22:14:08.069 +01:00 [DBG] Start discovery request
2020-01-18 22:14:08.078 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2020-01-18 22:14:08.079 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 22:14:08.079 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 22:14:08.080 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 22:14:08.081 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 22:14:08.081 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 22:14:08.084 +01:00 [DBG] Start key discovery request
2020-01-18 22:14:10.675 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-18 22:14:10.676 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 22:14:10.677 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 22:14:10.677 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 22:14:10.678 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 22:14:10.678 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 22:14:10.679 +01:00 [DBG] Start discovery request
2020-01-18 22:14:10.686 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2020-01-18 22:14:10.687 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 22:14:10.687 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 22:14:10.688 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 22:14:10.688 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 22:14:10.688 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 22:14:10.689 +01:00 [DBG] Start key discovery request
2020-01-18 22:23:10.279 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 22:23:10.280 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 22:23:10.280 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 22:23:10.282 +01:00 [DBG] Start authorize request
2020-01-18 22:23:10.283 +01:00 [DBG] No user present in authorize request
2020-01-18 22:23:10.283 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:23:10.283 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:23:10.284 +01:00 [DBG] No PKCE used.
2020-01-18 22:23:10.284 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:23:10.285 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "191f03d9-4397-4df0-a4c9-46e904fa7682",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "191f03d9-4397-4df0-a4c9-46e904fa7682",
    "client_id": "nodejs"
  }
}
2020-01-18 22:23:10.286 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 22:23:10.292 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:23:10.293 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:23:10.293 +01:00 [DBG] No PKCE used.
2020-01-18 22:23:10.293 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:23:18.768 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 22:23:18.771 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSBCH27TAD:00000004",
  "TimeStamp": "2020-01-18T21:23:18Z",
  "ProcessId": 17024,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:23:18.773 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:23:18.773 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 22:23:18.774 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 22:23:18.775 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:23:18.785 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:23:18.785 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:23:18.786 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 22:23:18.787 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 22:23:18.788 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 22:23:18.789 +01:00 [DBG] Start authorize callback request
2020-01-18 22:23:18.789 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 22:23:18.790 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:23:18.790 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:23:18.790 +01:00 [DBG] No PKCE used.
2020-01-18 22:23:18.791 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:23:18.791 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile",
  "State": "191f03d9-4397-4df0-a4c9-46e904fa7682",
  "SessionId": "b023025cb0bee0cb81e781cc5903dcda",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile",
    "response_type": "code",
    "state": "191f03d9-4397-4df0-a4c9-46e904fa7682",
    "client_id": "nodejs"
  }
}
2020-01-18 22:23:18.794 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 22:23:18.794 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 22:23:18.805 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****8325"
    }
  ],
  "ActivityId": "0HLSSBCH27TAD:00000005",
  "TimeStamp": "2020-01-18T21:23:18Z",
  "ProcessId": 17024,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:23:18.811 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "191f03d9-4397-4df0-a4c9-46e904fa7682",
  "Scope": "openid profile"
}
2020-01-18 22:23:18.812 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:23:18.812 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:23:18.835 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 22:23:18.836 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 22:23:18.836 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 22:23:18.837 +01:00 [DBG] Start token request.
2020-01-18 22:23:18.837 +01:00 [DBG] Start client validation
2020-01-18 22:23:18.837 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 22:23:18.838 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 22:23:18.841 +01:00 [DBG] Secret id found: nodejs
2020-01-18 22:23:18.842 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 22:23:18.842 +01:00 [DBG] Client validation success
2020-01-18 22:23:18.843 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSBCH27TAE:00000001",
  "TimeStamp": "2020-01-18T21:23:18Z",
  "ProcessId": 17024,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:23:18.844 +01:00 [DBG] Start token request validation
2020-01-18 22:23:18.845 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 22:23:18.854 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 22:23:18.855 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "b0b305c8c12ecf02294e69c66b79b85a8ec25df97d581b2ae7f4f1dfdb528325",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "b0b305c8c12ecf02294e69c66b79b85a8ec25df97d581b2ae7f4f1dfdb528325",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "191f03d9-4397-4df0-a4c9-46e904fa7682"
  }
}
2020-01-18 22:23:18.856 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 22:23:18.857 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 22:23:18.857 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 22:23:18.858 +01:00 [DBG] Issued claims: []
2020-01-18 22:23:18.863 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 22:23:18.864 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via ClaimsProviderIdentityToken
2020-01-18 22:23:18.867 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2020-01-18 22:23:18.872 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****-oew"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****w-kQ"
    }
  ],
  "ActivityId": "0HLSSBCH27TAE:00000001",
  "TimeStamp": "2020-01-18T21:23:18Z",
  "ProcessId": 17024,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:23:18.875 +01:00 [DBG] Token request success.
2020-01-18 22:23:18.886 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 22:23:18.887 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 22:23:18.888 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 22:23:18.890 +01:00 [DBG] Start key discovery request
2020-01-18 22:23:18.907 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 22:23:18.908 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 22:23:18.910 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 22:23:18.912 +01:00 [DBG] Start userinfo request
2020-01-18 22:23:18.913 +01:00 [DBG] Bearer token found in header
2020-01-18 22:23:18.915 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 22:23:18.916 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579382598,
    "exp": 1579386198,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579382598,
    "idp": "local",
    "scope": [
      "openid",
      "profile"
    ],
    "amr": "pwd"
  }
}
2020-01-18 22:23:18.918 +01:00 [DBG] Creating userinfo response
2020-01-18 22:23:18.919 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:23:18.919 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:23:18.920 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at
2020-01-18 22:23:18.921 +01:00 [DBG] Scopes in access token: openid profile
2020-01-18 22:23:18.922 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at"] via UserInfoEndpoint
2020-01-18 22:23:18.924 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website"]
2020-01-18 22:23:18.928 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website
2020-01-18 22:23:18.931 +01:00 [DBG] End userinfo request
2020-01-18 22:23:32.434 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-18 22:23:32.434 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 22:23:32.435 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 22:23:32.436 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 22:23:32.437 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 22:23:32.438 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 22:23:32.438 +01:00 [DBG] Start discovery request
2020-01-18 22:23:32.445 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2020-01-18 22:23:32.445 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 22:23:32.446 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 22:23:32.446 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 22:23:32.447 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 22:23:32.448 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 22:23:32.449 +01:00 [DBG] Start key discovery request
2020-01-18 22:24:30.812 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 22:24:30.813 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 22:24:30.813 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 22:24:30.813 +01:00 [DBG] Start discovery request
2020-01-18 22:24:50.010 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 22:24:50.012 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 22:24:50.012 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 22:24:50.013 +01:00 [DBG] Start authorize request
2020-01-18 22:24:50.013 +01:00 [DBG] No user present in authorize request
2020-01-18 22:24:50.013 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:24:50.013 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:24:50.014 +01:00 [DBG] No PKCE used.
2020-01-18 22:24:50.015 +01:00 [ERR] Invalid scope: role
2020-01-18 22:24:50.017 +01:00 [ERR] Request validation failed
2020-01-18 22:24:50.017 +01:00 [INF] {
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "c8b07c3a-03a2-4826-a0ae-bd94ba7997e0",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "c8b07c3a-03a2-4826-a0ae-bd94ba7997e0",
    "client_id": "nodejs"
  }
}
2020-01-18 22:24:50.026 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Error": "invalid_scope",
  "ActivityId": "0HLSSBCH27TAD:00000006",
  "TimeStamp": "2020-01-18T21:24:50Z",
  "ProcessId": 17024,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:25:20.592 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-18 22:25:20.628 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-18 22:25:20.630 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-18 22:25:20.631 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-18 22:25:20.631 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-18 22:25:20.631 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-18 22:25:22.444 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-18 22:25:22.451 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-18 22:25:22.451 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-18 22:25:22.455 +01:00 [DBG] Start authorize request
2020-01-18 22:25:22.464 +01:00 [DBG] No user present in authorize request
2020-01-18 22:25:22.468 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:25:22.480 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:25:22.481 +01:00 [DBG] No PKCE used.
2020-01-18 22:25:22.507 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:25:22.569 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "6dad146e-4492-47d8-97c0-4d1dd306c7d2",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "6dad146e-4492-47d8-97c0-4d1dd306c7d2",
    "client_id": "nodejs"
  }
}
2020-01-18 22:25:22.576 +01:00 [INF] Showing login: User is not authenticated
2020-01-18 22:25:22.703 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:25:22.703 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:25:22.704 +01:00 [DBG] No PKCE used.
2020-01-18 22:25:22.704 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:25:30.344 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-18 22:25:30.396 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSBJMG6LBI:00000004",
  "TimeStamp": "2020-01-18T21:25:30Z",
  "ProcessId": 9616,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:25:30.409 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:25:30.412 +01:00 [DBG] Adding idp claim with value: local
2020-01-18 22:25:30.412 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-18 22:25:30.420 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:25:30.434 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:25:30.434 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-18 22:25:30.435 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-18 22:25:30.437 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-18 22:25:30.437 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-18 22:25:30.442 +01:00 [DBG] Start authorize callback request
2020-01-18 22:25:30.446 +01:00 [DBG] User in authorize request: 88421113
2020-01-18 22:25:30.447 +01:00 [DBG] Start authorize request protocol validation
2020-01-18 22:25:30.447 +01:00 [DBG] Checking for PKCE parameters
2020-01-18 22:25:30.448 +01:00 [DBG] No PKCE used.
2020-01-18 22:25:30.449 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-18 22:25:30.450 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "6dad146e-4492-47d8-97c0-4d1dd306c7d2",
  "SessionId": "d9a8088c6740eb46293a7c3a25cf00df",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "6dad146e-4492-47d8-97c0-4d1dd306c7d2",
    "client_id": "nodejs"
  }
}
2020-01-18 22:25:30.464 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-18 22:25:30.470 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-18 22:25:30.501 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****4fe8"
    }
  ],
  "ActivityId": "0HLSSBJMG6LBI:00000005",
  "TimeStamp": "2020-01-18T21:25:30Z",
  "ProcessId": 9616,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-18 22:25:30.506 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "6dad146e-4492-47d8-97c0-4d1dd306c7d2",
  "Scope": "openid profile role"
}
2020-01-18 22:25:30.521 +01:00 [DBG] Augmenting SignInContext
2020-01-18 22:25:30.522 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-18 22:25:30.545 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-18 22:25:30.548 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-18 22:25:30.549 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-18 22:25:30.555 +01:00 [DBG] Start token request.
2020-01-18 22:25:30.561 +01:00 [DBG] Start client validation
2020-01-18 22:25:30.565 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-18 22:25:30.566 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-18 22:25:30.566 +01:00 [DBG] Secret id found: nodejs
2020-01-18 22:25:30.572 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-18 22:25:30.573 +01:00 [DBG] Client validation success
2020-01-18 22:25:30.577 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSBJMG6LBK:00000001",
  "TimeStamp": "2020-01-18T21:25:30Z",
  "ProcessId": 9616,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:25:30.583 +01:00 [DBG] Start token request validation
2020-01-18 22:25:30.592 +01:00 [DBG] Start validation of authorization code token request
2020-01-18 22:25:30.620 +01:00 [DBG] Validation of authorization code token request success
2020-01-18 22:25:30.624 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "d337bdf7367b41162a9a2bba72088227a317e5fe122679cdfd73a56e15c44fe8",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "d337bdf7367b41162a9a2bba72088227a317e5fe122679cdfd73a56e15c44fe8",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "6dad146e-4492-47d8-97c0-4d1dd306c7d2"
  }
}
2020-01-18 22:25:30.645 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-18 22:25:30.646 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-18 22:25:30.651 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-18 22:25:30.654 +01:00 [DBG] Issued claims: []
2020-01-18 22:25:30.713 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-18 22:25:30.715 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via ClaimsProviderIdentityToken
2020-01-18 22:25:30.722 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-18 22:25:30.728 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****6pgw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****BaXA"
    }
  ],
  "ActivityId": "0HLSSBJMG6LBK:00000001",
  "TimeStamp": "2020-01-18T21:25:30Z",
  "ProcessId": 9616,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-18 22:25:30.730 +01:00 [DBG] Token request success.
2020-01-18 22:25:30.750 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 22:25:30.751 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 22:25:30.751 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 22:25:30.754 +01:00 [DBG] Start key discovery request
2020-01-18 22:25:30.782 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-18 22:25:30.783 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-18 22:25:30.783 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-18 22:25:30.788 +01:00 [DBG] Start userinfo request
2020-01-18 22:25:30.792 +01:00 [DBG] Bearer token found in header
2020-01-18 22:25:30.846 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-18 22:25:30.850 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579382730,
    "exp": 1579386330,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579382730,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "role"
    ],
    "amr": "pwd"
  }
}
2020-01-18 22:25:30.855 +01:00 [DBG] Creating userinfo response
2020-01-18 22:25:30.858 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-18 22:25:30.860 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-18 22:25:30.865 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at role
2020-01-18 22:25:30.868 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-18 22:25:30.869 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via UserInfoEndpoint
2020-01-18 22:25:30.870 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-18 22:25:30.870 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website role
2020-01-18 22:25:30.871 +01:00 [DBG] End userinfo request
2020-01-18 22:25:31.272 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 22:25:31.273 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 22:25:31.273 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 22:25:31.276 +01:00 [DBG] Start discovery request
2020-01-18 22:25:31.332 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 22:25:31.333 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 22:25:31.333 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 22:25:31.334 +01:00 [DBG] Start key discovery request
2020-01-18 22:25:50.547 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-18 22:25:50.549 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 22:25:50.550 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 22:25:50.550 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-18 22:25:50.551 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-18 22:25:50.551 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-18 22:25:50.552 +01:00 [DBG] Start discovery request
2020-01-18 22:25:50.567 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2020-01-18 22:25:50.568 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-18 22:25:50.569 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-18 22:25:50.569 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-18 22:25:50.569 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-18 22:25:50.570 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-18 22:25:50.570 +01:00 [DBG] Start key discovery request
2020-01-19 13:12:05.969 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 13:12:06.147 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 13:12:06.159 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 13:12:06.161 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 13:12:06.161 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 13:12:06.165 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 13:14:09.899 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:14:09.904 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:14:09.905 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:14:09.907 +01:00 [DBG] Start discovery request
2020-01-19 13:14:10.110 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:14:10.114 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:14:10.117 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:14:10.121 +01:00 [DBG] Start key discovery request
2020-01-19 13:16:41.524 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:16:41.529 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:16:41.531 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:16:41.532 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:16:41.534 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:16:41.536 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:16:41.537 +01:00 [DBG] Start discovery request
2020-01-19 13:16:43.435 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:16:43.436 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:16:43.437 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:16:43.438 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:16:43.439 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:16:43.440 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:16:43.441 +01:00 [DBG] Start key discovery request
2020-01-19 13:16:43.459 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:16:43.465 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:16:43.467 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:16:43.471 +01:00 [DBG] Start authorize request
2020-01-19 13:16:43.482 +01:00 [DBG] No user present in authorize request
2020-01-19 13:16:43.485 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:16:43.512 +01:00 [ERR] Invalid redirect_uri: http://localhost:4201/index.html
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [],
  "SubjectId": "anonymous",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "id_token token",
    "client_id": "angular",
    "state": "f4WL2nu4tvMooeLAlhfikZJLYCMGyL2-zuI-D-OId9l9M",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "nonce": "f4WL2nu4tvMooeLAlhfikZJLYCMGyL2-zuI-D-OId9l9M"
  }
}
2020-01-19 13:16:43.516 +01:00 [ERR] Request validation failed
2020-01-19 13:16:43.516 +01:00 [INF] {
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [],
  "SubjectId": "anonymous",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "id_token token",
    "client_id": "angular",
    "state": "f4WL2nu4tvMooeLAlhfikZJLYCMGyL2-zuI-D-OId9l9M",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "nonce": "f4WL2nu4tvMooeLAlhfikZJLYCMGyL2-zuI-D-OId9l9M"
  }
}
2020-01-19 13:16:43.552 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Authorize",
  "Scopes": "",
  "Error": "unauthorized_client",
  "ErrorDescription": "Invalid redirect_uri",
  "ActivityId": "0HLSSR4BA9S9U:00000001",
  "TimeStamp": "2020-01-19T12:16:43Z",
  "ProcessId": 12452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:23:34.434 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 13:23:34.522 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 13:23:34.525 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 13:23:34.525 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 13:23:34.526 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 13:23:34.526 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 13:23:47.823 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:23:47.829 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:23:47.831 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:23:47.885 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:23:47.889 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:23:47.890 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:23:47.894 +01:00 [DBG] Start discovery request
2020-01-19 13:23:47.990 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:23:47.990 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:23:47.991 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:23:47.995 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:23:47.997 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:23:47.999 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:23:48.005 +01:00 [DBG] Start key discovery request
2020-01-19 13:23:48.029 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:23:48.030 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:23:48.031 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:23:48.033 +01:00 [DBG] Start discovery request
2020-01-19 13:23:48.065 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:23:48.071 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:23:48.071 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:23:48.074 +01:00 [DBG] Start authorize request
2020-01-19 13:23:48.081 +01:00 [DBG] No user present in authorize request
2020-01-19 13:23:48.084 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:23:48.104 +01:00 [ERR] Invalid redirect_uri: http://localhost:4201/index.html
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/auth/index.html"
  ],
  "SubjectId": "anonymous",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "n5ezeMWfwBFW4YGI4DxqhqBJJ7IJnlGemyOOxZ6GvpQsu",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "SUBc_tyJSlCL3U3ImEbXW5yzmETCDpgbQbu8Ekju_GQ",
    "code_challenge_method": "S256",
    "nonce": "n5ezeMWfwBFW4YGI4DxqhqBJJ7IJnlGemyOOxZ6GvpQsu"
  }
}
2020-01-19 13:23:48.106 +01:00 [ERR] Request validation failed
2020-01-19 13:23:48.107 +01:00 [INF] {
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/auth/index.html"
  ],
  "SubjectId": "anonymous",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "n5ezeMWfwBFW4YGI4DxqhqBJJ7IJnlGemyOOxZ6GvpQsu",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "SUBc_tyJSlCL3U3ImEbXW5yzmETCDpgbQbu8Ekju_GQ",
    "code_challenge_method": "S256",
    "nonce": "n5ezeMWfwBFW4YGI4DxqhqBJJ7IJnlGemyOOxZ6GvpQsu"
  }
}
2020-01-19 13:23:48.135 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Authorize",
  "Scopes": "",
  "Error": "unauthorized_client",
  "ErrorDescription": "Invalid redirect_uri",
  "ActivityId": "0HLSSR9NHLLMD:00000001",
  "TimeStamp": "2020-01-19T12:23:48Z",
  "ProcessId": 8280,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:23:48.136 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:23:48.143 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:23:48.143 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:23:48.144 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:23.086 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 13:24:23.158 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 13:24:23.160 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 13:24:23.161 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 13:24:23.161 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 13:24:23.161 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 13:24:28.902 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:28.907 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:28.909 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:28.947 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:28.950 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:28.951 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:28.954 +01:00 [DBG] Start discovery request
2020-01-19 13:24:29.041 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:29.042 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:29.043 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:29.048 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:29.051 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:29.052 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:29.054 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:29.097 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:29.103 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:29.104 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:29.107 +01:00 [DBG] Start authorize request
2020-01-19 13:24:29.112 +01:00 [DBG] No user present in authorize request
2020-01-19 13:24:29.114 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:29.123 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:29.145 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:29.159 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "e7IEKSLMlRBnsoT1DKmD_XCxZLOL2dOBNrWi0vDNqlU2D",
  "Nonce": "e7IEKSLMlRBnsoT1DKmD_XCxZLOL2dOBNrWi0vDNqlU2D",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "e7IEKSLMlRBnsoT1DKmD_XCxZLOL2dOBNrWi0vDNqlU2D",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "dYIov3jQ71b1LbnzKvuBy60yC1z1egeie0JHtLWXxsc",
    "code_challenge_method": "S256",
    "nonce": "e7IEKSLMlRBnsoT1DKmD_XCxZLOL2dOBNrWi0vDNqlU2D"
  }
}
2020-01-19 13:24:29.163 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 13:24:29.330 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:29.330 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:29.331 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:40.902 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 13:24:40.968 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSRA3BHEDC:00000004",
  "TimeStamp": "2020-01-19T12:24:40Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:40.977 +01:00 [DBG] Augmenting SignInContext
2020-01-19 13:24:40.979 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 13:24:40.979 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 13:24:40.988 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 13:24:41.024 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:41.025 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:41.025 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 13:24:41.026 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 13:24:41.027 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 13:24:41.029 +01:00 [DBG] Start authorize callback request
2020-01-19 13:24:41.033 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:41.034 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:41.034 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:41.035 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:41.036 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "e7IEKSLMlRBnsoT1DKmD_XCxZLOL2dOBNrWi0vDNqlU2D",
  "Nonce": "e7IEKSLMlRBnsoT1DKmD_XCxZLOL2dOBNrWi0vDNqlU2D",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "e7IEKSLMlRBnsoT1DKmD_XCxZLOL2dOBNrWi0vDNqlU2D",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "dYIov3jQ71b1LbnzKvuBy60yC1z1egeie0JHtLWXxsc",
    "code_challenge_method": "S256",
    "nonce": "e7IEKSLMlRBnsoT1DKmD_XCxZLOL2dOBNrWi0vDNqlU2D"
  }
}
2020-01-19 13:24:41.042 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:41.045 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:41.076 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****9ef7"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000005",
  "TimeStamp": "2020-01-19T12:24:41Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:41.081 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "e7IEKSLMlRBnsoT1DKmD_XCxZLOL2dOBNrWi0vDNqlU2D",
  "Scope": "openid profile api"
}
2020-01-19 13:24:41.088 +01:00 [DBG] Augmenting SignInContext
2020-01-19 13:24:41.089 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 13:24:41.869 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:41.871 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:41.871 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:41.872 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:41.872 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:41.873 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:41.874 +01:00 [DBG] Start discovery request
2020-01-19 13:24:41.928 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:41.930 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:41.930 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:41.931 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:41.931 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:41.932 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:41.932 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:41.961 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:41.963 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:41.964 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:41.965 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:41.966 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:41.967 +01:00 [DBG] Start authorize request
2020-01-19 13:24:41.968 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:41.968 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:41.969 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:41.970 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:41.971 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "ZCp3Rb5cgBb-GmGfhoDkd0eENVwrV_txvrv8krRLFW-GK",
  "Nonce": "ZCp3Rb5cgBb-GmGfhoDkd0eENVwrV_txvrv8krRLFW-GK",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "ZCp3Rb5cgBb-GmGfhoDkd0eENVwrV_txvrv8krRLFW-GK",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "-edJmDPy_-OdmrS5cDM0dOZRf-hbeoNdJMREN6tfg48",
    "code_challenge_method": "S256",
    "nonce": "ZCp3Rb5cgBb-GmGfhoDkd0eENVwrV_txvrv8krRLFW-GK"
  }
}
2020-01-19 13:24:41.975 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:41.975 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:41.982 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****c93a"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000006",
  "TimeStamp": "2020-01-19T12:24:41Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:41.985 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "ZCp3Rb5cgBb-GmGfhoDkd0eENVwrV_txvrv8krRLFW-GK",
  "Scope": "openid profile api"
}
2020-01-19 13:24:42.462 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:42.462 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:42.463 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:42.463 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:42.464 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:42.464 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:42.465 +01:00 [DBG] Start discovery request
2020-01-19 13:24:42.513 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:42.514 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:42.515 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:42.515 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:42.516 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:42.520 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:42.522 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:42.545 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:42.545 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:42.546 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:42.547 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:42.548 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:42.549 +01:00 [DBG] Start authorize request
2020-01-19 13:24:42.549 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:42.550 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:42.550 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:42.551 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:42.552 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "UoH5ocMXhBqrJ_ZDu1hdebK2mng-B65yp7SaSaF2fw7uV",
  "Nonce": "UoH5ocMXhBqrJ_ZDu1hdebK2mng-B65yp7SaSaF2fw7uV",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "UoH5ocMXhBqrJ_ZDu1hdebK2mng-B65yp7SaSaF2fw7uV",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "CyWf1CbvUsVjGjbhJOAAJc39r8-UQwQ-lZLIrPXkOUI",
    "code_challenge_method": "S256",
    "nonce": "UoH5ocMXhBqrJ_ZDu1hdebK2mng-B65yp7SaSaF2fw7uV"
  }
}
2020-01-19 13:24:42.553 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:42.554 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:42.562 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****986d"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000007",
  "TimeStamp": "2020-01-19T12:24:42Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:42.564 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "UoH5ocMXhBqrJ_ZDu1hdebK2mng-B65yp7SaSaF2fw7uV",
  "Scope": "openid profile api"
}
2020-01-19 13:24:43.045 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:43.046 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:43.046 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:43.047 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:43.048 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:43.048 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:43.049 +01:00 [DBG] Start discovery request
2020-01-19 13:24:43.107 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:43.108 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:43.108 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:43.109 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:43.109 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:43.110 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:43.110 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:43.128 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:43.128 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:43.129 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:43.129 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:43.130 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:43.130 +01:00 [DBG] Start authorize request
2020-01-19 13:24:43.131 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:43.131 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:43.131 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:43.132 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:43.132 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "H_0WUZLzW-UU-LYZtJrrpp0DyvaAWi4Nq5AZV0RaphaAH",
  "Nonce": "H_0WUZLzW-UU-LYZtJrrpp0DyvaAWi4Nq5AZV0RaphaAH",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "H_0WUZLzW-UU-LYZtJrrpp0DyvaAWi4Nq5AZV0RaphaAH",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "3dwuN2hzncngrTIlOJAmpCp4cYaIv-LaNPkP0GbhF4U",
    "code_challenge_method": "S256",
    "nonce": "H_0WUZLzW-UU-LYZtJrrpp0DyvaAWi4Nq5AZV0RaphaAH"
  }
}
2020-01-19 13:24:43.134 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:43.135 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:43.143 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d5a7"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000008",
  "TimeStamp": "2020-01-19T12:24:43Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:43.144 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "H_0WUZLzW-UU-LYZtJrrpp0DyvaAWi4Nq5AZV0RaphaAH",
  "Scope": "openid profile api"
}
2020-01-19 13:24:43.620 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:43.620 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:43.621 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:43.621 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:43.622 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:43.622 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:43.623 +01:00 [DBG] Start discovery request
2020-01-19 13:24:43.661 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:43.662 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:43.662 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:43.663 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:43.664 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:43.664 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:43.665 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:43.689 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:43.690 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:43.691 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:43.691 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:43.692 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:43.692 +01:00 [DBG] Start authorize request
2020-01-19 13:24:43.693 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:43.693 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:43.693 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:43.694 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:43.695 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "ZZ90AIJBxvFqhfCySbB4Wjn1xr70D5Q-MTwf8_xkzFZKk",
  "Nonce": "ZZ90AIJBxvFqhfCySbB4Wjn1xr70D5Q-MTwf8_xkzFZKk",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "ZZ90AIJBxvFqhfCySbB4Wjn1xr70D5Q-MTwf8_xkzFZKk",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "wWJ4tmwbt0usRqbFgEq7eyRyDOrUndXLP6TU_fjn2vs",
    "code_challenge_method": "S256",
    "nonce": "ZZ90AIJBxvFqhfCySbB4Wjn1xr70D5Q-MTwf8_xkzFZKk"
  }
}
2020-01-19 13:24:43.699 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:43.700 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:43.708 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****9842"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000009",
  "TimeStamp": "2020-01-19T12:24:43Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:43.713 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "ZZ90AIJBxvFqhfCySbB4Wjn1xr70D5Q-MTwf8_xkzFZKk",
  "Scope": "openid profile api"
}
2020-01-19 13:24:44.169 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:44.170 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:44.170 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:44.171 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:44.171 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:44.172 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:44.172 +01:00 [DBG] Start discovery request
2020-01-19 13:24:44.217 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:44.221 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:44.222 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:44.223 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:44.227 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:44.227 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:44.228 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:44.249 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:44.251 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:44.252 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:44.252 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:44.253 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:44.253 +01:00 [DBG] Start authorize request
2020-01-19 13:24:44.254 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:44.254 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:44.254 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:44.255 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:44.255 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "WaV_LWyo0ttwyiyRh9ASvU4UmpZzCW6TaZSI57SU5fCI5",
  "Nonce": "WaV_LWyo0ttwyiyRh9ASvU4UmpZzCW6TaZSI57SU5fCI5",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "WaV_LWyo0ttwyiyRh9ASvU4UmpZzCW6TaZSI57SU5fCI5",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "n54QPcGvd_nGEmmaS_2yRU6m07LJI-6ysE82Aqv404Q",
    "code_challenge_method": "S256",
    "nonce": "WaV_LWyo0ttwyiyRh9ASvU4UmpZzCW6TaZSI57SU5fCI5"
  }
}
2020-01-19 13:24:44.261 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:44.262 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:44.273 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****8dc5"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000000A",
  "TimeStamp": "2020-01-19T12:24:44Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:44.274 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "WaV_LWyo0ttwyiyRh9ASvU4UmpZzCW6TaZSI57SU5fCI5",
  "Scope": "openid profile api"
}
2020-01-19 13:24:44.743 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:44.743 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:44.744 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:44.744 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:44.745 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:44.746 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:44.747 +01:00 [DBG] Start discovery request
2020-01-19 13:24:44.797 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:44.798 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:44.799 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:44.799 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:44.800 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:44.800 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:44.804 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:44.830 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:44.831 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:44.831 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:44.832 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:44.833 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:44.834 +01:00 [DBG] Start authorize request
2020-01-19 13:24:44.834 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:44.835 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:44.835 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:44.836 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:44.837 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "LbFyNCdffsVfArRSCMGX_byBEvDsfBG1XvMtQrhwOzaKw",
  "Nonce": "LbFyNCdffsVfArRSCMGX_byBEvDsfBG1XvMtQrhwOzaKw",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "LbFyNCdffsVfArRSCMGX_byBEvDsfBG1XvMtQrhwOzaKw",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "UhcRJWb2-O9k5jKsAn3NkeFzrugw4E--tL5yFJnyU7w",
    "code_challenge_method": "S256",
    "nonce": "LbFyNCdffsVfArRSCMGX_byBEvDsfBG1XvMtQrhwOzaKw"
  }
}
2020-01-19 13:24:44.838 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:44.839 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:44.847 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****59a3"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000000B",
  "TimeStamp": "2020-01-19T12:24:44Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:44.849 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "LbFyNCdffsVfArRSCMGX_byBEvDsfBG1XvMtQrhwOzaKw",
  "Scope": "openid profile api"
}
2020-01-19 13:24:45.302 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:45.303 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:45.303 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:45.304 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:45.304 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:45.305 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:45.306 +01:00 [DBG] Start discovery request
2020-01-19 13:24:45.342 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:45.342 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:45.343 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:45.343 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:45.344 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:45.345 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:45.345 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:45.366 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:45.367 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:45.369 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:45.369 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:45.370 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:45.371 +01:00 [DBG] Start authorize request
2020-01-19 13:24:45.371 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:45.372 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:45.373 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:45.374 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:45.375 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "Yv0Mv1VWDDVHrUqSXgEWasDMwqrTXqmrv3IDNA8lniCA5",
  "Nonce": "Yv0Mv1VWDDVHrUqSXgEWasDMwqrTXqmrv3IDNA8lniCA5",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "Yv0Mv1VWDDVHrUqSXgEWasDMwqrTXqmrv3IDNA8lniCA5",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "sEvQfbQDB1ZqxsjRcFqYZQtpFlvhcvZF8KQP2ePLRBQ",
    "code_challenge_method": "S256",
    "nonce": "Yv0Mv1VWDDVHrUqSXgEWasDMwqrTXqmrv3IDNA8lniCA5"
  }
}
2020-01-19 13:24:45.378 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:45.379 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:45.389 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****b6e8"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000000C",
  "TimeStamp": "2020-01-19T12:24:45Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:45.392 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "Yv0Mv1VWDDVHrUqSXgEWasDMwqrTXqmrv3IDNA8lniCA5",
  "Scope": "openid profile api"
}
2020-01-19 13:24:45.863 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:45.864 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:45.865 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:45.865 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:45.865 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:45.866 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:45.867 +01:00 [DBG] Start discovery request
2020-01-19 13:24:45.914 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:45.915 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:45.918 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:45.918 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:45.919 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:45.919 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:45.920 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:45.965 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:45.970 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:45.971 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:45.972 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:45.973 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:45.974 +01:00 [DBG] Start authorize request
2020-01-19 13:24:45.974 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:45.975 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:45.977 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:45.978 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:45.980 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "xxhhmHfKPBshMjtduc8Pwrxj6RuTHtrhwbfUEOuGUN5vM",
  "Nonce": "xxhhmHfKPBshMjtduc8Pwrxj6RuTHtrhwbfUEOuGUN5vM",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "xxhhmHfKPBshMjtduc8Pwrxj6RuTHtrhwbfUEOuGUN5vM",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "nxh7vC52S5AijPuGFh3eJkArFQasCKyAbvhMjFgA960",
    "code_challenge_method": "S256",
    "nonce": "xxhhmHfKPBshMjtduc8Pwrxj6RuTHtrhwbfUEOuGUN5vM"
  }
}
2020-01-19 13:24:45.983 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:45.984 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:45.992 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d300"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000000D",
  "TimeStamp": "2020-01-19T12:24:45Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:45.994 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "xxhhmHfKPBshMjtduc8Pwrxj6RuTHtrhwbfUEOuGUN5vM",
  "Scope": "openid profile api"
}
2020-01-19 13:24:46.507 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:46.508 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:46.509 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:46.510 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:46.510 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:46.512 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:46.512 +01:00 [DBG] Start discovery request
2020-01-19 13:24:46.567 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:46.569 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:46.570 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:46.570 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:46.571 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:46.572 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:46.576 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:46.601 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:46.601 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:46.602 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:46.602 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:46.603 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:46.603 +01:00 [DBG] Start authorize request
2020-01-19 13:24:46.603 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:46.604 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:46.604 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:46.605 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:46.605 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "ShYccHYyx1gwO190EjvjCkRoV6YgJtWCHbA2A25sc1PwB",
  "Nonce": "ShYccHYyx1gwO190EjvjCkRoV6YgJtWCHbA2A25sc1PwB",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "ShYccHYyx1gwO190EjvjCkRoV6YgJtWCHbA2A25sc1PwB",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "PI77JOI2PcPD7YKKq0IJJWft6Y7e_oNyBR3mmS5KxxY",
    "code_challenge_method": "S256",
    "nonce": "ShYccHYyx1gwO190EjvjCkRoV6YgJtWCHbA2A25sc1PwB"
  }
}
2020-01-19 13:24:46.607 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:46.607 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:46.614 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****23ff"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000000E",
  "TimeStamp": "2020-01-19T12:24:46Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:46.615 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "ShYccHYyx1gwO190EjvjCkRoV6YgJtWCHbA2A25sc1PwB",
  "Scope": "openid profile api"
}
2020-01-19 13:24:47.061 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:47.062 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:47.064 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:47.064 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:47.065 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:47.066 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:47.068 +01:00 [DBG] Start discovery request
2020-01-19 13:24:47.120 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:47.121 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:47.121 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:47.122 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:47.122 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:47.123 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:47.123 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:47.159 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:47.168 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:47.170 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:47.171 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:47.172 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:47.173 +01:00 [DBG] Start authorize request
2020-01-19 13:24:47.173 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:47.173 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:47.174 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:47.175 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:47.176 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "u5yIjQMNJLwo5KFUrK-X6bX2V2JTziwVOa-lbmSEeHexE",
  "Nonce": "u5yIjQMNJLwo5KFUrK-X6bX2V2JTziwVOa-lbmSEeHexE",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "u5yIjQMNJLwo5KFUrK-X6bX2V2JTziwVOa-lbmSEeHexE",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "aRJxMA6xv6DR6AXIo3eMz0jzADgdH77KdpjplkHct0E",
    "code_challenge_method": "S256",
    "nonce": "u5yIjQMNJLwo5KFUrK-X6bX2V2JTziwVOa-lbmSEeHexE"
  }
}
2020-01-19 13:24:47.178 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:47.178 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:47.187 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****86c9"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000000F",
  "TimeStamp": "2020-01-19T12:24:47Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:47.190 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "u5yIjQMNJLwo5KFUrK-X6bX2V2JTziwVOa-lbmSEeHexE",
  "Scope": "openid profile api"
}
2020-01-19 13:24:47.697 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:47.698 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:47.698 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:47.699 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:47.699 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:47.700 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:47.701 +01:00 [DBG] Start discovery request
2020-01-19 13:24:47.741 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:47.743 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:47.743 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:47.743 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:47.745 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:47.746 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:47.748 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:47.779 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:47.781 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:47.783 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:47.784 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:47.785 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:47.787 +01:00 [DBG] Start authorize request
2020-01-19 13:24:47.789 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:47.790 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:47.791 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:47.792 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:47.793 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "vtiJQwnP1fTQjftuur-KpNlgka8AFoEf2624Y_qPLwtEC",
  "Nonce": "vtiJQwnP1fTQjftuur-KpNlgka8AFoEf2624Y_qPLwtEC",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "vtiJQwnP1fTQjftuur-KpNlgka8AFoEf2624Y_qPLwtEC",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "pulaPyA2R6We86EQPMWW416rP2jF0BS6i11cX1pSkwA",
    "code_challenge_method": "S256",
    "nonce": "vtiJQwnP1fTQjftuur-KpNlgka8AFoEf2624Y_qPLwtEC"
  }
}
2020-01-19 13:24:47.796 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:47.796 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:47.807 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****f104"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000010",
  "TimeStamp": "2020-01-19T12:24:47Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:47.817 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "vtiJQwnP1fTQjftuur-KpNlgka8AFoEf2624Y_qPLwtEC",
  "Scope": "openid profile api"
}
2020-01-19 13:24:48.288 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:48.289 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:48.289 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:48.290 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:48.290 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:48.291 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:48.291 +01:00 [DBG] Start discovery request
2020-01-19 13:24:48.342 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:48.343 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:48.343 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:48.344 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:48.345 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:48.346 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:48.347 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:48.385 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:48.386 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:48.386 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:48.387 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:48.388 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:48.389 +01:00 [DBG] Start authorize request
2020-01-19 13:24:48.389 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:48.389 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:48.390 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:48.390 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:48.391 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "lnYQ_SxuBWG93Vst810dqkPAcGwCDu3KxyO5sSQQ8BYTc",
  "Nonce": "lnYQ_SxuBWG93Vst810dqkPAcGwCDu3KxyO5sSQQ8BYTc",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "lnYQ_SxuBWG93Vst810dqkPAcGwCDu3KxyO5sSQQ8BYTc",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "k33B83X93t_7LFND6-fQB-dH56l1xOOWE4e41z9HxUE",
    "code_challenge_method": "S256",
    "nonce": "lnYQ_SxuBWG93Vst810dqkPAcGwCDu3KxyO5sSQQ8BYTc"
  }
}
2020-01-19 13:24:48.394 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:48.394 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:48.401 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****4b08"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000011",
  "TimeStamp": "2020-01-19T12:24:48Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:48.403 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "lnYQ_SxuBWG93Vst810dqkPAcGwCDu3KxyO5sSQQ8BYTc",
  "Scope": "openid profile api"
}
2020-01-19 13:24:48.863 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:48.864 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:48.864 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:48.865 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:48.865 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:48.866 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:48.867 +01:00 [DBG] Start discovery request
2020-01-19 13:24:48.922 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:48.923 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:48.926 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:48.926 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:48.927 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:48.928 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:48.930 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:48.969 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:48.972 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:48.973 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:48.974 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:48.975 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:48.975 +01:00 [DBG] Start authorize request
2020-01-19 13:24:48.976 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:48.976 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:48.977 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:48.977 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:48.978 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "ko2OfzP_jrjxH17I3AWkMxJeFKzfh1U8dBdpnS1sp4e2s",
  "Nonce": "ko2OfzP_jrjxH17I3AWkMxJeFKzfh1U8dBdpnS1sp4e2s",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "ko2OfzP_jrjxH17I3AWkMxJeFKzfh1U8dBdpnS1sp4e2s",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "FlZddaRwTwOmMi2aXTRor12JWDuQKcHobXt0yZ1cGbI",
    "code_challenge_method": "S256",
    "nonce": "ko2OfzP_jrjxH17I3AWkMxJeFKzfh1U8dBdpnS1sp4e2s"
  }
}
2020-01-19 13:24:48.981 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:48.981 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:48.989 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****a1e1"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000012",
  "TimeStamp": "2020-01-19T12:24:48Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:48.995 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "ko2OfzP_jrjxH17I3AWkMxJeFKzfh1U8dBdpnS1sp4e2s",
  "Scope": "openid profile api"
}
2020-01-19 13:24:49.455 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:49.456 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:49.456 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:49.457 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:49.457 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:49.458 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:49.460 +01:00 [DBG] Start discovery request
2020-01-19 13:24:49.512 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:49.513 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:49.514 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:49.515 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:49.516 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:49.516 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:49.517 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:49.543 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:49.544 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:49.545 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:49.546 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:49.547 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:49.548 +01:00 [DBG] Start authorize request
2020-01-19 13:24:49.548 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:49.549 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:49.549 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:49.554 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:49.555 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "jko6zVPgnTladF2WprCByDgXQcerUBR2KuNuYGqF37gJk",
  "Nonce": "jko6zVPgnTladF2WprCByDgXQcerUBR2KuNuYGqF37gJk",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "jko6zVPgnTladF2WprCByDgXQcerUBR2KuNuYGqF37gJk",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "uWrIxAmkUiCcCSBngKOUfWkXOGZkRWJKYeFJroYJ2GQ",
    "code_challenge_method": "S256",
    "nonce": "jko6zVPgnTladF2WprCByDgXQcerUBR2KuNuYGqF37gJk"
  }
}
2020-01-19 13:24:49.557 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:49.557 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:49.568 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****23a9"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000013",
  "TimeStamp": "2020-01-19T12:24:49Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:49.571 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "jko6zVPgnTladF2WprCByDgXQcerUBR2KuNuYGqF37gJk",
  "Scope": "openid profile api"
}
2020-01-19 13:24:50.163 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:50.164 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:50.165 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:50.165 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:50.165 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:50.166 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:50.167 +01:00 [DBG] Start discovery request
2020-01-19 13:24:50.204 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:50.204 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:50.205 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:50.205 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:50.206 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:50.206 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:50.207 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:50.230 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:50.231 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:50.232 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:50.232 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:50.233 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:50.234 +01:00 [DBG] Start authorize request
2020-01-19 13:24:50.234 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:50.234 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:50.235 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:50.235 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:50.236 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "r6ATSiEwlRrcqc7uCQ3icslyzp0c8x5trY_I5ocXQFA8m",
  "Nonce": "r6ATSiEwlRrcqc7uCQ3icslyzp0c8x5trY_I5ocXQFA8m",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "r6ATSiEwlRrcqc7uCQ3icslyzp0c8x5trY_I5ocXQFA8m",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "h6X44FMphlGS7mafK59HnvriTzdZkbBXJFT434UDBIs",
    "code_challenge_method": "S256",
    "nonce": "r6ATSiEwlRrcqc7uCQ3icslyzp0c8x5trY_I5ocXQFA8m"
  }
}
2020-01-19 13:24:50.238 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:50.238 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:50.244 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d837"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000014",
  "TimeStamp": "2020-01-19T12:24:50Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:50.245 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "r6ATSiEwlRrcqc7uCQ3icslyzp0c8x5trY_I5ocXQFA8m",
  "Scope": "openid profile api"
}
2020-01-19 13:24:50.750 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:50.751 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:50.752 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:50.753 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:50.754 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:50.757 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:50.758 +01:00 [DBG] Start discovery request
2020-01-19 13:24:50.815 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:50.817 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:50.820 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:50.821 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:50.823 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:50.824 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:50.825 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:50.863 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:50.874 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:50.876 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:50.877 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:50.881 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:50.884 +01:00 [DBG] Start authorize request
2020-01-19 13:24:50.885 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:50.885 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:50.885 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:50.886 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:50.887 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "bQ6gL8WjadGBf7czSTPQnKbcnp5r3y27Eu8mV0PjrE4P1",
  "Nonce": "bQ6gL8WjadGBf7czSTPQnKbcnp5r3y27Eu8mV0PjrE4P1",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "bQ6gL8WjadGBf7czSTPQnKbcnp5r3y27Eu8mV0PjrE4P1",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "lCSpTFi9kP288mwGil0Hzp3nSaGYxGrBd9pF5uMlMhQ",
    "code_challenge_method": "S256",
    "nonce": "bQ6gL8WjadGBf7czSTPQnKbcnp5r3y27Eu8mV0PjrE4P1"
  }
}
2020-01-19 13:24:50.888 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:50.889 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:50.895 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****0282"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000015",
  "TimeStamp": "2020-01-19T12:24:50Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:50.896 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "bQ6gL8WjadGBf7czSTPQnKbcnp5r3y27Eu8mV0PjrE4P1",
  "Scope": "openid profile api"
}
2020-01-19 13:24:51.355 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:51.356 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:51.357 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:51.357 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:51.357 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:51.358 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:51.358 +01:00 [DBG] Start discovery request
2020-01-19 13:24:51.416 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:51.417 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:51.418 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:51.419 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:51.420 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:51.421 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:51.422 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:51.442 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:51.443 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:51.444 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:51.445 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:51.446 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:51.447 +01:00 [DBG] Start authorize request
2020-01-19 13:24:51.447 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:51.448 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:51.449 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:51.449 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:51.450 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "EPfgLzx9mMZyUMi3C_7Dj6ZBvSRCgewJqRKn7g2WIo9Q5",
  "Nonce": "EPfgLzx9mMZyUMi3C_7Dj6ZBvSRCgewJqRKn7g2WIo9Q5",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "EPfgLzx9mMZyUMi3C_7Dj6ZBvSRCgewJqRKn7g2WIo9Q5",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "0P-5dTBoMbfcUIrDfpxdoNg3G2dFQx1f4xkYi1NJKuw",
    "code_challenge_method": "S256",
    "nonce": "EPfgLzx9mMZyUMi3C_7Dj6ZBvSRCgewJqRKn7g2WIo9Q5"
  }
}
2020-01-19 13:24:51.451 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:51.453 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:51.462 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****c211"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000016",
  "TimeStamp": "2020-01-19T12:24:51Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:51.465 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "EPfgLzx9mMZyUMi3C_7Dj6ZBvSRCgewJqRKn7g2WIo9Q5",
  "Scope": "openid profile api"
}
2020-01-19 13:24:52.042 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:52.043 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:52.043 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:52.044 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:52.044 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:52.045 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:52.046 +01:00 [DBG] Start discovery request
2020-01-19 13:24:52.092 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:52.092 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:52.093 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:52.093 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:52.094 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:52.096 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:52.097 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:52.122 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:52.123 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:52.124 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:52.125 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:52.127 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:52.128 +01:00 [DBG] Start authorize request
2020-01-19 13:24:52.129 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:52.130 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:52.131 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:52.132 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:52.133 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "4YoByY5psy7aLVaZlc62E1qAnPG08ImGD7TOEt9NNalK4",
  "Nonce": "4YoByY5psy7aLVaZlc62E1qAnPG08ImGD7TOEt9NNalK4",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "4YoByY5psy7aLVaZlc62E1qAnPG08ImGD7TOEt9NNalK4",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "vtLOTNQ7C9_xr2dqF1WgbMqfAxgSIPmEApsmI16z-to",
    "code_challenge_method": "S256",
    "nonce": "4YoByY5psy7aLVaZlc62E1qAnPG08ImGD7TOEt9NNalK4"
  }
}
2020-01-19 13:24:52.138 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:52.139 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:52.152 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d9ad"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000017",
  "TimeStamp": "2020-01-19T12:24:52Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:52.154 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "4YoByY5psy7aLVaZlc62E1qAnPG08ImGD7TOEt9NNalK4",
  "Scope": "openid profile api"
}
2020-01-19 13:24:52.686 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:52.688 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:52.688 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:52.689 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:52.690 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:52.691 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:52.691 +01:00 [DBG] Start discovery request
2020-01-19 13:24:52.733 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:52.734 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:52.737 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:52.738 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:52.740 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:52.741 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:52.743 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:52.776 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:52.778 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:52.779 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:52.779 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:52.780 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:52.781 +01:00 [DBG] Start authorize request
2020-01-19 13:24:52.782 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:52.785 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:52.786 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:52.789 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:52.790 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "TDsCLItMflAMKn6P_r9euCzcH4E1R_3-KPAY5f5AWcVB2",
  "Nonce": "TDsCLItMflAMKn6P_r9euCzcH4E1R_3-KPAY5f5AWcVB2",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "TDsCLItMflAMKn6P_r9euCzcH4E1R_3-KPAY5f5AWcVB2",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "n-g1aa8CtIsyjOT6ZKT4sqZg3jvLFtORtb1LY62Helk",
    "code_challenge_method": "S256",
    "nonce": "TDsCLItMflAMKn6P_r9euCzcH4E1R_3-KPAY5f5AWcVB2"
  }
}
2020-01-19 13:24:52.793 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:52.794 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:52.808 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****8602"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000018",
  "TimeStamp": "2020-01-19T12:24:52Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:52.808 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "TDsCLItMflAMKn6P_r9euCzcH4E1R_3-KPAY5f5AWcVB2",
  "Scope": "openid profile api"
}
2020-01-19 13:24:53.326 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:53.327 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:53.328 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:53.328 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:53.329 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:53.329 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:53.329 +01:00 [DBG] Start discovery request
2020-01-19 13:24:53.391 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:53.392 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:53.392 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:53.392 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:53.393 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:53.393 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:53.393 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:53.417 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:53.418 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:53.418 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:53.419 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:53.419 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:53.419 +01:00 [DBG] Start authorize request
2020-01-19 13:24:53.419 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:53.419 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:53.420 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:53.420 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:53.420 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "hzRMKIERedr9eomJ-O3tXZBcJ8I5TPMYESEMtE77N4ZUt",
  "Nonce": "hzRMKIERedr9eomJ-O3tXZBcJ8I5TPMYESEMtE77N4ZUt",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "hzRMKIERedr9eomJ-O3tXZBcJ8I5TPMYESEMtE77N4ZUt",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "z2X6dImziuvXw9ZMVXWorrYtT3jsW7G0h663hjPVHqc",
    "code_challenge_method": "S256",
    "nonce": "hzRMKIERedr9eomJ-O3tXZBcJ8I5TPMYESEMtE77N4ZUt"
  }
}
2020-01-19 13:24:53.421 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:53.422 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:53.431 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****09b2"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000019",
  "TimeStamp": "2020-01-19T12:24:53Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:53.432 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "hzRMKIERedr9eomJ-O3tXZBcJ8I5TPMYESEMtE77N4ZUt",
  "Scope": "openid profile api"
}
2020-01-19 13:24:54.066 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:54.066 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:54.067 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:54.067 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:54.068 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:54.068 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:54.068 +01:00 [DBG] Start discovery request
2020-01-19 13:24:54.109 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:54.110 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:54.110 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:54.110 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:54.111 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:54.111 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:54.111 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:54.129 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:54.130 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:54.131 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:54.135 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:54.135 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:54.135 +01:00 [DBG] Start authorize request
2020-01-19 13:24:54.136 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:54.136 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:54.136 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:54.137 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:54.137 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "XQNu1Wl7uVrNTOiMpuc0zvUYz8ocJZw4ecgeZumEM3Qzq",
  "Nonce": "XQNu1Wl7uVrNTOiMpuc0zvUYz8ocJZw4ecgeZumEM3Qzq",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "XQNu1Wl7uVrNTOiMpuc0zvUYz8ocJZw4ecgeZumEM3Qzq",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "RcldRwPiUZ6GsWwV1A2pPvbHBZqOMg2HlkBFWsivrok",
    "code_challenge_method": "S256",
    "nonce": "XQNu1Wl7uVrNTOiMpuc0zvUYz8ocJZw4ecgeZumEM3Qzq"
  }
}
2020-01-19 13:24:54.139 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:54.139 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:54.146 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****2005"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000001A",
  "TimeStamp": "2020-01-19T12:24:54Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:54.146 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "XQNu1Wl7uVrNTOiMpuc0zvUYz8ocJZw4ecgeZumEM3Qzq",
  "Scope": "openid profile api"
}
2020-01-19 13:24:54.608 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:54.608 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:54.609 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:54.609 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:54.609 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:54.610 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:54.610 +01:00 [DBG] Start discovery request
2020-01-19 13:24:54.659 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:54.659 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:54.660 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:54.660 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:54.660 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:54.661 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:54.661 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:54.679 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:54.680 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:54.680 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:54.681 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:54.681 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:54.681 +01:00 [DBG] Start authorize request
2020-01-19 13:24:54.681 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:54.682 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:54.682 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:54.682 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:54.682 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "hRGuD2zzUHY1JsKJjlFa0WC6K0c1xzXtMolNrYddImPrp",
  "Nonce": "hRGuD2zzUHY1JsKJjlFa0WC6K0c1xzXtMolNrYddImPrp",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "hRGuD2zzUHY1JsKJjlFa0WC6K0c1xzXtMolNrYddImPrp",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "OPKtuo-BKPdaxRyRhFoqigDaOBrNH8MstXGRGS3folA",
    "code_challenge_method": "S256",
    "nonce": "hRGuD2zzUHY1JsKJjlFa0WC6K0c1xzXtMolNrYddImPrp"
  }
}
2020-01-19 13:24:54.683 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:54.683 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:54.691 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****da5c"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000001B",
  "TimeStamp": "2020-01-19T12:24:54Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:54.691 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "hRGuD2zzUHY1JsKJjlFa0WC6K0c1xzXtMolNrYddImPrp",
  "Scope": "openid profile api"
}
2020-01-19 13:24:55.196 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:55.197 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:55.198 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:55.201 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:55.201 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:55.202 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:55.202 +01:00 [DBG] Start discovery request
2020-01-19 13:24:55.243 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:55.244 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:55.245 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:55.245 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:55.245 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:55.246 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:55.246 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:55.267 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:55.268 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:55.268 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:55.269 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:55.269 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:55.269 +01:00 [DBG] Start authorize request
2020-01-19 13:24:55.269 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:55.269 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:55.270 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:55.270 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:55.270 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "sIZzXMlM1LbN7d6C2viHDyswjw19BgLTO9y3z8fZ5Sx5K",
  "Nonce": "sIZzXMlM1LbN7d6C2viHDyswjw19BgLTO9y3z8fZ5Sx5K",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "sIZzXMlM1LbN7d6C2viHDyswjw19BgLTO9y3z8fZ5Sx5K",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "AHuWQYLr95ecYXLGIKNKZqFOzKQs5xkqn06A886zsU0",
    "code_challenge_method": "S256",
    "nonce": "sIZzXMlM1LbN7d6C2viHDyswjw19BgLTO9y3z8fZ5Sx5K"
  }
}
2020-01-19 13:24:55.271 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:55.271 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:55.278 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****2856"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000001C",
  "TimeStamp": "2020-01-19T12:24:55Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:55.279 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "sIZzXMlM1LbN7d6C2viHDyswjw19BgLTO9y3z8fZ5Sx5K",
  "Scope": "openid profile api"
}
2020-01-19 13:24:55.794 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:55.795 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:55.795 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:55.796 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:55.796 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:55.796 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:55.797 +01:00 [DBG] Start discovery request
2020-01-19 13:24:55.842 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:55.843 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:55.843 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:55.844 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:55.844 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:55.845 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:55.845 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:55.871 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:55.872 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:55.872 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:55.873 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:55.873 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:55.873 +01:00 [DBG] Start authorize request
2020-01-19 13:24:55.873 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:55.874 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:55.874 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:55.874 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:55.875 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "rlJqnDS27W-cTu3lvExT-5Lz6SAeuoqC-K1M93OcAPDSj",
  "Nonce": "rlJqnDS27W-cTu3lvExT-5Lz6SAeuoqC-K1M93OcAPDSj",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "rlJqnDS27W-cTu3lvExT-5Lz6SAeuoqC-K1M93OcAPDSj",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "i00nzX0RFH6YVfSlajOqHy4MuN0uh2DBSbvqtAoJGec",
    "code_challenge_method": "S256",
    "nonce": "rlJqnDS27W-cTu3lvExT-5Lz6SAeuoqC-K1M93OcAPDSj"
  }
}
2020-01-19 13:24:55.876 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:55.876 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:55.885 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****a2f3"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000001D",
  "TimeStamp": "2020-01-19T12:24:55Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:55.886 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "rlJqnDS27W-cTu3lvExT-5Lz6SAeuoqC-K1M93OcAPDSj",
  "Scope": "openid profile api"
}
2020-01-19 13:24:56.370 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:24:56.371 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:56.371 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:56.371 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:24:56.371 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:24:56.372 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:24:56.372 +01:00 [DBG] Start discovery request
2020-01-19 13:24:56.425 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:24:56.425 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:24:56.426 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:24:56.426 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:24:56.427 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:24:56.427 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:24:56.427 +01:00 [DBG] Start key discovery request
2020-01-19 13:24:56.448 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:56.449 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:24:56.454 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:24:56.454 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:24:56.455 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:24:56.455 +01:00 [DBG] Start authorize request
2020-01-19 13:24:56.455 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:24:56.456 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:24:56.456 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:24:56.456 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:24:56.457 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "IOgB89FOja9FaEVUoYSnAaoG5D5BEtc2hWsuhiTm7JRWE",
  "Nonce": "IOgB89FOja9FaEVUoYSnAaoG5D5BEtc2hWsuhiTm7JRWE",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "IOgB89FOja9FaEVUoYSnAaoG5D5BEtc2hWsuhiTm7JRWE",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "LtLV6o1AwTdSbODXx0QPb9QRVwR01cC9JUnDc0c_dqY",
    "code_challenge_method": "S256",
    "nonce": "IOgB89FOja9FaEVUoYSnAaoG5D5BEtc2hWsuhiTm7JRWE"
  }
}
2020-01-19 13:24:56.459 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:24:56.459 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:24:56.468 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****619f"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000001E",
  "TimeStamp": "2020-01-19T12:24:56Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:24:56.469 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "IOgB89FOja9FaEVUoYSnAaoG5D5BEtc2hWsuhiTm7JRWE",
  "Scope": "openid profile api"
}
2020-01-19 13:25:33.754 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:25:33.755 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:25:33.756 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:25:33.757 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:25:33.760 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:25:33.760 +01:00 [DBG] Start discovery request
2020-01-19 13:26:12.233 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:12.234 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:12.235 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:12.235 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:12.235 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:12.236 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:12.236 +01:00 [DBG] Start discovery request
2020-01-19 13:26:12.285 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:12.286 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:12.286 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:12.287 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:12.288 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:12.288 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:12.288 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:12.340 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:12.341 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:12.342 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:12.342 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:12.343 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:12.344 +01:00 [DBG] Start authorize request
2020-01-19 13:26:12.344 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:12.345 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:12.345 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:12.345 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:12.346 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "x7tUhrX5ht0yY2suZYTKXUDMcd2Bs8P__AWZd2QYodqum",
  "Nonce": "x7tUhrX5ht0yY2suZYTKXUDMcd2Bs8P__AWZd2QYodqum",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "x7tUhrX5ht0yY2suZYTKXUDMcd2Bs8P__AWZd2QYodqum",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "ZLMFSZ-4NimRBc4mRZ9nI-Mwbikz2plIxVNMbqNkLYg",
    "code_challenge_method": "S256",
    "nonce": "x7tUhrX5ht0yY2suZYTKXUDMcd2Bs8P__AWZd2QYodqum"
  }
}
2020-01-19 13:26:12.347 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:12.349 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:12.365 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****36f5"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000020",
  "TimeStamp": "2020-01-19T12:26:12Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:12.366 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "x7tUhrX5ht0yY2suZYTKXUDMcd2Bs8P__AWZd2QYodqum",
  "Scope": "openid profile api"
}
2020-01-19 13:26:12.822 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:12.823 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:12.823 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:12.823 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:12.824 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:12.825 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:12.828 +01:00 [DBG] Start discovery request
2020-01-19 13:26:12.858 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:12.859 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:12.859 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:12.860 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:12.860 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:12.860 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:12.861 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:12.894 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:12.895 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:12.895 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:12.897 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:12.897 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:12.898 +01:00 [DBG] Start authorize request
2020-01-19 13:26:12.898 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:12.898 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:12.899 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:12.899 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:12.900 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "j2Eqs2HK-OcJ6Rn2s12u05d-p1YI4tF7wqpx3dD48tL2s",
  "Nonce": "j2Eqs2HK-OcJ6Rn2s12u05d-p1YI4tF7wqpx3dD48tL2s",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "j2Eqs2HK-OcJ6Rn2s12u05d-p1YI4tF7wqpx3dD48tL2s",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "zEejdTDUpzO6EFuZ1Lwg2o36peId3GhPjHrjx3zjufM",
    "code_challenge_method": "S256",
    "nonce": "j2Eqs2HK-OcJ6Rn2s12u05d-p1YI4tF7wqpx3dD48tL2s"
  }
}
2020-01-19 13:26:12.901 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:12.902 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:12.911 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****be5e"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000021",
  "TimeStamp": "2020-01-19T12:26:12Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:12.912 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "j2Eqs2HK-OcJ6Rn2s12u05d-p1YI4tF7wqpx3dD48tL2s",
  "Scope": "openid profile api"
}
2020-01-19 13:26:13.343 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:13.343 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:13.343 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:13.344 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:13.344 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:13.344 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:13.344 +01:00 [DBG] Start discovery request
2020-01-19 13:26:13.373 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:13.373 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:13.374 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:13.374 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:13.374 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:13.375 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:13.375 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:13.412 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:13.412 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:13.413 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:13.413 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:13.413 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:13.414 +01:00 [DBG] Start authorize request
2020-01-19 13:26:13.414 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:13.415 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:13.415 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:13.416 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:13.416 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "pfYVTHh3Nv80boufoQH6vKIUBVZX3ttnRJqe6mFsGR6su",
  "Nonce": "pfYVTHh3Nv80boufoQH6vKIUBVZX3ttnRJqe6mFsGR6su",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "pfYVTHh3Nv80boufoQH6vKIUBVZX3ttnRJqe6mFsGR6su",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "gdlnSPZ1D9ijvkkTc_pue7szzcc7AbudNYsYidVuQLg",
    "code_challenge_method": "S256",
    "nonce": "pfYVTHh3Nv80boufoQH6vKIUBVZX3ttnRJqe6mFsGR6su"
  }
}
2020-01-19 13:26:13.417 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:13.417 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:13.425 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****7af4"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000022",
  "TimeStamp": "2020-01-19T12:26:13Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:13.425 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "pfYVTHh3Nv80boufoQH6vKIUBVZX3ttnRJqe6mFsGR6su",
  "Scope": "openid profile api"
}
2020-01-19 13:26:13.929 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:13.930 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:13.931 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:13.934 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:13.934 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:13.935 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:13.935 +01:00 [DBG] Start discovery request
2020-01-19 13:26:13.962 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:13.964 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:13.968 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:13.969 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:13.969 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:13.970 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:13.970 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:14.007 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:14.008 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:14.008 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:14.009 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:14.009 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:14.010 +01:00 [DBG] Start authorize request
2020-01-19 13:26:14.010 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:14.010 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:14.010 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:14.011 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:14.011 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "lRH3TozZzMiAmT5cyXhEUL-b-zV5Ba8cqviVluULLRSmi",
  "Nonce": "lRH3TozZzMiAmT5cyXhEUL-b-zV5Ba8cqviVluULLRSmi",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "lRH3TozZzMiAmT5cyXhEUL-b-zV5Ba8cqviVluULLRSmi",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "CiV2Rc7PIuAtiHtaj9FVbjb6M8Z6N83NmXsWOdq87sM",
    "code_challenge_method": "S256",
    "nonce": "lRH3TozZzMiAmT5cyXhEUL-b-zV5Ba8cqviVluULLRSmi"
  }
}
2020-01-19 13:26:14.012 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:14.012 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:14.023 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****5ac6"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000023",
  "TimeStamp": "2020-01-19T12:26:14Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:14.029 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "lRH3TozZzMiAmT5cyXhEUL-b-zV5Ba8cqviVluULLRSmi",
  "Scope": "openid profile api"
}
2020-01-19 13:26:14.473 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:14.475 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:14.476 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:14.479 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:14.479 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:14.479 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:14.479 +01:00 [DBG] Start discovery request
2020-01-19 13:26:14.512 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:14.514 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:14.514 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:14.515 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:14.515 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:14.515 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:14.515 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:14.563 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:14.564 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:14.566 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:14.567 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:14.571 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:14.572 +01:00 [DBG] Start authorize request
2020-01-19 13:26:14.572 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:14.573 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:14.573 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:14.575 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:14.576 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "SVIYgeuvjG0wJ1M7UdKFJoRHeu63cPCZGOb_z0U97rCWO",
  "Nonce": "SVIYgeuvjG0wJ1M7UdKFJoRHeu63cPCZGOb_z0U97rCWO",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "SVIYgeuvjG0wJ1M7UdKFJoRHeu63cPCZGOb_z0U97rCWO",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "XT4jdjtYfY-leXooPzGibIJeOeSU5j6ckGFd8w2kAVo",
    "code_challenge_method": "S256",
    "nonce": "SVIYgeuvjG0wJ1M7UdKFJoRHeu63cPCZGOb_z0U97rCWO"
  }
}
2020-01-19 13:26:14.578 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:14.579 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:14.591 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****b098"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000024",
  "TimeStamp": "2020-01-19T12:26:14Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:14.592 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "SVIYgeuvjG0wJ1M7UdKFJoRHeu63cPCZGOb_z0U97rCWO",
  "Scope": "openid profile api"
}
2020-01-19 13:26:15.050 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:15.050 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:15.051 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:15.051 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:15.051 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:15.051 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:15.052 +01:00 [DBG] Start discovery request
2020-01-19 13:26:15.084 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:15.085 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:15.085 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:15.086 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:15.086 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:15.086 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:15.087 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:15.127 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:15.128 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:15.128 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:15.129 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:15.129 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:15.129 +01:00 [DBG] Start authorize request
2020-01-19 13:26:15.130 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:15.130 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:15.130 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:15.131 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:15.131 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "qGfC8dACxW7MtcWGU8_coD2tp-QXnuR-PwBkq3XSdzmJe",
  "Nonce": "qGfC8dACxW7MtcWGU8_coD2tp-QXnuR-PwBkq3XSdzmJe",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "qGfC8dACxW7MtcWGU8_coD2tp-QXnuR-PwBkq3XSdzmJe",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "pBjX4IyFJvHeA6yFu_vsuUOL23Nb-xYPfjvtz5gXyyg",
    "code_challenge_method": "S256",
    "nonce": "qGfC8dACxW7MtcWGU8_coD2tp-QXnuR-PwBkq3XSdzmJe"
  }
}
2020-01-19 13:26:15.132 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:15.132 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:15.142 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****04dd"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000025",
  "TimeStamp": "2020-01-19T12:26:15Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:15.145 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "qGfC8dACxW7MtcWGU8_coD2tp-QXnuR-PwBkq3XSdzmJe",
  "Scope": "openid profile api"
}
2020-01-19 13:26:15.613 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:15.614 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:15.614 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:15.614 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:15.615 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:15.615 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:15.615 +01:00 [DBG] Start discovery request
2020-01-19 13:26:15.653 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:15.654 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:15.654 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:15.654 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:15.655 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:15.655 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:15.655 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:15.692 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:15.693 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:15.693 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:15.694 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:15.695 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:15.695 +01:00 [DBG] Start authorize request
2020-01-19 13:26:15.696 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:15.696 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:15.697 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:15.697 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:15.697 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "jWoUL9FzR2JFn4rPGZYytKNcnj9jJDs-mk0Ayt0oYpdGW",
  "Nonce": "jWoUL9FzR2JFn4rPGZYytKNcnj9jJDs-mk0Ayt0oYpdGW",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "jWoUL9FzR2JFn4rPGZYytKNcnj9jJDs-mk0Ayt0oYpdGW",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "kRAlSSMa9hBRM2aH1GlAZJGFCIcgpI5sDv_2cxal2EA",
    "code_challenge_method": "S256",
    "nonce": "jWoUL9FzR2JFn4rPGZYytKNcnj9jJDs-mk0Ayt0oYpdGW"
  }
}
2020-01-19 13:26:15.698 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:15.698 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:15.708 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****4bcf"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000026",
  "TimeStamp": "2020-01-19T12:26:15Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:15.712 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "jWoUL9FzR2JFn4rPGZYytKNcnj9jJDs-mk0Ayt0oYpdGW",
  "Scope": "openid profile api"
}
2020-01-19 13:26:16.237 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:16.237 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:16.238 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:16.238 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:16.238 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:16.239 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:16.239 +01:00 [DBG] Start discovery request
2020-01-19 13:26:16.272 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:16.272 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:16.273 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:16.273 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:16.273 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:16.274 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:16.274 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:16.309 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:16.310 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:16.311 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:16.312 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:16.312 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:16.313 +01:00 [DBG] Start authorize request
2020-01-19 13:26:16.314 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:16.314 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:16.315 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:16.315 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:16.316 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "nedAD0GMzlm3HrgpMn6YpyZDyIvDR0I-4MrKCjdpkWG2Z",
  "Nonce": "nedAD0GMzlm3HrgpMn6YpyZDyIvDR0I-4MrKCjdpkWG2Z",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "nedAD0GMzlm3HrgpMn6YpyZDyIvDR0I-4MrKCjdpkWG2Z",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "QHt2EV-yYkRweJakPCCxzaDq3N_KKzbWKAMVSc_lS-o",
    "code_challenge_method": "S256",
    "nonce": "nedAD0GMzlm3HrgpMn6YpyZDyIvDR0I-4MrKCjdpkWG2Z"
  }
}
2020-01-19 13:26:16.328 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:16.329 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:16.340 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****8b7e"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000027",
  "TimeStamp": "2020-01-19T12:26:16Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:16.341 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "nedAD0GMzlm3HrgpMn6YpyZDyIvDR0I-4MrKCjdpkWG2Z",
  "Scope": "openid profile api"
}
2020-01-19 13:26:16.783 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:16.784 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:16.784 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:16.784 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:16.785 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:16.785 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:16.785 +01:00 [DBG] Start discovery request
2020-01-19 13:26:16.819 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:16.820 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:16.820 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:16.820 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:16.820 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:16.821 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:16.821 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:16.855 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:16.856 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:16.857 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:16.857 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:16.858 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:16.858 +01:00 [DBG] Start authorize request
2020-01-19 13:26:16.859 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:16.859 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:16.859 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:16.860 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:16.860 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "Magx38wkTQPD0x7-nCogfiD52Btbmj7OPU1bRQUsa9bWD",
  "Nonce": "Magx38wkTQPD0x7-nCogfiD52Btbmj7OPU1bRQUsa9bWD",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "Magx38wkTQPD0x7-nCogfiD52Btbmj7OPU1bRQUsa9bWD",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "PTQYxF_KUwxlbqJXBft_Ul6B6hLksh2h6SuvqmdBpIQ",
    "code_challenge_method": "S256",
    "nonce": "Magx38wkTQPD0x7-nCogfiD52Btbmj7OPU1bRQUsa9bWD"
  }
}
2020-01-19 13:26:16.864 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:16.864 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:16.877 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****690f"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000028",
  "TimeStamp": "2020-01-19T12:26:16Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:16.878 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "Magx38wkTQPD0x7-nCogfiD52Btbmj7OPU1bRQUsa9bWD",
  "Scope": "openid profile api"
}
2020-01-19 13:26:17.393 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:17.393 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:17.393 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:17.394 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:17.394 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:17.394 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:17.395 +01:00 [DBG] Start discovery request
2020-01-19 13:26:17.426 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:17.426 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:17.427 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:17.427 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:17.428 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:17.428 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:17.428 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:17.474 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:17.474 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:17.478 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:17.479 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:17.479 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:17.480 +01:00 [DBG] Start authorize request
2020-01-19 13:26:17.480 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:17.481 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:17.481 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:17.482 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:17.482 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "1kuONmTr7607ZE3ZhvOOdA9NSHehu0fqLIRiARSIXSaOj",
  "Nonce": "1kuONmTr7607ZE3ZhvOOdA9NSHehu0fqLIRiARSIXSaOj",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "1kuONmTr7607ZE3ZhvOOdA9NSHehu0fqLIRiARSIXSaOj",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "SaOgFl4g7UoVbwmUUsnA-ESjEkJ4-8Stdv3-q6XOYhA",
    "code_challenge_method": "S256",
    "nonce": "1kuONmTr7607ZE3ZhvOOdA9NSHehu0fqLIRiARSIXSaOj"
  }
}
2020-01-19 13:26:17.484 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:17.485 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:17.496 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****1521"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000029",
  "TimeStamp": "2020-01-19T12:26:17Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:17.497 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "1kuONmTr7607ZE3ZhvOOdA9NSHehu0fqLIRiARSIXSaOj",
  "Scope": "openid profile api"
}
2020-01-19 13:26:17.957 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:17.968 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:18.013 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:18.024 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:18.049 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:18.065 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:18.084 +01:00 [DBG] Start discovery request
2020-01-19 13:26:18.155 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:18.156 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:18.156 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:18.157 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:18.157 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:18.158 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:18.158 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:18.193 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:18.194 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:18.194 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:18.194 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:18.195 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:18.195 +01:00 [DBG] Start authorize request
2020-01-19 13:26:18.195 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:18.196 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:18.196 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:18.196 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:18.197 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "msNGLOhz2TnlWi4tb7-QOaqDEX3FwnsciBTu7yMOhCLiB",
  "Nonce": "msNGLOhz2TnlWi4tb7-QOaqDEX3FwnsciBTu7yMOhCLiB",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "msNGLOhz2TnlWi4tb7-QOaqDEX3FwnsciBTu7yMOhCLiB",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "E0EFE-yKCrgG0HUAJyFcwWSVbbYCzRl1Coa3ZO1e83Q",
    "code_challenge_method": "S256",
    "nonce": "msNGLOhz2TnlWi4tb7-QOaqDEX3FwnsciBTu7yMOhCLiB"
  }
}
2020-01-19 13:26:18.198 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:18.198 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:18.208 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****245b"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000002A",
  "TimeStamp": "2020-01-19T12:26:18Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:18.208 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "msNGLOhz2TnlWi4tb7-QOaqDEX3FwnsciBTu7yMOhCLiB",
  "Scope": "openid profile api"
}
2020-01-19 13:26:18.661 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:18.662 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:18.662 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:18.662 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:18.663 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:18.663 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:18.664 +01:00 [DBG] Start discovery request
2020-01-19 13:26:18.700 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:18.701 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:18.701 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:18.702 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:18.703 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:18.703 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:18.703 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:18.738 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:18.740 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:18.741 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:18.746 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:18.746 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:18.747 +01:00 [DBG] Start authorize request
2020-01-19 13:26:18.747 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:18.748 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:18.748 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:18.749 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:18.749 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "AHdwBPXZqtasl4-5JRrqnoQyiETrzA2VzCQpttQBmDrdE",
  "Nonce": "AHdwBPXZqtasl4-5JRrqnoQyiETrzA2VzCQpttQBmDrdE",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "AHdwBPXZqtasl4-5JRrqnoQyiETrzA2VzCQpttQBmDrdE",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "5FNi3e5oUE0cd5gVTHDt6lVtCB1VPBVKXTLlt2pImbs",
    "code_challenge_method": "S256",
    "nonce": "AHdwBPXZqtasl4-5JRrqnoQyiETrzA2VzCQpttQBmDrdE"
  }
}
2020-01-19 13:26:18.752 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:18.752 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:18.761 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****085c"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000002B",
  "TimeStamp": "2020-01-19T12:26:18Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:18.762 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "AHdwBPXZqtasl4-5JRrqnoQyiETrzA2VzCQpttQBmDrdE",
  "Scope": "openid profile api"
}
2020-01-19 13:26:19.224 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:19.225 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:19.225 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:19.225 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:19.225 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:19.226 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:19.226 +01:00 [DBG] Start discovery request
2020-01-19 13:26:19.255 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:19.256 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:19.257 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:19.257 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:19.257 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:19.258 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:19.258 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:19.290 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:19.291 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:19.291 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:19.292 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:19.292 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:19.292 +01:00 [DBG] Start authorize request
2020-01-19 13:26:19.293 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:19.293 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:19.293 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:19.294 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:19.294 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "TXtyYp4S060Ln6igC_Lx4dkDITPLzSopPyTh5tr9GfwbJ",
  "Nonce": "TXtyYp4S060Ln6igC_Lx4dkDITPLzSopPyTh5tr9GfwbJ",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "TXtyYp4S060Ln6igC_Lx4dkDITPLzSopPyTh5tr9GfwbJ",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "oauqOkk_-6-SQVjAlWbfCouJEIaHsS_m3g70ikaAdw8",
    "code_challenge_method": "S256",
    "nonce": "TXtyYp4S060Ln6igC_Lx4dkDITPLzSopPyTh5tr9GfwbJ"
  }
}
2020-01-19 13:26:19.295 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:19.295 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:19.304 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****8fff"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000002C",
  "TimeStamp": "2020-01-19T12:26:19Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:19.312 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "TXtyYp4S060Ln6igC_Lx4dkDITPLzSopPyTh5tr9GfwbJ",
  "Scope": "openid profile api"
}
2020-01-19 13:26:19.792 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:19.793 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:19.794 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:19.794 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:19.794 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:19.795 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:19.795 +01:00 [DBG] Start discovery request
2020-01-19 13:26:19.830 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:19.830 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:19.831 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:19.831 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:19.832 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:19.832 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:19.832 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:19.858 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:19.859 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:19.860 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:19.860 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:19.861 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:19.861 +01:00 [DBG] Start authorize request
2020-01-19 13:26:19.861 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:19.862 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:19.862 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:19.862 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:19.863 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "1--lGottGSBcL8yzTRS6rr9QirmbWDiBpoaDJlOZivSn3",
  "Nonce": "1--lGottGSBcL8yzTRS6rr9QirmbWDiBpoaDJlOZivSn3",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "1--lGottGSBcL8yzTRS6rr9QirmbWDiBpoaDJlOZivSn3",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "kPIso9Z475VNvnn_H4bOeVAFNPNj_ZLdmYhbxMHK4_k",
    "code_challenge_method": "S256",
    "nonce": "1--lGottGSBcL8yzTRS6rr9QirmbWDiBpoaDJlOZivSn3"
  }
}
2020-01-19 13:26:19.864 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:19.864 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:19.873 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****dcde"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000002D",
  "TimeStamp": "2020-01-19T12:26:19Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:19.874 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "1--lGottGSBcL8yzTRS6rr9QirmbWDiBpoaDJlOZivSn3",
  "Scope": "openid profile api"
}
2020-01-19 13:26:20.439 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:20.440 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:20.440 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:20.440 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:20.440 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:20.441 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:20.441 +01:00 [DBG] Start discovery request
2020-01-19 13:26:20.474 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:20.474 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:20.475 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:20.478 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:20.478 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:20.479 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:20.479 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:20.517 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:20.520 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:20.520 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:20.521 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:20.521 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:20.521 +01:00 [DBG] Start authorize request
2020-01-19 13:26:20.521 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:20.521 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:20.522 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:20.522 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:20.522 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "k3aqr0dkS4OZuHBXu2liHyx74DFY_x60re9PGs_ZxW710",
  "Nonce": "k3aqr0dkS4OZuHBXu2liHyx74DFY_x60re9PGs_ZxW710",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "k3aqr0dkS4OZuHBXu2liHyx74DFY_x60re9PGs_ZxW710",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "AWwCZeYfK2IpXDdH0RhHH53q71F38tZOQZy5TZ0yNB8",
    "code_challenge_method": "S256",
    "nonce": "k3aqr0dkS4OZuHBXu2liHyx74DFY_x60re9PGs_ZxW710"
  }
}
2020-01-19 13:26:20.523 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:20.523 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:20.533 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****aac6"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000002E",
  "TimeStamp": "2020-01-19T12:26:20Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:20.537 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "k3aqr0dkS4OZuHBXu2liHyx74DFY_x60re9PGs_ZxW710",
  "Scope": "openid profile api"
}
2020-01-19 13:26:21.091 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:21.092 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:21.092 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:21.092 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:21.093 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:21.093 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:21.093 +01:00 [DBG] Start discovery request
2020-01-19 13:26:21.122 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:21.123 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:21.126 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:21.126 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:21.126 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:21.127 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:21.127 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:21.160 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:21.162 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:21.163 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:21.168 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:21.168 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:21.169 +01:00 [DBG] Start authorize request
2020-01-19 13:26:21.169 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:21.169 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:21.169 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:21.170 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:21.170 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "J_PKmLzvY0_fxY6K3mUYBlQ00v8MyMno83_AsZY9AM5EJ",
  "Nonce": "J_PKmLzvY0_fxY6K3mUYBlQ00v8MyMno83_AsZY9AM5EJ",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "J_PKmLzvY0_fxY6K3mUYBlQ00v8MyMno83_AsZY9AM5EJ",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "NI5WpdZ3b-EmdxhVzB_1OtxVi8rkh6xZPYCkq7_XivU",
    "code_challenge_method": "S256",
    "nonce": "J_PKmLzvY0_fxY6K3mUYBlQ00v8MyMno83_AsZY9AM5EJ"
  }
}
2020-01-19 13:26:21.171 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:21.172 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:21.182 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****a36e"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000002F",
  "TimeStamp": "2020-01-19T12:26:21Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:21.183 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "J_PKmLzvY0_fxY6K3mUYBlQ00v8MyMno83_AsZY9AM5EJ",
  "Scope": "openid profile api"
}
2020-01-19 13:26:21.608 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:21.609 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:21.609 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:21.609 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:21.609 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:21.610 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:21.610 +01:00 [DBG] Start discovery request
2020-01-19 13:26:21.639 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:21.639 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:21.639 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:21.640 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:21.640 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:21.640 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:21.640 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:21.674 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:21.674 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:21.675 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:21.676 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:21.676 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:21.676 +01:00 [DBG] Start authorize request
2020-01-19 13:26:21.676 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:21.677 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:21.677 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:21.677 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:21.678 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "SsVp-ns87CqDITandjJwdPx1kGmQg2u-5cRAba7Mjpviq",
  "Nonce": "SsVp-ns87CqDITandjJwdPx1kGmQg2u-5cRAba7Mjpviq",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "SsVp-ns87CqDITandjJwdPx1kGmQg2u-5cRAba7Mjpviq",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "ov-h6lo-Ujn6vl6vnQkPraS5SpTv_j2cnhGmBsWIOAM",
    "code_challenge_method": "S256",
    "nonce": "SsVp-ns87CqDITandjJwdPx1kGmQg2u-5cRAba7Mjpviq"
  }
}
2020-01-19 13:26:21.678 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:21.678 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:21.690 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****3018"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000030",
  "TimeStamp": "2020-01-19T12:26:21Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:21.691 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "SsVp-ns87CqDITandjJwdPx1kGmQg2u-5cRAba7Mjpviq",
  "Scope": "openid profile api"
}
2020-01-19 13:26:22.161 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:22.162 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:22.164 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:22.164 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:22.165 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:22.166 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:22.173 +01:00 [DBG] Start discovery request
2020-01-19 13:26:22.194 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:22.194 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:22.195 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:22.195 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:22.195 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:22.196 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:22.196 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:22.220 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:22.220 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:22.220 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:22.221 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:22.221 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:22.222 +01:00 [DBG] Start authorize request
2020-01-19 13:26:22.222 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:22.222 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:22.222 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:22.223 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:22.223 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "GwMzutnIt-r6n4awyWQDQGeiG3LNYKFohyrKjWo7Nja-9",
  "Nonce": "GwMzutnIt-r6n4awyWQDQGeiG3LNYKFohyrKjWo7Nja-9",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "GwMzutnIt-r6n4awyWQDQGeiG3LNYKFohyrKjWo7Nja-9",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "gmSAMjUFcJr4w5hUm8MzeXghXI9mCZTJJkuwWr5OeB4",
    "code_challenge_method": "S256",
    "nonce": "GwMzutnIt-r6n4awyWQDQGeiG3LNYKFohyrKjWo7Nja-9"
  }
}
2020-01-19 13:26:22.224 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:22.224 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:22.234 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****0e0e"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000031",
  "TimeStamp": "2020-01-19T12:26:22Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:22.235 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "GwMzutnIt-r6n4awyWQDQGeiG3LNYKFohyrKjWo7Nja-9",
  "Scope": "openid profile api"
}
2020-01-19 13:26:22.678 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:22.678 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:22.678 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:22.679 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:22.679 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:22.679 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:22.679 +01:00 [DBG] Start discovery request
2020-01-19 13:26:22.707 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:22.708 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:22.708 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:22.708 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:22.709 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:22.709 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:22.710 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:22.744 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:22.745 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:22.750 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:22.750 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:22.750 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:22.751 +01:00 [DBG] Start authorize request
2020-01-19 13:26:22.751 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:22.751 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:22.752 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:22.752 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:22.752 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "d9JVfs7Tach6DCu1BnruxK_DiS2h6HLnetmGVEloHzyLN",
  "Nonce": "d9JVfs7Tach6DCu1BnruxK_DiS2h6HLnetmGVEloHzyLN",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "d9JVfs7Tach6DCu1BnruxK_DiS2h6HLnetmGVEloHzyLN",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "Xgmb_L3IJJqYxw-WCK1NDzM6n3_DMvNsrYt9y2fBbqs",
    "code_challenge_method": "S256",
    "nonce": "d9JVfs7Tach6DCu1BnruxK_DiS2h6HLnetmGVEloHzyLN"
  }
}
2020-01-19 13:26:22.753 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:22.753 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:22.763 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****c177"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000032",
  "TimeStamp": "2020-01-19T12:26:22Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:22.764 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "d9JVfs7Tach6DCu1BnruxK_DiS2h6HLnetmGVEloHzyLN",
  "Scope": "openid profile api"
}
2020-01-19 13:26:23.191 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:23.192 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:23.192 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:23.193 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:23.194 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:23.196 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:23.197 +01:00 [DBG] Start discovery request
2020-01-19 13:26:23.223 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:23.223 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:23.226 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:23.227 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:23.227 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:23.227 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:23.227 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:23.259 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:23.261 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:23.262 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:23.263 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:23.263 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:23.263 +01:00 [DBG] Start authorize request
2020-01-19 13:26:23.264 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:23.264 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:23.264 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:23.264 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:23.265 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "75eELeVcge6obOAIn5V3CdQyZHn04_0qGDAVV9VGoQkfr",
  "Nonce": "75eELeVcge6obOAIn5V3CdQyZHn04_0qGDAVV9VGoQkfr",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "75eELeVcge6obOAIn5V3CdQyZHn04_0qGDAVV9VGoQkfr",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "5u0Qu_DNyTtLe0Rd0zK_MwnjtAjrziWsJs0SBWcETqs",
    "code_challenge_method": "S256",
    "nonce": "75eELeVcge6obOAIn5V3CdQyZHn04_0qGDAVV9VGoQkfr"
  }
}
2020-01-19 13:26:23.266 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:23.266 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:23.277 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****56d3"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000033",
  "TimeStamp": "2020-01-19T12:26:23Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:23.278 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "75eELeVcge6obOAIn5V3CdQyZHn04_0qGDAVV9VGoQkfr",
  "Scope": "openid profile api"
}
2020-01-19 13:26:23.695 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:23.697 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:23.699 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:23.700 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:23.700 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:23.700 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:23.701 +01:00 [DBG] Start discovery request
2020-01-19 13:26:23.731 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:23.732 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:23.732 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:23.733 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:23.733 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:23.733 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:23.734 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:23.767 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:23.768 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:23.769 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:23.770 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:23.770 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:23.771 +01:00 [DBG] Start authorize request
2020-01-19 13:26:23.771 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:23.771 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:23.772 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:23.772 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:23.773 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "_8tioFO_EBTHnGoU5acHbSPDfZ1iWjCueA61uqYf8BrFn",
  "Nonce": "_8tioFO_EBTHnGoU5acHbSPDfZ1iWjCueA61uqYf8BrFn",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "_8tioFO_EBTHnGoU5acHbSPDfZ1iWjCueA61uqYf8BrFn",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "fB4fhVkRDwf1oPcWrUOcrMF-6FXst2RrFieTIHRO47g",
    "code_challenge_method": "S256",
    "nonce": "_8tioFO_EBTHnGoU5acHbSPDfZ1iWjCueA61uqYf8BrFn"
  }
}
2020-01-19 13:26:23.774 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:23.774 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:23.785 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****86cf"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000034",
  "TimeStamp": "2020-01-19T12:26:23Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:23.789 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "_8tioFO_EBTHnGoU5acHbSPDfZ1iWjCueA61uqYf8BrFn",
  "Scope": "openid profile api"
}
2020-01-19 13:26:24.394 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:24.394 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:24.394 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:24.395 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:24.395 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:24.395 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:24.395 +01:00 [DBG] Start discovery request
2020-01-19 13:26:24.422 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:24.423 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:24.423 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:24.423 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:24.424 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:24.424 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:24.424 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:24.461 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:24.461 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:24.462 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:24.463 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:24.463 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:24.463 +01:00 [DBG] Start authorize request
2020-01-19 13:26:24.464 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:24.464 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:24.464 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:24.465 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:24.465 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "T1VRiWhhXiPKd3ci8GkTBHentojhRC4tyCXjKfHN9keWM",
  "Nonce": "T1VRiWhhXiPKd3ci8GkTBHentojhRC4tyCXjKfHN9keWM",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "T1VRiWhhXiPKd3ci8GkTBHentojhRC4tyCXjKfHN9keWM",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "tNu9N6aCQj-iS7BtAtweDW8X-9a3AMqiHjpJ-Qw5FAI",
    "code_challenge_method": "S256",
    "nonce": "T1VRiWhhXiPKd3ci8GkTBHentojhRC4tyCXjKfHN9keWM"
  }
}
2020-01-19 13:26:24.466 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:24.466 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:24.476 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****6832"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000035",
  "TimeStamp": "2020-01-19T12:26:24Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:24.477 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "T1VRiWhhXiPKd3ci8GkTBHentojhRC4tyCXjKfHN9keWM",
  "Scope": "openid profile api"
}
2020-01-19 13:26:24.916 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:24.916 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:24.916 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:24.916 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:24.917 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:24.917 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:24.917 +01:00 [DBG] Start discovery request
2020-01-19 13:26:24.945 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:24.946 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:24.946 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:24.946 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:24.947 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:24.947 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:24.947 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:24.977 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:24.978 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:24.980 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:24.980 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:24.980 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:24.981 +01:00 [DBG] Start authorize request
2020-01-19 13:26:24.981 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:24.981 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:24.981 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:24.982 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:24.982 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "6nRNznsTSZutLbuuaeWVN2MKygqDRyu6hqZ3EdsGYO0_E",
  "Nonce": "6nRNznsTSZutLbuuaeWVN2MKygqDRyu6hqZ3EdsGYO0_E",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "6nRNznsTSZutLbuuaeWVN2MKygqDRyu6hqZ3EdsGYO0_E",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "RlB-x_EQuLn-UfzwRCWfhp6Jae7Vp5h-bOufFdSgqss",
    "code_challenge_method": "S256",
    "nonce": "6nRNznsTSZutLbuuaeWVN2MKygqDRyu6hqZ3EdsGYO0_E"
  }
}
2020-01-19 13:26:24.983 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:24.983 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:24.994 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****6056"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000036",
  "TimeStamp": "2020-01-19T12:26:24Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:24.995 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "6nRNznsTSZutLbuuaeWVN2MKygqDRyu6hqZ3EdsGYO0_E",
  "Scope": "openid profile api"
}
2020-01-19 13:26:25.453 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:25.453 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:25.453 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:25.454 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:25.454 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:25.454 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:25.454 +01:00 [DBG] Start discovery request
2020-01-19 13:26:25.482 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:25.483 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:25.483 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:25.483 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:25.484 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:25.484 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:25.485 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:25.523 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:25.523 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:25.524 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:25.524 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:25.525 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:25.525 +01:00 [DBG] Start authorize request
2020-01-19 13:26:25.525 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:25.526 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:25.526 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:25.527 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:25.527 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "d_b-lrfU2pfz2mX0aFq_tUnd0NmokiHmKPgHhh5rXzwvj",
  "Nonce": "d_b-lrfU2pfz2mX0aFq_tUnd0NmokiHmKPgHhh5rXzwvj",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "d_b-lrfU2pfz2mX0aFq_tUnd0NmokiHmKPgHhh5rXzwvj",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "ofyhtWcm8jt1wItToxFPevHI8A9luhtcDAq0JxDyPEs",
    "code_challenge_method": "S256",
    "nonce": "d_b-lrfU2pfz2mX0aFq_tUnd0NmokiHmKPgHhh5rXzwvj"
  }
}
2020-01-19 13:26:25.528 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:25.529 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:25.540 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****9455"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000037",
  "TimeStamp": "2020-01-19T12:26:25Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:25.552 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "d_b-lrfU2pfz2mX0aFq_tUnd0NmokiHmKPgHhh5rXzwvj",
  "Scope": "openid profile api"
}
2020-01-19 13:26:25.998 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:25.998 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:25.999 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:25.999 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:25.999 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:25.999 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:26.000 +01:00 [DBG] Start discovery request
2020-01-19 13:26:26.029 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:26.030 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:26.030 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:26.030 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:26.031 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:26.031 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:26.031 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:26.053 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:26.054 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:26.061 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:26.061 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:26.062 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:26.062 +01:00 [DBG] Start authorize request
2020-01-19 13:26:26.062 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:26.063 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:26.064 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:26.064 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:26.064 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "7L5nuW--CZwxi1mr5Tc8l-cOVnD0GYjd96PTpvrh9NnOX",
  "Nonce": "7L5nuW--CZwxi1mr5Tc8l-cOVnD0GYjd96PTpvrh9NnOX",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "7L5nuW--CZwxi1mr5Tc8l-cOVnD0GYjd96PTpvrh9NnOX",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "4oqerASFUadyw4euPZtwpe9I3m1gosf_2_-WKZ9iwrM",
    "code_challenge_method": "S256",
    "nonce": "7L5nuW--CZwxi1mr5Tc8l-cOVnD0GYjd96PTpvrh9NnOX"
  }
}
2020-01-19 13:26:26.065 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:26.066 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:26.078 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****9a7a"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000038",
  "TimeStamp": "2020-01-19T12:26:26Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:26.079 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "7L5nuW--CZwxi1mr5Tc8l-cOVnD0GYjd96PTpvrh9NnOX",
  "Scope": "openid profile api"
}
2020-01-19 13:26:26.642 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:26.642 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:26.642 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:26.643 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:26.643 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:26.643 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:26.643 +01:00 [DBG] Start discovery request
2020-01-19 13:26:26.672 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:26.673 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:26.673 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:26.674 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:26.675 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:26.677 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:26.678 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:26.709 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:26.710 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:26.711 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:26.712 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:26.717 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:26.717 +01:00 [DBG] Start authorize request
2020-01-19 13:26:26.718 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:26.718 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:26.718 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:26.719 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:26.720 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "SXwPSeciqBnzjAmylYbNnR3igR0e9Z0MFaVUuGDZ_jNrR",
  "Nonce": "SXwPSeciqBnzjAmylYbNnR3igR0e9Z0MFaVUuGDZ_jNrR",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "SXwPSeciqBnzjAmylYbNnR3igR0e9Z0MFaVUuGDZ_jNrR",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "nAoEeLe7am3WCOMqDEgFZ-YbhXytzElS-0Wm2LlhOSs",
    "code_challenge_method": "S256",
    "nonce": "SXwPSeciqBnzjAmylYbNnR3igR0e9Z0MFaVUuGDZ_jNrR"
  }
}
2020-01-19 13:26:26.721 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:26.722 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:26.730 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****c6c4"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000039",
  "TimeStamp": "2020-01-19T12:26:26Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:26.731 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "SXwPSeciqBnzjAmylYbNnR3igR0e9Z0MFaVUuGDZ_jNrR",
  "Scope": "openid profile api"
}
2020-01-19 13:26:27.153 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:27.154 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:27.154 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:27.154 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:27.155 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:27.155 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:27.155 +01:00 [DBG] Start discovery request
2020-01-19 13:26:27.186 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:27.187 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:27.187 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:27.187 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:27.188 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:27.188 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:27.188 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:27.226 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:27.227 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:27.228 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:27.232 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:27.232 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:27.232 +01:00 [DBG] Start authorize request
2020-01-19 13:26:27.233 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:27.233 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:27.234 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:27.234 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:27.235 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "822qe2__OBmZTRI5_Hh9R9nK3bZD3cpX_TIF459k2YXqy",
  "Nonce": "822qe2__OBmZTRI5_Hh9R9nK3bZD3cpX_TIF459k2YXqy",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "822qe2__OBmZTRI5_Hh9R9nK3bZD3cpX_TIF459k2YXqy",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "NxnkJSHsgTOOL_kDnSDMQ3vHqu9DwUR51GmerSAoMOY",
    "code_challenge_method": "S256",
    "nonce": "822qe2__OBmZTRI5_Hh9R9nK3bZD3cpX_TIF459k2YXqy"
  }
}
2020-01-19 13:26:27.235 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:27.236 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:27.247 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****b063"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000003A",
  "TimeStamp": "2020-01-19T12:26:27Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:27.248 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "822qe2__OBmZTRI5_Hh9R9nK3bZD3cpX_TIF459k2YXqy",
  "Scope": "openid profile api"
}
2020-01-19 13:26:27.662 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:27.663 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:27.663 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:27.663 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:27.663 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:27.664 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:27.664 +01:00 [DBG] Start discovery request
2020-01-19 13:26:27.699 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:27.699 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:27.699 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:27.700 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:27.700 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:27.700 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:27.701 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:27.726 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:27.727 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:27.728 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:27.728 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:27.729 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:27.729 +01:00 [DBG] Start authorize request
2020-01-19 13:26:27.729 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:27.730 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:27.730 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:27.730 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:27.731 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "q7U52TZ6_seZaSAHexcrcIkt1UYsOSyJFeuoSsC3XDfLb",
  "Nonce": "q7U52TZ6_seZaSAHexcrcIkt1UYsOSyJFeuoSsC3XDfLb",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "q7U52TZ6_seZaSAHexcrcIkt1UYsOSyJFeuoSsC3XDfLb",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "gw_D2lgbX6lzKBGruzn9ChVEombjbfEEkr_dV7aRAko",
    "code_challenge_method": "S256",
    "nonce": "q7U52TZ6_seZaSAHexcrcIkt1UYsOSyJFeuoSsC3XDfLb"
  }
}
2020-01-19 13:26:27.731 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:27.732 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:27.741 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****b737"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000003B",
  "TimeStamp": "2020-01-19T12:26:27Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:27.742 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "q7U52TZ6_seZaSAHexcrcIkt1UYsOSyJFeuoSsC3XDfLb",
  "Scope": "openid profile api"
}
2020-01-19 13:26:28.344 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:28.346 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:28.350 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:28.350 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:28.351 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:28.351 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:28.351 +01:00 [DBG] Start discovery request
2020-01-19 13:26:28.377 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:28.378 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:28.378 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:28.378 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:28.378 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:28.379 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:28.379 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:28.406 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:28.407 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:28.407 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:28.408 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:28.408 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:28.408 +01:00 [DBG] Start authorize request
2020-01-19 13:26:28.409 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:28.409 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:28.409 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:28.410 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:28.410 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "MGN8AxDR-K14k-f8Cw5Yj3oBjIbPaDz0-3YaDdbwwxR07",
  "Nonce": "MGN8AxDR-K14k-f8Cw5Yj3oBjIbPaDz0-3YaDdbwwxR07",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "MGN8AxDR-K14k-f8Cw5Yj3oBjIbPaDz0-3YaDdbwwxR07",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "eNl-CYgZ43vX7KjbZ_6spuYy-2kAhTZR7qGLNJeGeXk",
    "code_challenge_method": "S256",
    "nonce": "MGN8AxDR-K14k-f8Cw5Yj3oBjIbPaDz0-3YaDdbwwxR07"
  }
}
2020-01-19 13:26:28.411 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:28.411 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:28.421 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****cb0b"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000003C",
  "TimeStamp": "2020-01-19T12:26:28Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:28.422 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "MGN8AxDR-K14k-f8Cw5Yj3oBjIbPaDz0-3YaDdbwwxR07",
  "Scope": "openid profile api"
}
2020-01-19 13:26:28.893 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:28.893 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:28.894 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:28.894 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:28.894 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:28.895 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:28.895 +01:00 [DBG] Start discovery request
2020-01-19 13:26:28.929 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:28.929 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:28.930 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:28.931 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:28.931 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:28.932 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:28.932 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:28.982 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:28.983 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:28.983 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:28.984 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:28.984 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:28.985 +01:00 [DBG] Start authorize request
2020-01-19 13:26:28.985 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:28.986 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:28.986 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:28.987 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:28.988 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "RvfXMfsrylvG5SSIz_zaPBVxRVAuaGyiuhU84t8YJ2jEl",
  "Nonce": "RvfXMfsrylvG5SSIz_zaPBVxRVAuaGyiuhU84t8YJ2jEl",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "RvfXMfsrylvG5SSIz_zaPBVxRVAuaGyiuhU84t8YJ2jEl",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "G5qDE3xPdzlUbQrKlrP8U8a9mUkqMhy76nZH-zimGw8",
    "code_challenge_method": "S256",
    "nonce": "RvfXMfsrylvG5SSIz_zaPBVxRVAuaGyiuhU84t8YJ2jEl"
  }
}
2020-01-19 13:26:28.989 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:28.989 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:29.001 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****a1a1"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000003D",
  "TimeStamp": "2020-01-19T12:26:29Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:29.002 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "RvfXMfsrylvG5SSIz_zaPBVxRVAuaGyiuhU84t8YJ2jEl",
  "Scope": "openid profile api"
}
2020-01-19 13:26:29.416 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:29.417 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:29.417 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:29.418 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:29.418 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:29.418 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:29.418 +01:00 [DBG] Start discovery request
2020-01-19 13:26:29.448 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:29.448 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:29.449 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:29.449 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:29.449 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:29.449 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:29.450 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:29.479 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:29.480 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:29.480 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:29.481 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:29.481 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:29.482 +01:00 [DBG] Start authorize request
2020-01-19 13:26:29.482 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:29.482 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:29.483 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:29.483 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:29.483 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "Ex-6E2Wzby6KK_DCc2fr6_5qDW72BT6HzBjkN7XGncBaS",
  "Nonce": "Ex-6E2Wzby6KK_DCc2fr6_5qDW72BT6HzBjkN7XGncBaS",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "Ex-6E2Wzby6KK_DCc2fr6_5qDW72BT6HzBjkN7XGncBaS",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "ndWnBFAzk72otr-YO0uSAj_gQIanbQkawPe97GpFdxk",
    "code_challenge_method": "S256",
    "nonce": "Ex-6E2Wzby6KK_DCc2fr6_5qDW72BT6HzBjkN7XGncBaS"
  }
}
2020-01-19 13:26:29.485 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:29.485 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:29.497 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****838c"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000003E",
  "TimeStamp": "2020-01-19T12:26:29Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:29.502 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "Ex-6E2Wzby6KK_DCc2fr6_5qDW72BT6HzBjkN7XGncBaS",
  "Scope": "openid profile api"
}
2020-01-19 13:26:29.958 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:29.960 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:29.960 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:29.960 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:29.961 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:29.961 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:29.961 +01:00 [DBG] Start discovery request
2020-01-19 13:26:29.989 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:29.990 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:29.990 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:29.990 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:29.990 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:29.991 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:29.991 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:30.017 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:30.019 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:30.020 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:30.020 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:30.021 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:30.021 +01:00 [DBG] Start authorize request
2020-01-19 13:26:30.022 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:30.022 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:30.022 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:30.022 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:30.023 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "QFbupa9OqTHKA8Nh_NcGPG4-71mlkdqD9bLdPGf1vsTmq",
  "Nonce": "QFbupa9OqTHKA8Nh_NcGPG4-71mlkdqD9bLdPGf1vsTmq",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "QFbupa9OqTHKA8Nh_NcGPG4-71mlkdqD9bLdPGf1vsTmq",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "UK_sL79MZXPdxtgxh3fVorEfz0puk0NP1Iyp56t40D0",
    "code_challenge_method": "S256",
    "nonce": "QFbupa9OqTHKA8Nh_NcGPG4-71mlkdqD9bLdPGf1vsTmq"
  }
}
2020-01-19 13:26:30.024 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:30.024 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:30.033 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****5a56"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000003F",
  "TimeStamp": "2020-01-19T12:26:30Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:30.035 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "QFbupa9OqTHKA8Nh_NcGPG4-71mlkdqD9bLdPGf1vsTmq",
  "Scope": "openid profile api"
}
2020-01-19 13:26:30.637 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:30.637 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:30.638 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:30.638 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:30.638 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:30.639 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:30.639 +01:00 [DBG] Start discovery request
2020-01-19 13:26:30.678 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:30.679 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:30.679 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:30.680 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:30.680 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:30.681 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:30.681 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:30.732 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:30.733 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:30.734 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:30.735 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:30.735 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:30.736 +01:00 [DBG] Start authorize request
2020-01-19 13:26:30.737 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:30.737 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:30.738 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:30.738 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:30.739 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "Zy7ixU3AAcaGgW_Fqr9TaNNA5K71XYIDIRXF9ddPlzVr5",
  "Nonce": "Zy7ixU3AAcaGgW_Fqr9TaNNA5K71XYIDIRXF9ddPlzVr5",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "Zy7ixU3AAcaGgW_Fqr9TaNNA5K71XYIDIRXF9ddPlzVr5",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "i0sxtaAxnBxGilY1QFe0R-6bJJPrOM6BfI3rcWW3FlA",
    "code_challenge_method": "S256",
    "nonce": "Zy7ixU3AAcaGgW_Fqr9TaNNA5K71XYIDIRXF9ddPlzVr5"
  }
}
2020-01-19 13:26:30.750 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:30.750 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:30.762 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****4b34"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000040",
  "TimeStamp": "2020-01-19T12:26:30Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:30.763 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "Zy7ixU3AAcaGgW_Fqr9TaNNA5K71XYIDIRXF9ddPlzVr5",
  "Scope": "openid profile api"
}
2020-01-19 13:26:31.206 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:31.207 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:31.207 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:31.208 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:31.208 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:31.209 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:31.209 +01:00 [DBG] Start discovery request
2020-01-19 13:26:31.247 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:31.248 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:31.248 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:31.249 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:31.249 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:31.249 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:31.249 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:31.293 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:31.294 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:31.294 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:31.295 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:31.296 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:31.296 +01:00 [DBG] Start authorize request
2020-01-19 13:26:31.297 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:31.297 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:31.297 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:31.298 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:31.299 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "DzasOm7PwVLGRyyk8lZgs_GpNopIH8Qo6XoUag_OCp0aQ",
  "Nonce": "DzasOm7PwVLGRyyk8lZgs_GpNopIH8Qo6XoUag_OCp0aQ",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "DzasOm7PwVLGRyyk8lZgs_GpNopIH8Qo6XoUag_OCp0aQ",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "iq5IE3_abc1TZ6OeLOM4PgV6ffqfC7Xvqp9B8R6LpQA",
    "code_challenge_method": "S256",
    "nonce": "DzasOm7PwVLGRyyk8lZgs_GpNopIH8Qo6XoUag_OCp0aQ"
  }
}
2020-01-19 13:26:31.300 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:31.301 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:31.311 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****cded"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000041",
  "TimeStamp": "2020-01-19T12:26:31Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:31.313 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "DzasOm7PwVLGRyyk8lZgs_GpNopIH8Qo6XoUag_OCp0aQ",
  "Scope": "openid profile api"
}
2020-01-19 13:26:31.798 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:31.798 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:31.798 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:31.799 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:31.799 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:31.799 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:31.799 +01:00 [DBG] Start discovery request
2020-01-19 13:26:31.829 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:31.830 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:31.830 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:31.830 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:31.831 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:31.831 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:31.831 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:31.874 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:31.875 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:31.876 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:31.876 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:31.877 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:31.878 +01:00 [DBG] Start authorize request
2020-01-19 13:26:31.879 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:31.881 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:31.883 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:31.885 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:31.886 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "VEkbFXB_uglQt6eoIyBgp_eve5A2ng7_4URxww1IHNMyY",
  "Nonce": "VEkbFXB_uglQt6eoIyBgp_eve5A2ng7_4URxww1IHNMyY",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "VEkbFXB_uglQt6eoIyBgp_eve5A2ng7_4URxww1IHNMyY",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "coNqEhtLHLItUPTFu5sFgx3XU-6i9yyPqwscLZ5kfhw",
    "code_challenge_method": "S256",
    "nonce": "VEkbFXB_uglQt6eoIyBgp_eve5A2ng7_4URxww1IHNMyY"
  }
}
2020-01-19 13:26:31.887 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:31.888 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:31.895 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****4976"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000042",
  "TimeStamp": "2020-01-19T12:26:31Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:31.897 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "VEkbFXB_uglQt6eoIyBgp_eve5A2ng7_4URxww1IHNMyY",
  "Scope": "openid profile api"
}
2020-01-19 13:26:32.421 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:32.422 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:32.422 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:32.422 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:32.422 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:32.423 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:32.423 +01:00 [DBG] Start discovery request
2020-01-19 13:26:32.458 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:32.458 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:32.458 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:32.459 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:32.459 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:32.459 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:32.459 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:32.494 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:32.495 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:32.499 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:32.500 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:32.501 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:32.501 +01:00 [DBG] Start authorize request
2020-01-19 13:26:32.502 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:32.502 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:32.502 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:32.503 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:32.504 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "TJ2Qtl9LxsVMG5zF96cYCx34Vi7V_rhsxLMiBiJ31XCxu",
  "Nonce": "TJ2Qtl9LxsVMG5zF96cYCx34Vi7V_rhsxLMiBiJ31XCxu",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "TJ2Qtl9LxsVMG5zF96cYCx34Vi7V_rhsxLMiBiJ31XCxu",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "ZXw5dc_zhChWlM_AB96Yd1zj08ULZHW_FLFe6g3JHsM",
    "code_challenge_method": "S256",
    "nonce": "TJ2Qtl9LxsVMG5zF96cYCx34Vi7V_rhsxLMiBiJ31XCxu"
  }
}
2020-01-19 13:26:32.506 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:32.507 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:32.516 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****ba1e"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000043",
  "TimeStamp": "2020-01-19T12:26:32Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:32.518 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "TJ2Qtl9LxsVMG5zF96cYCx34Vi7V_rhsxLMiBiJ31XCxu",
  "Scope": "openid profile api"
}
2020-01-19 13:26:32.993 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:32.994 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:32.994 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:32.994 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:32.994 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:32.995 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:32.995 +01:00 [DBG] Start discovery request
2020-01-19 13:26:33.028 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:33.028 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:33.028 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:33.029 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:33.029 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:33.030 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:33.030 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:33.072 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:33.073 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:33.074 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:33.074 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:33.074 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:33.075 +01:00 [DBG] Start authorize request
2020-01-19 13:26:33.075 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:33.075 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:33.076 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:33.076 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:33.077 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "IxR5mSBy5h6fyjTL7yGrhdK1sJMF5X0ZvFK7ie4O_E_KW",
  "Nonce": "IxR5mSBy5h6fyjTL7yGrhdK1sJMF5X0ZvFK7ie4O_E_KW",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "IxR5mSBy5h6fyjTL7yGrhdK1sJMF5X0ZvFK7ie4O_E_KW",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "7CP2sV4rE5vWnDP_S3zWZhvRoKUwFx0f7cEuhW5Efzc",
    "code_challenge_method": "S256",
    "nonce": "IxR5mSBy5h6fyjTL7yGrhdK1sJMF5X0ZvFK7ie4O_E_KW"
  }
}
2020-01-19 13:26:33.078 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:33.078 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:33.089 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****94fc"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000044",
  "TimeStamp": "2020-01-19T12:26:33Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:33.089 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "IxR5mSBy5h6fyjTL7yGrhdK1sJMF5X0ZvFK7ie4O_E_KW",
  "Scope": "openid profile api"
}
2020-01-19 13:26:33.533 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:33.534 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:33.535 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:33.538 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:33.538 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:33.539 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:33.539 +01:00 [DBG] Start discovery request
2020-01-19 13:26:33.578 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:33.579 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:33.579 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:33.580 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:33.580 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:33.581 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:33.581 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:33.626 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:33.627 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:33.628 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:33.631 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:33.632 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:33.632 +01:00 [DBG] Start authorize request
2020-01-19 13:26:33.633 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:33.633 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:33.633 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:33.634 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:33.635 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "YIa9biSe905x_GWdRWCQBIdYH4je-5sYZw5umpnOVR71N",
  "Nonce": "YIa9biSe905x_GWdRWCQBIdYH4je-5sYZw5umpnOVR71N",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "YIa9biSe905x_GWdRWCQBIdYH4je-5sYZw5umpnOVR71N",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "JX3_a_GvAt-jaWMnOwPkKHtzWp2ywdQSJHh-v4NFa4c",
    "code_challenge_method": "S256",
    "nonce": "YIa9biSe905x_GWdRWCQBIdYH4je-5sYZw5umpnOVR71N"
  }
}
2020-01-19 13:26:33.637 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:33.637 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:33.649 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****3fb4"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000045",
  "TimeStamp": "2020-01-19T12:26:33Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:33.651 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "YIa9biSe905x_GWdRWCQBIdYH4je-5sYZw5umpnOVR71N",
  "Scope": "openid profile api"
}
2020-01-19 13:26:34.104 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:34.105 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:34.105 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:34.105 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:34.106 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:34.106 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:34.106 +01:00 [DBG] Start discovery request
2020-01-19 13:26:34.138 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:34.139 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:34.139 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:34.139 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:34.140 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:34.140 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:34.140 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:34.175 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:34.176 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:34.177 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:34.177 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:34.178 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:34.178 +01:00 [DBG] Start authorize request
2020-01-19 13:26:34.178 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:34.178 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:34.179 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:34.179 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:34.179 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "OkkGvnyNroZ00oJBmEP00830jRgFyX9KsMHPZKMDNJTv4",
  "Nonce": "OkkGvnyNroZ00oJBmEP00830jRgFyX9KsMHPZKMDNJTv4",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "OkkGvnyNroZ00oJBmEP00830jRgFyX9KsMHPZKMDNJTv4",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "kML7_c9pWTCfPvC19bS-99eb1ZHc-G7R6uidGOUx5u4",
    "code_challenge_method": "S256",
    "nonce": "OkkGvnyNroZ00oJBmEP00830jRgFyX9KsMHPZKMDNJTv4"
  }
}
2020-01-19 13:26:34.180 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:34.182 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:34.198 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****1aaf"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000046",
  "TimeStamp": "2020-01-19T12:26:34Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:34.201 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "OkkGvnyNroZ00oJBmEP00830jRgFyX9KsMHPZKMDNJTv4",
  "Scope": "openid profile api"
}
2020-01-19 13:26:34.833 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:26:34.833 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:34.834 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:34.834 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:26:34.835 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:26:34.835 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:26:34.835 +01:00 [DBG] Start discovery request
2020-01-19 13:26:34.871 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:26:34.872 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:26:34.872 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:26:34.872 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:26:34.872 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:26:34.873 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:26:34.873 +01:00 [DBG] Start key discovery request
2020-01-19 13:26:34.911 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:34.911 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:26:34.912 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:26:34.912 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:26:34.912 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:26:34.913 +01:00 [DBG] Start authorize request
2020-01-19 13:26:34.913 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:26:34.913 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:26:34.914 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:26:34.914 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:26:34.915 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "msQYE0DCcPVPy4n0cRqIKVezJCK6lAZBfMe_Y1IDT08LU",
  "Nonce": "msQYE0DCcPVPy4n0cRqIKVezJCK6lAZBfMe_Y1IDT08LU",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "msQYE0DCcPVPy4n0cRqIKVezJCK6lAZBfMe_Y1IDT08LU",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "zKq7MXFfwWtyuNecqiOm3ps_dZ01APSzbMm11bi7hpg",
    "code_challenge_method": "S256",
    "nonce": "msQYE0DCcPVPy4n0cRqIKVezJCK6lAZBfMe_Y1IDT08LU"
  }
}
2020-01-19 13:26:34.916 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:26:34.918 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:26:34.938 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****13b7"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000047",
  "TimeStamp": "2020-01-19T12:26:34Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:26:34.939 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "msQYE0DCcPVPy4n0cRqIKVezJCK6lAZBfMe_Y1IDT08LU",
  "Scope": "openid profile api"
}
2020-01-19 13:30:08.717 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:08.718 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:08.718 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:08.718 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:08.719 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:08.719 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:08.719 +01:00 [DBG] Start discovery request
2020-01-19 13:30:08.773 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:08.775 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:08.776 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:08.779 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:08.780 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:08.780 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:08.781 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:08.831 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:08.832 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:08.833 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:08.833 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:08.834 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:08.834 +01:00 [DBG] Start authorize request
2020-01-19 13:30:08.835 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:08.836 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:08.838 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:08.839 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:08.845 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "u99YFZUmVIhi0Q4N-3KYJZtEscW2lhidCPD4FhrwEpHEJ",
  "Nonce": "u99YFZUmVIhi0Q4N-3KYJZtEscW2lhidCPD4FhrwEpHEJ",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "u99YFZUmVIhi0Q4N-3KYJZtEscW2lhidCPD4FhrwEpHEJ",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "Qy27ojhTarO-Ej3qGaYHrcQVUYbCZ29LityFlLS1RNA",
    "code_challenge_method": "S256",
    "nonce": "u99YFZUmVIhi0Q4N-3KYJZtEscW2lhidCPD4FhrwEpHEJ"
  }
}
2020-01-19 13:30:08.847 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:08.847 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:08.857 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****85cc"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000048",
  "TimeStamp": "2020-01-19T12:30:08Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:08.858 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "u99YFZUmVIhi0Q4N-3KYJZtEscW2lhidCPD4FhrwEpHEJ",
  "Scope": "openid profile api"
}
2020-01-19 13:30:09.292 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:09.293 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:09.293 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:09.293 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:09.294 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:09.294 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:09.294 +01:00 [DBG] Start discovery request
2020-01-19 13:30:09.341 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:09.343 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:09.345 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:09.351 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:09.356 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:09.356 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:09.357 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:09.397 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:09.398 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:09.398 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:09.399 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:09.399 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:09.400 +01:00 [DBG] Start authorize request
2020-01-19 13:30:09.400 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:09.400 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:09.401 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:09.401 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:09.402 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "zaXxPvXBChQVECDflwvoZQQcuYpoCMjC9E5_7kAS_FlJN",
  "Nonce": "zaXxPvXBChQVECDflwvoZQQcuYpoCMjC9E5_7kAS_FlJN",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "zaXxPvXBChQVECDflwvoZQQcuYpoCMjC9E5_7kAS_FlJN",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "zkaL7wq91wBni9r2gDARDMBEaWzA3iWkmCR8v_B62TI",
    "code_challenge_method": "S256",
    "nonce": "zaXxPvXBChQVECDflwvoZQQcuYpoCMjC9E5_7kAS_FlJN"
  }
}
2020-01-19 13:30:09.403 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:09.404 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:09.417 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****9cc7"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000049",
  "TimeStamp": "2020-01-19T12:30:09Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:09.428 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "zaXxPvXBChQVECDflwvoZQQcuYpoCMjC9E5_7kAS_FlJN",
  "Scope": "openid profile api"
}
2020-01-19 13:30:09.865 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:09.865 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:09.865 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:09.865 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:09.866 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:09.866 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:09.866 +01:00 [DBG] Start discovery request
2020-01-19 13:30:09.912 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:09.912 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:09.913 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:09.913 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:09.914 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:09.914 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:09.914 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:09.956 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:09.959 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:09.960 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:09.963 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:09.964 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:09.964 +01:00 [DBG] Start authorize request
2020-01-19 13:30:09.965 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:09.965 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:09.965 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:09.966 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:09.966 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "TBkGa-582wqO0QxNQAgRlBGbIR7XOH9p3NFTR-c9vq2z8",
  "Nonce": "TBkGa-582wqO0QxNQAgRlBGbIR7XOH9p3NFTR-c9vq2z8",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "TBkGa-582wqO0QxNQAgRlBGbIR7XOH9p3NFTR-c9vq2z8",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "uM7_H2c1EE89FkPgKOL6yotLNm2FWGQ0GS0MfptI_Aw",
    "code_challenge_method": "S256",
    "nonce": "TBkGa-582wqO0QxNQAgRlBGbIR7XOH9p3NFTR-c9vq2z8"
  }
}
2020-01-19 13:30:09.967 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:09.968 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:09.979 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****10ca"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000004A",
  "TimeStamp": "2020-01-19T12:30:09Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:09.979 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "TBkGa-582wqO0QxNQAgRlBGbIR7XOH9p3NFTR-c9vq2z8",
  "Scope": "openid profile api"
}
2020-01-19 13:30:10.412 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:10.412 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:10.413 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:10.413 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:10.413 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:10.414 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:10.414 +01:00 [DBG] Start discovery request
2020-01-19 13:30:10.463 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:10.463 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:10.477 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:10.477 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:10.478 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:10.478 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:10.478 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:10.516 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:10.517 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:10.517 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:10.518 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:10.520 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:10.520 +01:00 [DBG] Start authorize request
2020-01-19 13:30:10.521 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:10.522 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:10.522 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:10.522 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:10.523 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "NbxuB5BCner3IhYEVk_NgV0oLtuf-_Hn8J4_pz_-5ClBH",
  "Nonce": "NbxuB5BCner3IhYEVk_NgV0oLtuf-_Hn8J4_pz_-5ClBH",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "NbxuB5BCner3IhYEVk_NgV0oLtuf-_Hn8J4_pz_-5ClBH",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "e_k6NfV-Q64lLw7fo_cyd737snDxFBQ4uRLVLhrKe1s",
    "code_challenge_method": "S256",
    "nonce": "NbxuB5BCner3IhYEVk_NgV0oLtuf-_Hn8J4_pz_-5ClBH"
  }
}
2020-01-19 13:30:10.533 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:10.533 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:10.542 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****0a60"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000004B",
  "TimeStamp": "2020-01-19T12:30:10Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:10.543 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "NbxuB5BCner3IhYEVk_NgV0oLtuf-_Hn8J4_pz_-5ClBH",
  "Scope": "openid profile api"
}
2020-01-19 13:30:11.008 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:11.009 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:11.009 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:11.009 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:11.009 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:11.010 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:11.010 +01:00 [DBG] Start discovery request
2020-01-19 13:30:11.046 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:11.047 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:11.047 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:11.048 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:11.048 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:11.048 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:11.048 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:11.089 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:11.090 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:11.090 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:11.091 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:11.091 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:11.092 +01:00 [DBG] Start authorize request
2020-01-19 13:30:11.092 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:11.092 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:11.093 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:11.094 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:11.095 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "448jqfjChYuC5_uEdEC2YwLd_gUdYCgRSYmnNB1n7TzRj",
  "Nonce": "448jqfjChYuC5_uEdEC2YwLd_gUdYCgRSYmnNB1n7TzRj",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "448jqfjChYuC5_uEdEC2YwLd_gUdYCgRSYmnNB1n7TzRj",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "xgd2R7hKcNQ3q_7GE2dQx3luY9ipvGMrYjYGlo_Pu8A",
    "code_challenge_method": "S256",
    "nonce": "448jqfjChYuC5_uEdEC2YwLd_gUdYCgRSYmnNB1n7TzRj"
  }
}
2020-01-19 13:30:11.096 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:11.096 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:11.106 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****90bf"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000004C",
  "TimeStamp": "2020-01-19T12:30:11Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:11.108 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "448jqfjChYuC5_uEdEC2YwLd_gUdYCgRSYmnNB1n7TzRj",
  "Scope": "openid profile api"
}
2020-01-19 13:30:11.521 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:11.522 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:11.522 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:11.522 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:11.523 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:11.523 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:11.523 +01:00 [DBG] Start discovery request
2020-01-19 13:30:11.566 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:11.567 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:11.567 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:11.567 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:11.567 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:11.568 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:11.568 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:11.613 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:11.613 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:11.614 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:11.614 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:11.614 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:11.615 +01:00 [DBG] Start authorize request
2020-01-19 13:30:11.615 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:11.615 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:11.616 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:11.616 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:11.616 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "6Bk2vU71mszDVonc6wAdsjM-ZVLn5Ivkny6_FJFE59sca",
  "Nonce": "6Bk2vU71mszDVonc6wAdsjM-ZVLn5Ivkny6_FJFE59sca",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "6Bk2vU71mszDVonc6wAdsjM-ZVLn5Ivkny6_FJFE59sca",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "9-7AGjRyiQOJG6DaRWMSPI_GWQq5lW4vKPq8-mpAK6o",
    "code_challenge_method": "S256",
    "nonce": "6Bk2vU71mszDVonc6wAdsjM-ZVLn5Ivkny6_FJFE59sca"
  }
}
2020-01-19 13:30:11.618 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:11.620 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:11.631 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****877d"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000004D",
  "TimeStamp": "2020-01-19T12:30:11Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:11.639 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "6Bk2vU71mszDVonc6wAdsjM-ZVLn5Ivkny6_FJFE59sca",
  "Scope": "openid profile api"
}
2020-01-19 13:30:12.081 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:12.082 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:12.082 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:12.082 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:12.083 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:12.083 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:12.083 +01:00 [DBG] Start discovery request
2020-01-19 13:30:12.126 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:12.126 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:12.127 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:12.127 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:12.128 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:12.128 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:12.129 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:12.165 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:12.167 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:12.167 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:12.168 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:12.168 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:12.169 +01:00 [DBG] Start authorize request
2020-01-19 13:30:12.169 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:12.169 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:12.170 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:12.170 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:12.171 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "QpL3JA04U7V7JYbvA9KpUprXqAqAgIKMFQcibZn7Ul5hv",
  "Nonce": "QpL3JA04U7V7JYbvA9KpUprXqAqAgIKMFQcibZn7Ul5hv",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "QpL3JA04U7V7JYbvA9KpUprXqAqAgIKMFQcibZn7Ul5hv",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "BDXXNgmu687OjYXFGHxOJaLzf-aRlliOlUlQOIo4HRM",
    "code_challenge_method": "S256",
    "nonce": "QpL3JA04U7V7JYbvA9KpUprXqAqAgIKMFQcibZn7Ul5hv"
  }
}
2020-01-19 13:30:12.171 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:12.171 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:12.180 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****dd25"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000004E",
  "TimeStamp": "2020-01-19T12:30:12Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:12.180 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "QpL3JA04U7V7JYbvA9KpUprXqAqAgIKMFQcibZn7Ul5hv",
  "Scope": "openid profile api"
}
2020-01-19 13:30:12.664 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:12.665 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:12.665 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:12.665 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:12.666 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:12.666 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:12.666 +01:00 [DBG] Start discovery request
2020-01-19 13:30:12.706 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:12.707 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:12.707 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:12.707 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:12.708 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:12.708 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:12.708 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:12.745 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:12.747 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:12.747 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:12.748 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:12.748 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:12.749 +01:00 [DBG] Start authorize request
2020-01-19 13:30:12.749 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:12.749 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:12.750 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:12.750 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:12.751 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "Q8IQYaTt-cV1myTc52IVWWQHqvPG6Cf-utx7wYeBL_pRy",
  "Nonce": "Q8IQYaTt-cV1myTc52IVWWQHqvPG6Cf-utx7wYeBL_pRy",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "Q8IQYaTt-cV1myTc52IVWWQHqvPG6Cf-utx7wYeBL_pRy",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "FWGDFfPiQ3hbeF4YByjlr6ZO2bw_v0myjkj6LSmIeUk",
    "code_challenge_method": "S256",
    "nonce": "Q8IQYaTt-cV1myTc52IVWWQHqvPG6Cf-utx7wYeBL_pRy"
  }
}
2020-01-19 13:30:12.752 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:12.752 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:12.764 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****5300"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000004F",
  "TimeStamp": "2020-01-19T12:30:12Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:12.768 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "Q8IQYaTt-cV1myTc52IVWWQHqvPG6Cf-utx7wYeBL_pRy",
  "Scope": "openid profile api"
}
2020-01-19 13:30:13.291 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:13.292 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:13.293 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:13.293 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:13.294 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:13.294 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:13.294 +01:00 [DBG] Start discovery request
2020-01-19 13:30:13.332 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:13.332 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:13.332 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:13.333 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:13.333 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:13.333 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:13.334 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:13.376 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:13.378 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:13.379 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:13.379 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:13.380 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:13.383 +01:00 [DBG] Start authorize request
2020-01-19 13:30:13.383 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:13.385 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:13.407 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:13.416 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:13.417 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "v4IDJomZvCOBxQ2uCCptm30UYYYW42MeUcB8oTk8WI49g",
  "Nonce": "v4IDJomZvCOBxQ2uCCptm30UYYYW42MeUcB8oTk8WI49g",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "v4IDJomZvCOBxQ2uCCptm30UYYYW42MeUcB8oTk8WI49g",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "eb1i8hB9xV2N0-DJPtmpresKOL4DEuFIElfa37BZacw",
    "code_challenge_method": "S256",
    "nonce": "v4IDJomZvCOBxQ2uCCptm30UYYYW42MeUcB8oTk8WI49g"
  }
}
2020-01-19 13:30:13.418 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:13.418 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:13.428 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****e1ba"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000050",
  "TimeStamp": "2020-01-19T12:30:13Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:13.436 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "v4IDJomZvCOBxQ2uCCptm30UYYYW42MeUcB8oTk8WI49g",
  "Scope": "openid profile api"
}
2020-01-19 13:30:13.871 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:13.871 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:13.871 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:13.872 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:13.872 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:13.872 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:13.872 +01:00 [DBG] Start discovery request
2020-01-19 13:30:13.915 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:13.916 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:13.920 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:13.920 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:13.921 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:13.921 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:13.921 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:13.958 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:13.959 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:13.960 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:13.961 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:13.961 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:13.961 +01:00 [DBG] Start authorize request
2020-01-19 13:30:13.962 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:13.962 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:13.962 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:13.962 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:13.963 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "zFUgU0wZT647wESuz5dt1RZRS3K0E_udPNBdgSCZIY_Hu",
  "Nonce": "zFUgU0wZT647wESuz5dt1RZRS3K0E_udPNBdgSCZIY_Hu",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "zFUgU0wZT647wESuz5dt1RZRS3K0E_udPNBdgSCZIY_Hu",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "31P9sx25Yp_om9ZeNeBqOx-4mHsZBKVGvXDeC1Hn3mE",
    "code_challenge_method": "S256",
    "nonce": "zFUgU0wZT647wESuz5dt1RZRS3K0E_udPNBdgSCZIY_Hu"
  }
}
2020-01-19 13:30:13.964 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:13.964 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:13.973 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****245b"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000051",
  "TimeStamp": "2020-01-19T12:30:13Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:13.974 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "zFUgU0wZT647wESuz5dt1RZRS3K0E_udPNBdgSCZIY_Hu",
  "Scope": "openid profile api"
}
2020-01-19 13:30:14.396 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:14.396 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:14.396 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:14.397 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:14.397 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:14.397 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:14.398 +01:00 [DBG] Start discovery request
2020-01-19 13:30:14.458 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:14.463 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:14.464 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:14.464 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:14.464 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:14.465 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:14.465 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:14.536 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:14.537 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:14.537 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:14.538 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:14.538 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:14.538 +01:00 [DBG] Start authorize request
2020-01-19 13:30:14.538 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:14.539 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:14.539 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:14.539 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:14.539 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "fRgEb207vUnDWrjCLUJUtkm4S37UWMFNrsF3B4PALfM9-",
  "Nonce": "fRgEb207vUnDWrjCLUJUtkm4S37UWMFNrsF3B4PALfM9-",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "fRgEb207vUnDWrjCLUJUtkm4S37UWMFNrsF3B4PALfM9-",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "Wt9p7sX9Jsmr4-8zS9fxn6Yhv8OWIg6SgArt3aRkg4I",
    "code_challenge_method": "S256",
    "nonce": "fRgEb207vUnDWrjCLUJUtkm4S37UWMFNrsF3B4PALfM9-"
  }
}
2020-01-19 13:30:14.540 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:14.540 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:14.550 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****9305"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000052",
  "TimeStamp": "2020-01-19T12:30:14Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:14.561 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "fRgEb207vUnDWrjCLUJUtkm4S37UWMFNrsF3B4PALfM9-",
  "Scope": "openid profile api"
}
2020-01-19 13:30:14.978 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:14.979 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:14.979 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:14.979 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:14.980 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:14.980 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:14.980 +01:00 [DBG] Start discovery request
2020-01-19 13:30:15.025 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:15.025 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:15.026 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:15.026 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:15.026 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:15.026 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:15.027 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:15.059 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:15.064 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:15.064 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:15.065 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:15.065 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:15.066 +01:00 [DBG] Start authorize request
2020-01-19 13:30:15.066 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:15.066 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:15.066 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:15.067 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:15.067 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "eBt8bHb_gfjtyEpcJZDnFRi6LwDuUwxhSZquMgmYyubWx",
  "Nonce": "eBt8bHb_gfjtyEpcJZDnFRi6LwDuUwxhSZquMgmYyubWx",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "eBt8bHb_gfjtyEpcJZDnFRi6LwDuUwxhSZquMgmYyubWx",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "_kRVYTXAk1DePV_Z5ooCuzeu1DllKzWU26IEYZNzRAc",
    "code_challenge_method": "S256",
    "nonce": "eBt8bHb_gfjtyEpcJZDnFRi6LwDuUwxhSZquMgmYyubWx"
  }
}
2020-01-19 13:30:15.068 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:15.068 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:15.078 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d99f"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000053",
  "TimeStamp": "2020-01-19T12:30:15Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:15.079 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "eBt8bHb_gfjtyEpcJZDnFRi6LwDuUwxhSZquMgmYyubWx",
  "Scope": "openid profile api"
}
2020-01-19 13:30:15.551 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:15.552 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:15.552 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:15.552 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:15.552 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:15.553 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:15.553 +01:00 [DBG] Start discovery request
2020-01-19 13:30:15.593 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:15.593 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:15.594 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:15.594 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:15.594 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:15.595 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:15.595 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:15.625 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:15.626 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:15.626 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:15.627 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:15.629 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:15.630 +01:00 [DBG] Start authorize request
2020-01-19 13:30:15.633 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:15.634 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:15.634 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:15.634 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:15.635 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "BgKi6LBlW2WdqYz6lyO8O91rz0j46plehn8AOIak3Ctf_",
  "Nonce": "BgKi6LBlW2WdqYz6lyO8O91rz0j46plehn8AOIak3Ctf_",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "BgKi6LBlW2WdqYz6lyO8O91rz0j46plehn8AOIak3Ctf_",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "vs6l0osjpnMeQ7f20OP5yhDGFwh1BP03C_BG6pFZ8QI",
    "code_challenge_method": "S256",
    "nonce": "BgKi6LBlW2WdqYz6lyO8O91rz0j46plehn8AOIak3Ctf_"
  }
}
2020-01-19 13:30:15.637 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:15.637 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:15.648 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****c2b7"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000054",
  "TimeStamp": "2020-01-19T12:30:15Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:15.649 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "BgKi6LBlW2WdqYz6lyO8O91rz0j46plehn8AOIak3Ctf_",
  "Scope": "openid profile api"
}
2020-01-19 13:30:16.150 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:16.151 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:16.151 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:16.152 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:16.152 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:16.152 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:16.152 +01:00 [DBG] Start discovery request
2020-01-19 13:30:16.193 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:16.194 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:16.194 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:16.194 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:16.195 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:16.195 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:16.195 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:16.237 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:16.238 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:16.239 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:16.241 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:16.245 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:16.245 +01:00 [DBG] Start authorize request
2020-01-19 13:30:16.245 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:16.245 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:16.246 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:16.246 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:16.246 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "rQWal0mTcHMXkEelyRC6HRBvqvsJ9m8VHcWqPJlLPoY_U",
  "Nonce": "rQWal0mTcHMXkEelyRC6HRBvqvsJ9m8VHcWqPJlLPoY_U",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "rQWal0mTcHMXkEelyRC6HRBvqvsJ9m8VHcWqPJlLPoY_U",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "VsWMFMa3uC_PK2NEgWNOWHNYHSSA8ESNeNEgBzMT4KU",
    "code_challenge_method": "S256",
    "nonce": "rQWal0mTcHMXkEelyRC6HRBvqvsJ9m8VHcWqPJlLPoY_U"
  }
}
2020-01-19 13:30:16.247 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:16.247 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:16.255 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****c4a3"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000055",
  "TimeStamp": "2020-01-19T12:30:16Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:16.257 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "rQWal0mTcHMXkEelyRC6HRBvqvsJ9m8VHcWqPJlLPoY_U",
  "Scope": "openid profile api"
}
2020-01-19 13:30:16.774 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:16.774 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:16.775 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:16.775 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:16.775 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:16.775 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:16.776 +01:00 [DBG] Start discovery request
2020-01-19 13:30:16.825 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:16.826 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:16.827 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:16.827 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:16.827 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:16.827 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:16.828 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:16.885 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:16.886 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:16.886 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:16.887 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:16.888 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:16.888 +01:00 [DBG] Start authorize request
2020-01-19 13:30:16.888 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:16.889 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:16.889 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:16.890 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:16.890 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "bTAvzTqgYYMYaPegM5rOrHcakYFX2Gl_cma_wrKdqSiOv",
  "Nonce": "bTAvzTqgYYMYaPegM5rOrHcakYFX2Gl_cma_wrKdqSiOv",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "bTAvzTqgYYMYaPegM5rOrHcakYFX2Gl_cma_wrKdqSiOv",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "ru0FFCvGn7xUoX_p79rCIlDD86LC9em1B3vMrnG8syw",
    "code_challenge_method": "S256",
    "nonce": "bTAvzTqgYYMYaPegM5rOrHcakYFX2Gl_cma_wrKdqSiOv"
  }
}
2020-01-19 13:30:16.891 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:16.893 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:16.905 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****f6f0"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000056",
  "TimeStamp": "2020-01-19T12:30:16Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:16.905 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "bTAvzTqgYYMYaPegM5rOrHcakYFX2Gl_cma_wrKdqSiOv",
  "Scope": "openid profile api"
}
2020-01-19 13:30:17.346 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:17.347 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:17.347 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:17.347 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:17.348 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:17.348 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:17.348 +01:00 [DBG] Start discovery request
2020-01-19 13:30:17.398 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:17.398 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:17.399 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:17.399 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:17.399 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:17.400 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:17.400 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:17.449 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:17.450 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:17.450 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:17.451 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:17.452 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:17.452 +01:00 [DBG] Start authorize request
2020-01-19 13:30:17.452 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:17.453 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:17.453 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:17.453 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:17.454 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "5BSG3iBdZz_ymeFD3xRbrrQp8aSA0yM5xlR6QFkAN-UKA",
  "Nonce": "5BSG3iBdZz_ymeFD3xRbrrQp8aSA0yM5xlR6QFkAN-UKA",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "5BSG3iBdZz_ymeFD3xRbrrQp8aSA0yM5xlR6QFkAN-UKA",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "BIfQN3Z3k8H5mUITJSOmWMpzQkhHIFY5ccQaZqPH5K8",
    "code_challenge_method": "S256",
    "nonce": "5BSG3iBdZz_ymeFD3xRbrrQp8aSA0yM5xlR6QFkAN-UKA"
  }
}
2020-01-19 13:30:17.456 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:17.456 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:17.466 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****f44e"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000057",
  "TimeStamp": "2020-01-19T12:30:17Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:17.467 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "5BSG3iBdZz_ymeFD3xRbrrQp8aSA0yM5xlR6QFkAN-UKA",
  "Scope": "openid profile api"
}
2020-01-19 13:30:17.903 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:17.903 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:17.904 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:17.904 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:17.904 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:17.905 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:17.905 +01:00 [DBG] Start discovery request
2020-01-19 13:30:17.962 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:17.963 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:17.966 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:17.967 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:17.967 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:17.967 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:17.968 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:18.022 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:18.023 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:18.026 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:18.030 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:18.030 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:18.031 +01:00 [DBG] Start authorize request
2020-01-19 13:30:18.031 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:18.031 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:18.031 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:18.032 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:18.033 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "QZAFIgD5wNxHypvtjTM5gyL42aeUjD-Sn6IG--lYIXCDD",
  "Nonce": "QZAFIgD5wNxHypvtjTM5gyL42aeUjD-Sn6IG--lYIXCDD",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "QZAFIgD5wNxHypvtjTM5gyL42aeUjD-Sn6IG--lYIXCDD",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "67fG-Kk1gQSZOMr55OlW1ryx3K-9GhGNEgsMH8E58RM",
    "code_challenge_method": "S256",
    "nonce": "QZAFIgD5wNxHypvtjTM5gyL42aeUjD-Sn6IG--lYIXCDD"
  }
}
2020-01-19 13:30:18.034 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:18.035 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:18.048 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****02c4"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000058",
  "TimeStamp": "2020-01-19T12:30:18Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:18.048 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "QZAFIgD5wNxHypvtjTM5gyL42aeUjD-Sn6IG--lYIXCDD",
  "Scope": "openid profile api"
}
2020-01-19 13:30:18.572 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:18.573 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:18.575 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:18.576 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:18.580 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:18.581 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:18.581 +01:00 [DBG] Start discovery request
2020-01-19 13:30:18.622 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:18.624 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:18.624 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:18.625 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:18.625 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:18.625 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:18.626 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:18.685 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:18.685 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:18.686 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:18.686 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:18.686 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:18.687 +01:00 [DBG] Start authorize request
2020-01-19 13:30:18.687 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:18.687 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:18.687 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:18.688 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:18.688 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "VnwPHS8dJ8UvT4Lf3_mbwikKsxMOUDUfvaBaFLquwoyXQ",
  "Nonce": "VnwPHS8dJ8UvT4Lf3_mbwikKsxMOUDUfvaBaFLquwoyXQ",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "VnwPHS8dJ8UvT4Lf3_mbwikKsxMOUDUfvaBaFLquwoyXQ",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "KeXTXMBm_AlaifD-96dVMvH6fzM1iZ9LFebt3x1hJmE",
    "code_challenge_method": "S256",
    "nonce": "VnwPHS8dJ8UvT4Lf3_mbwikKsxMOUDUfvaBaFLquwoyXQ"
  }
}
2020-01-19 13:30:18.689 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:18.690 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:18.701 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****9a7d"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000059",
  "TimeStamp": "2020-01-19T12:30:18Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:18.702 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "VnwPHS8dJ8UvT4Lf3_mbwikKsxMOUDUfvaBaFLquwoyXQ",
  "Scope": "openid profile api"
}
2020-01-19 13:30:19.147 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:19.147 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:19.148 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:19.148 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:19.148 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:19.148 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:19.149 +01:00 [DBG] Start discovery request
2020-01-19 13:30:19.199 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:19.204 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:19.204 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:19.204 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:19.204 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:19.205 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:19.205 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:19.254 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:19.255 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:19.256 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:19.256 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:19.256 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:19.257 +01:00 [DBG] Start authorize request
2020-01-19 13:30:19.257 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:19.257 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:19.258 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:19.260 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:19.261 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "8lx314efo03UGkLspV1CilAU53_l66pdk5VLRc_tvZnAv",
  "Nonce": "8lx314efo03UGkLspV1CilAU53_l66pdk5VLRc_tvZnAv",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "8lx314efo03UGkLspV1CilAU53_l66pdk5VLRc_tvZnAv",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "E5MRJZLool_S-4h86TIrsXYvq3gRkZO5anzmMkc5dYQ",
    "code_challenge_method": "S256",
    "nonce": "8lx314efo03UGkLspV1CilAU53_l66pdk5VLRc_tvZnAv"
  }
}
2020-01-19 13:30:19.268 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:19.269 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:19.276 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****df18"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000005A",
  "TimeStamp": "2020-01-19T12:30:19Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:19.277 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "8lx314efo03UGkLspV1CilAU53_l66pdk5VLRc_tvZnAv",
  "Scope": "openid profile api"
}
2020-01-19 13:30:19.732 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:19.732 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:19.732 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:19.733 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:19.733 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:19.733 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:19.734 +01:00 [DBG] Start discovery request
2020-01-19 13:30:19.796 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:19.797 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:19.797 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:19.798 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:19.799 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:19.799 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:19.800 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:19.865 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:19.865 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:19.866 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:19.866 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:19.867 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:19.868 +01:00 [DBG] Start authorize request
2020-01-19 13:30:19.869 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:19.869 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:19.869 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:19.870 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:19.871 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "ZKa-X35Sio5pRoNa_7Bj3QrYBKPIv4Y1wMq4f48X66Zj0",
  "Nonce": "ZKa-X35Sio5pRoNa_7Bj3QrYBKPIv4Y1wMq4f48X66Zj0",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "ZKa-X35Sio5pRoNa_7Bj3QrYBKPIv4Y1wMq4f48X66Zj0",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "l5fxLfFtUlhOffHjCTXiRrxVzPbHhUfogEjNRnvbYuE",
    "code_challenge_method": "S256",
    "nonce": "ZKa-X35Sio5pRoNa_7Bj3QrYBKPIv4Y1wMq4f48X66Zj0"
  }
}
2020-01-19 13:30:19.871 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:19.872 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:19.882 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****b05c"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000005B",
  "TimeStamp": "2020-01-19T12:30:19Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:19.883 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "ZKa-X35Sio5pRoNa_7Bj3QrYBKPIv4Y1wMq4f48X66Zj0",
  "Scope": "openid profile api"
}
2020-01-19 13:30:20.370 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:20.370 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:20.370 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:20.371 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:20.371 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:20.371 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:20.371 +01:00 [DBG] Start discovery request
2020-01-19 13:30:20.417 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:20.417 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:20.418 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:20.419 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:20.419 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:20.420 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:20.420 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:20.467 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:20.467 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:20.467 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:20.468 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:20.468 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:20.469 +01:00 [DBG] Start authorize request
2020-01-19 13:30:20.469 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:20.469 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:20.469 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:20.470 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:20.470 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "hKcT7cR7aLo_uC6YAbsuh8Ia8RMT8-bYY5ja_IhmfcCB9",
  "Nonce": "hKcT7cR7aLo_uC6YAbsuh8Ia8RMT8-bYY5ja_IhmfcCB9",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "hKcT7cR7aLo_uC6YAbsuh8Ia8RMT8-bYY5ja_IhmfcCB9",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "azDzSU82sz9bWUbceleIi1X_zSZazWLAuk98NFq10dM",
    "code_challenge_method": "S256",
    "nonce": "hKcT7cR7aLo_uC6YAbsuh8Ia8RMT8-bYY5ja_IhmfcCB9"
  }
}
2020-01-19 13:30:20.471 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:20.472 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:20.482 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****3ce7"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000005C",
  "TimeStamp": "2020-01-19T12:30:20Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:20.602 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "hKcT7cR7aLo_uC6YAbsuh8Ia8RMT8-bYY5ja_IhmfcCB9",
  "Scope": "openid profile api"
}
2020-01-19 13:30:21.267 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:21.267 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:21.268 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:21.268 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:21.269 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:21.269 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:21.269 +01:00 [DBG] Start discovery request
2020-01-19 13:30:21.315 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:21.315 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:21.315 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:21.316 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:21.316 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:21.316 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:21.317 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:21.376 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:21.377 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:21.380 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:21.381 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:21.384 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:21.387 +01:00 [DBG] Start authorize request
2020-01-19 13:30:21.387 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:21.388 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:21.388 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:21.389 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:21.389 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "RS2sIZevzE_qj71R9Qd4YnfT92LYIc8qpAFm6fPIxdBrZ",
  "Nonce": "RS2sIZevzE_qj71R9Qd4YnfT92LYIc8qpAFm6fPIxdBrZ",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "RS2sIZevzE_qj71R9Qd4YnfT92LYIc8qpAFm6fPIxdBrZ",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "gfv23geYB-OKmj5usJJZYwtuCRY4kLNR77jO3rv_Fo0",
    "code_challenge_method": "S256",
    "nonce": "RS2sIZevzE_qj71R9Qd4YnfT92LYIc8qpAFm6fPIxdBrZ"
  }
}
2020-01-19 13:30:21.390 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:21.390 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:21.401 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****423c"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000005D",
  "TimeStamp": "2020-01-19T12:30:21Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:21.402 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "RS2sIZevzE_qj71R9Qd4YnfT92LYIc8qpAFm6fPIxdBrZ",
  "Scope": "openid profile api"
}
2020-01-19 13:30:21.849 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:21.850 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:21.850 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:21.850 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:21.850 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:21.851 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:21.851 +01:00 [DBG] Start discovery request
2020-01-19 13:30:21.901 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:21.903 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:21.903 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:21.904 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:21.904 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:21.905 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:21.905 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:21.972 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:21.975 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:21.976 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:21.976 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:21.981 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:21.981 +01:00 [DBG] Start authorize request
2020-01-19 13:30:21.982 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:21.982 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:21.983 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:21.983 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:21.986 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "HOX4EoakbWcWF4Ei-mr04-A_thk-EBTDjU_FgLQtQMsMS",
  "Nonce": "HOX4EoakbWcWF4Ei-mr04-A_thk-EBTDjU_FgLQtQMsMS",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "HOX4EoakbWcWF4Ei-mr04-A_thk-EBTDjU_FgLQtQMsMS",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "TTuJXKuNEU3yXhOQySWMPmuqRwVvrAUhzhQ5pHwUz4U",
    "code_challenge_method": "S256",
    "nonce": "HOX4EoakbWcWF4Ei-mr04-A_thk-EBTDjU_FgLQtQMsMS"
  }
}
2020-01-19 13:30:21.988 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:21.988 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:21.999 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****3777"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000005E",
  "TimeStamp": "2020-01-19T12:30:21Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:22.000 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "HOX4EoakbWcWF4Ei-mr04-A_thk-EBTDjU_FgLQtQMsMS",
  "Scope": "openid profile api"
}
2020-01-19 13:30:22.477 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:22.478 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:22.514 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:22.551 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:22.639 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:22.664 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:22.666 +01:00 [DBG] Start discovery request
2020-01-19 13:30:22.682 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:22.683 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:22.683 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:22.683 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:22.683 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:22.684 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:22.684 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:22.702 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:22.704 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:22.704 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:22.704 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:22.705 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:22.705 +01:00 [DBG] Start authorize request
2020-01-19 13:30:22.705 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:22.706 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:22.706 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:22.706 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:22.706 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "OqwBWD2t8RHEzc5XLJZpETLbTNN3UccM2H7C_EGWdPR_c",
  "Nonce": "OqwBWD2t8RHEzc5XLJZpETLbTNN3UccM2H7C_EGWdPR_c",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "OqwBWD2t8RHEzc5XLJZpETLbTNN3UccM2H7C_EGWdPR_c",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "8oi8YAHvoUlYTOptBMtAcAJwIcW98FKDCf0423BpQws",
    "code_challenge_method": "S256",
    "nonce": "OqwBWD2t8RHEzc5XLJZpETLbTNN3UccM2H7C_EGWdPR_c"
  }
}
2020-01-19 13:30:22.707 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:22.707 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:22.714 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****5a3d"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000005F",
  "TimeStamp": "2020-01-19T12:30:22Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:22.723 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "OqwBWD2t8RHEzc5XLJZpETLbTNN3UccM2H7C_EGWdPR_c",
  "Scope": "openid profile api"
}
2020-01-19 13:30:23.178 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:23.179 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:23.179 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:23.179 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:23.179 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:23.180 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:23.180 +01:00 [DBG] Start discovery request
2020-01-19 13:30:23.225 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:23.226 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:23.226 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:23.226 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:23.227 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:23.227 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:23.227 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:23.272 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:23.273 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:23.273 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:23.274 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:23.274 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:23.274 +01:00 [DBG] Start authorize request
2020-01-19 13:30:23.274 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:23.275 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:23.275 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:23.275 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:23.276 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "vNJkAiOceckNB_NW2qVkBT65G2vf-jwA4LVYGwUxRg_mI",
  "Nonce": "vNJkAiOceckNB_NW2qVkBT65G2vf-jwA4LVYGwUxRg_mI",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "vNJkAiOceckNB_NW2qVkBT65G2vf-jwA4LVYGwUxRg_mI",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "37HKwnGfypwKFsI6oOPzONFfi6gzo0RJZcJ8ad4G6Iw",
    "code_challenge_method": "S256",
    "nonce": "vNJkAiOceckNB_NW2qVkBT65G2vf-jwA4LVYGwUxRg_mI"
  }
}
2020-01-19 13:30:23.276 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:23.277 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:23.286 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d356"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000060",
  "TimeStamp": "2020-01-19T12:30:23Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:23.297 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "vNJkAiOceckNB_NW2qVkBT65G2vf-jwA4LVYGwUxRg_mI",
  "Scope": "openid profile api"
}
2020-01-19 13:30:23.738 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:23.738 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:23.739 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:23.739 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:23.739 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:23.739 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:23.740 +01:00 [DBG] Start discovery request
2020-01-19 13:30:23.792 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:23.792 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:23.793 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:23.793 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:23.794 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:23.794 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:23.795 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:23.839 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:23.839 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:23.840 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:23.841 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:23.841 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:23.841 +01:00 [DBG] Start authorize request
2020-01-19 13:30:23.842 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:23.842 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:23.842 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:23.843 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:23.843 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "avAzMo-enWZQ_WbxZ-E1_MZ_9EwCzJlNDloCn-QgW59oi",
  "Nonce": "avAzMo-enWZQ_WbxZ-E1_MZ_9EwCzJlNDloCn-QgW59oi",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "avAzMo-enWZQ_WbxZ-E1_MZ_9EwCzJlNDloCn-QgW59oi",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "MBpzGEZj5fd6aTKPGiZCa1fzwp298CIrcrzJi7M0JDE",
    "code_challenge_method": "S256",
    "nonce": "avAzMo-enWZQ_WbxZ-E1_MZ_9EwCzJlNDloCn-QgW59oi"
  }
}
2020-01-19 13:30:23.848 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:23.848 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:23.861 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****4c5d"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000061",
  "TimeStamp": "2020-01-19T12:30:23Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:23.862 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "avAzMo-enWZQ_WbxZ-E1_MZ_9EwCzJlNDloCn-QgW59oi",
  "Scope": "openid profile api"
}
2020-01-19 13:30:24.374 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:24.375 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:24.375 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:24.376 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:24.376 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:24.376 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:24.376 +01:00 [DBG] Start discovery request
2020-01-19 13:30:24.432 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:24.432 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:24.433 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:24.433 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:24.433 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:24.433 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:24.434 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:24.472 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:24.472 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:24.473 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:24.473 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:24.473 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:24.474 +01:00 [DBG] Start authorize request
2020-01-19 13:30:24.474 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:24.474 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:24.474 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:24.475 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:24.475 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "Q93g8PmsQreC_IesBgFy65ap0eTspPmvsWW-bLjRtMjUU",
  "Nonce": "Q93g8PmsQreC_IesBgFy65ap0eTspPmvsWW-bLjRtMjUU",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "Q93g8PmsQreC_IesBgFy65ap0eTspPmvsWW-bLjRtMjUU",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "cs9-eRA0kAdCrqBbJVULYcdrCYn4JSO9zebBbdeBMWg",
    "code_challenge_method": "S256",
    "nonce": "Q93g8PmsQreC_IesBgFy65ap0eTspPmvsWW-bLjRtMjUU"
  }
}
2020-01-19 13:30:24.476 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:24.476 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:24.484 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****b09f"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000062",
  "TimeStamp": "2020-01-19T12:30:24Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:24.486 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "Q93g8PmsQreC_IesBgFy65ap0eTspPmvsWW-bLjRtMjUU",
  "Scope": "openid profile api"
}
2020-01-19 13:30:25.054 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:25.055 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:25.056 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:25.056 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:25.056 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:25.056 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:25.057 +01:00 [DBG] Start discovery request
2020-01-19 13:30:25.106 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:25.107 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:25.107 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:25.107 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:25.108 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:25.108 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:25.108 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:25.158 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:25.158 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:25.159 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:25.160 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:25.160 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:25.160 +01:00 [DBG] Start authorize request
2020-01-19 13:30:25.162 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:25.162 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:25.163 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:25.163 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:25.164 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "EBn0djGt5EnUmOXysaKKoi_fQ3k3xWv45ItNJBEwbxQVC",
  "Nonce": "EBn0djGt5EnUmOXysaKKoi_fQ3k3xWv45ItNJBEwbxQVC",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "EBn0djGt5EnUmOXysaKKoi_fQ3k3xWv45ItNJBEwbxQVC",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "7xEc430fYsPZnJnHnoMC4sKvwj8BVse185u6hO9pSlc",
    "code_challenge_method": "S256",
    "nonce": "EBn0djGt5EnUmOXysaKKoi_fQ3k3xWv45ItNJBEwbxQVC"
  }
}
2020-01-19 13:30:25.165 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:25.165 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:25.174 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****35f0"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000063",
  "TimeStamp": "2020-01-19T12:30:25Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:25.176 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "EBn0djGt5EnUmOXysaKKoi_fQ3k3xWv45ItNJBEwbxQVC",
  "Scope": "openid profile api"
}
2020-01-19 13:30:25.664 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:25.665 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:25.665 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:25.665 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:25.666 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:25.666 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:25.666 +01:00 [DBG] Start discovery request
2020-01-19 13:30:25.717 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:25.717 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:25.717 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:25.718 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:25.718 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:25.718 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:25.719 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:25.769 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:25.770 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:25.771 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:25.771 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:25.772 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:25.773 +01:00 [DBG] Start authorize request
2020-01-19 13:30:25.775 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:25.777 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:25.782 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:25.783 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:25.784 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "TmgS4X2FF24_0ENdasi4sFM6JVqzjtaprFU_JxKxitJI1",
  "Nonce": "TmgS4X2FF24_0ENdasi4sFM6JVqzjtaprFU_JxKxitJI1",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "TmgS4X2FF24_0ENdasi4sFM6JVqzjtaprFU_JxKxitJI1",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "wRIrzG9usv8dfeL_qLtyxLIDUjDTORp4cTjjD5tmHi0",
    "code_challenge_method": "S256",
    "nonce": "TmgS4X2FF24_0ENdasi4sFM6JVqzjtaprFU_JxKxitJI1"
  }
}
2020-01-19 13:30:25.784 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:25.784 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:25.795 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****792c"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000064",
  "TimeStamp": "2020-01-19T12:30:25Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:25.796 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "TmgS4X2FF24_0ENdasi4sFM6JVqzjtaprFU_JxKxitJI1",
  "Scope": "openid profile api"
}
2020-01-19 13:30:26.240 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:26.241 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:26.241 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:26.241 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:26.242 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:26.242 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:26.242 +01:00 [DBG] Start discovery request
2020-01-19 13:30:26.289 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:26.290 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:26.290 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:26.290 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:26.291 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:26.291 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:26.291 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:26.347 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:26.348 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:26.349 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:26.349 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:26.350 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:26.350 +01:00 [DBG] Start authorize request
2020-01-19 13:30:26.350 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:26.351 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:26.353 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:26.354 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:26.355 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "4tNF1PD59rmVHzfXquKkOvUJY4tQ0wAxRJ8U08GlFn8f2",
  "Nonce": "4tNF1PD59rmVHzfXquKkOvUJY4tQ0wAxRJ8U08GlFn8f2",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "4tNF1PD59rmVHzfXquKkOvUJY4tQ0wAxRJ8U08GlFn8f2",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "y7F4C-p899Fc6Ewu1ieHME-TomjzD5EhgGFAVXcHdB8",
    "code_challenge_method": "S256",
    "nonce": "4tNF1PD59rmVHzfXquKkOvUJY4tQ0wAxRJ8U08GlFn8f2"
  }
}
2020-01-19 13:30:26.361 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:26.361 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:26.372 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****550c"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000065",
  "TimeStamp": "2020-01-19T12:30:26Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:26.373 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "4tNF1PD59rmVHzfXquKkOvUJY4tQ0wAxRJ8U08GlFn8f2",
  "Scope": "openid profile api"
}
2020-01-19 13:30:26.877 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:26.877 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:26.877 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:26.877 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:26.878 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:26.878 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:26.878 +01:00 [DBG] Start discovery request
2020-01-19 13:30:26.924 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:26.925 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:26.925 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:26.925 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:26.926 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:26.926 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:26.926 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:26.973 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:26.974 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:26.975 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:26.975 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:26.976 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:26.976 +01:00 [DBG] Start authorize request
2020-01-19 13:30:26.976 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:26.976 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:26.977 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:26.977 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:26.977 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "4rvSKAF0raYN3f8nnxnnootroj4hJj0ESrQDolNMiOOkZ",
  "Nonce": "4rvSKAF0raYN3f8nnxnnootroj4hJj0ESrQDolNMiOOkZ",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "4rvSKAF0raYN3f8nnxnnootroj4hJj0ESrQDolNMiOOkZ",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "NgFn4Ym7CEyMi4UX12qn9-twlxaNnMdHkbogW-Wm6tE",
    "code_challenge_method": "S256",
    "nonce": "4rvSKAF0raYN3f8nnxnnootroj4hJj0ESrQDolNMiOOkZ"
  }
}
2020-01-19 13:30:26.978 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:26.978 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:26.989 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****7f2d"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000066",
  "TimeStamp": "2020-01-19T12:30:26Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:26.992 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "4rvSKAF0raYN3f8nnxnnootroj4hJj0ESrQDolNMiOOkZ",
  "Scope": "openid profile api"
}
2020-01-19 13:30:27.458 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:27.458 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:27.458 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:27.459 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:27.459 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:27.459 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:27.459 +01:00 [DBG] Start discovery request
2020-01-19 13:30:27.510 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:27.511 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:27.511 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:27.511 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:27.512 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:27.512 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:27.512 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:27.585 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:27.586 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:27.586 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:27.587 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:27.588 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:27.589 +01:00 [DBG] Start authorize request
2020-01-19 13:30:27.589 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:27.589 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:27.590 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:27.590 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:27.590 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "7gtYT1ZhO_LjzaQM_b2U_U167B8btdNt27qtpeT3PzODF",
  "Nonce": "7gtYT1ZhO_LjzaQM_b2U_U167B8btdNt27qtpeT3PzODF",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "7gtYT1ZhO_LjzaQM_b2U_U167B8btdNt27qtpeT3PzODF",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "Bq6A7Dy7Q1Q0tHt9Je5oDQqOsASio1z0dskI9x38UAc",
    "code_challenge_method": "S256",
    "nonce": "7gtYT1ZhO_LjzaQM_b2U_U167B8btdNt27qtpeT3PzODF"
  }
}
2020-01-19 13:30:27.592 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:27.593 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:27.600 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****1c4a"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000067",
  "TimeStamp": "2020-01-19T12:30:27Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:27.610 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "7gtYT1ZhO_LjzaQM_b2U_U167B8btdNt27qtpeT3PzODF",
  "Scope": "openid profile api"
}
2020-01-19 13:30:28.038 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:28.039 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:28.039 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:28.039 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:28.040 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:28.040 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:28.040 +01:00 [DBG] Start discovery request
2020-01-19 13:30:28.091 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:28.094 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:28.095 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:28.096 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:28.096 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:28.096 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:28.097 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:28.136 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:28.138 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:28.138 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:28.139 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:28.139 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:28.140 +01:00 [DBG] Start authorize request
2020-01-19 13:30:28.140 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:28.141 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:28.141 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:28.142 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:28.143 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "cn3bxd63TFpSQUEPKv4y6QJm7SvLN4KNThIyauqojRSop",
  "Nonce": "cn3bxd63TFpSQUEPKv4y6QJm7SvLN4KNThIyauqojRSop",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "cn3bxd63TFpSQUEPKv4y6QJm7SvLN4KNThIyauqojRSop",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "frNMbyQqmtH0WsjC1aIooD10SKq0QJDia1l_3IlAGfg",
    "code_challenge_method": "S256",
    "nonce": "cn3bxd63TFpSQUEPKv4y6QJm7SvLN4KNThIyauqojRSop"
  }
}
2020-01-19 13:30:28.144 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:28.144 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:28.156 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****8415"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000068",
  "TimeStamp": "2020-01-19T12:30:28Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:28.163 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "cn3bxd63TFpSQUEPKv4y6QJm7SvLN4KNThIyauqojRSop",
  "Scope": "openid profile api"
}
2020-01-19 13:30:28.616 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:28.617 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:28.617 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:28.618 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:28.653 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:28.697 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:28.734 +01:00 [DBG] Start discovery request
2020-01-19 13:30:28.777 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:28.778 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:28.778 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:28.778 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:28.779 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:28.779 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:28.779 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:28.799 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:28.800 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:28.800 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:28.800 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:28.801 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:28.801 +01:00 [DBG] Start authorize request
2020-01-19 13:30:28.801 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:28.802 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:28.802 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:28.803 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:28.803 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "7SwsIWa1aJrzqfQ3S9rEJ-m39ydmyLSnjmxMVNwc4X2PZ",
  "Nonce": "7SwsIWa1aJrzqfQ3S9rEJ-m39ydmyLSnjmxMVNwc4X2PZ",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "7SwsIWa1aJrzqfQ3S9rEJ-m39ydmyLSnjmxMVNwc4X2PZ",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "Sx7oWnxfCouIvPSK7d0MvZQl9QH1Md3-njm8eScVbS4",
    "code_challenge_method": "S256",
    "nonce": "7SwsIWa1aJrzqfQ3S9rEJ-m39ydmyLSnjmxMVNwc4X2PZ"
  }
}
2020-01-19 13:30:28.805 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:28.805 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:28.814 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****6d2e"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000069",
  "TimeStamp": "2020-01-19T12:30:28Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:28.815 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "7SwsIWa1aJrzqfQ3S9rEJ-m39ydmyLSnjmxMVNwc4X2PZ",
  "Scope": "openid profile api"
}
2020-01-19 13:30:29.266 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:29.267 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:29.267 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:29.267 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:29.267 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:29.268 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:29.268 +01:00 [DBG] Start discovery request
2020-01-19 13:30:29.314 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:29.315 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:29.315 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:29.317 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:29.317 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:29.321 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:29.321 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:29.366 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:29.367 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:29.368 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:29.369 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:29.369 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:29.370 +01:00 [DBG] Start authorize request
2020-01-19 13:30:29.371 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:29.371 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:29.371 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:29.371 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:29.372 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "SL5sOW6_6DAeG1eLUxj0Iaw9bL-u599IldNapjpS82RJK",
  "Nonce": "SL5sOW6_6DAeG1eLUxj0Iaw9bL-u599IldNapjpS82RJK",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "SL5sOW6_6DAeG1eLUxj0Iaw9bL-u599IldNapjpS82RJK",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "GVUwtlL3u7gUZxZZo_bRLewUR1DzUuQFKd87P9rSQ7w",
    "code_challenge_method": "S256",
    "nonce": "SL5sOW6_6DAeG1eLUxj0Iaw9bL-u599IldNapjpS82RJK"
  }
}
2020-01-19 13:30:29.373 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:29.373 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:29.383 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****c826"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000006A",
  "TimeStamp": "2020-01-19T12:30:29Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:29.390 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "SL5sOW6_6DAeG1eLUxj0Iaw9bL-u599IldNapjpS82RJK",
  "Scope": "openid profile api"
}
2020-01-19 13:30:29.936 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:29.937 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:29.937 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:29.938 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:29.938 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:29.938 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:29.939 +01:00 [DBG] Start discovery request
2020-01-19 13:30:29.991 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:29.992 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:29.992 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:29.992 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:29.993 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:29.993 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:29.993 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:30.021 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:30.022 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:30.022 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:30.023 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:30.023 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:30.023 +01:00 [DBG] Start authorize request
2020-01-19 13:30:30.023 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:30.024 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:30.024 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:30.024 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:30.024 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "xXtTKXSca2i3tp6Kwxr6Aibg0PUvFDKVwvmLyh7dWFLu1",
  "Nonce": "xXtTKXSca2i3tp6Kwxr6Aibg0PUvFDKVwvmLyh7dWFLu1",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "xXtTKXSca2i3tp6Kwxr6Aibg0PUvFDKVwvmLyh7dWFLu1",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "a9mVjGrbdxUgESoN84WhHzU2HNMW7h_bnymzfVE5n04",
    "code_challenge_method": "S256",
    "nonce": "xXtTKXSca2i3tp6Kwxr6Aibg0PUvFDKVwvmLyh7dWFLu1"
  }
}
2020-01-19 13:30:30.026 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:30.026 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:30.037 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****0a20"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000006B",
  "TimeStamp": "2020-01-19T12:30:30Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:30.039 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "xXtTKXSca2i3tp6Kwxr6Aibg0PUvFDKVwvmLyh7dWFLu1",
  "Scope": "openid profile api"
}
2020-01-19 13:30:30.508 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:30.509 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:30.509 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:30.509 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:30.510 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:30.510 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:30.510 +01:00 [DBG] Start discovery request
2020-01-19 13:30:30.566 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:30.567 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:30.567 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:30.567 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:30.568 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:30.568 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:30.568 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:30.607 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:30.608 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:30.609 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:30.609 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:30.610 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:30.610 +01:00 [DBG] Start authorize request
2020-01-19 13:30:30.610 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:30.611 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:30.611 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:30.611 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:30.612 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "-F9skdE9t76YUd30-p8v6cBOFac0FR2P358f-U372ZquW",
  "Nonce": "-F9skdE9t76YUd30-p8v6cBOFac0FR2P358f-U372ZquW",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "-F9skdE9t76YUd30-p8v6cBOFac0FR2P358f-U372ZquW",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "tV2F0ZKOKRLA8YjszyriI3m5LrS5sUtVqjj2JMnBIqQ",
    "code_challenge_method": "S256",
    "nonce": "-F9skdE9t76YUd30-p8v6cBOFac0FR2P358f-U372ZquW"
  }
}
2020-01-19 13:30:30.613 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:30.614 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:30.623 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****c3ee"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000006C",
  "TimeStamp": "2020-01-19T12:30:30Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:30.624 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "-F9skdE9t76YUd30-p8v6cBOFac0FR2P358f-U372ZquW",
  "Scope": "openid profile api"
}
2020-01-19 13:30:31.172 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:31.173 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:31.173 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:31.173 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:31.174 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:31.174 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:31.174 +01:00 [DBG] Start discovery request
2020-01-19 13:30:31.217 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:31.218 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:31.218 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:31.218 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:31.219 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:31.219 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:31.220 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:31.262 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:31.263 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:31.263 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:31.264 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:31.264 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:31.265 +01:00 [DBG] Start authorize request
2020-01-19 13:30:31.265 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:31.265 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:31.266 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:31.266 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:31.267 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "7xLjjNeIdvNwSF0AWKlCPQlb0aU23eAso0P836A9kxe-h",
  "Nonce": "7xLjjNeIdvNwSF0AWKlCPQlb0aU23eAso0P836A9kxe-h",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "7xLjjNeIdvNwSF0AWKlCPQlb0aU23eAso0P836A9kxe-h",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "USYpQ9Yl7JKToPW4OAi6PIeQPYYcC5BewzU8knlfaJY",
    "code_challenge_method": "S256",
    "nonce": "7xLjjNeIdvNwSF0AWKlCPQlb0aU23eAso0P836A9kxe-h"
  }
}
2020-01-19 13:30:31.267 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:31.268 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:31.281 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****0cbe"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000006D",
  "TimeStamp": "2020-01-19T12:30:31Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:31.290 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "7xLjjNeIdvNwSF0AWKlCPQlb0aU23eAso0P836A9kxe-h",
  "Scope": "openid profile api"
}
2020-01-19 13:30:31.854 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:31.855 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:31.856 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:31.859 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:31.860 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:31.860 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:31.860 +01:00 [DBG] Start discovery request
2020-01-19 13:30:31.914 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:31.915 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:31.917 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:31.917 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:31.922 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:31.923 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:31.923 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:31.972 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:31.974 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:31.975 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:31.976 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:31.978 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:31.979 +01:00 [DBG] Start authorize request
2020-01-19 13:30:31.982 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:31.984 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:31.984 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:31.985 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:31.986 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "qxv0Jn-w1TiPMyh6US-90xHmpshKXKAEBtEh8fBG9Lavf",
  "Nonce": "qxv0Jn-w1TiPMyh6US-90xHmpshKXKAEBtEh8fBG9Lavf",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "qxv0Jn-w1TiPMyh6US-90xHmpshKXKAEBtEh8fBG9Lavf",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "HlnhmBUp5Jv49ghGng_tPdz-STOL05X35IdImd66Vx8",
    "code_challenge_method": "S256",
    "nonce": "qxv0Jn-w1TiPMyh6US-90xHmpshKXKAEBtEh8fBG9Lavf"
  }
}
2020-01-19 13:30:31.987 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:31.988 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:31.999 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****8130"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000006E",
  "TimeStamp": "2020-01-19T12:30:31Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:32.000 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "qxv0Jn-w1TiPMyh6US-90xHmpshKXKAEBtEh8fBG9Lavf",
  "Scope": "openid profile api"
}
2020-01-19 13:30:32.492 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:32.493 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:32.493 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:32.493 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:32.494 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:32.494 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:32.494 +01:00 [DBG] Start discovery request
2020-01-19 13:30:32.546 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:32.546 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:32.547 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:32.547 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:32.547 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:32.548 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:32.548 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:32.588 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:32.589 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:32.589 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:32.590 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:32.590 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:32.590 +01:00 [DBG] Start authorize request
2020-01-19 13:30:32.591 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:32.591 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:32.591 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:32.592 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:32.593 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "k4gn43NoKWvBBl44cQHKbnorhCRc4pIfbuI0BVNlrxq6o",
  "Nonce": "k4gn43NoKWvBBl44cQHKbnorhCRc4pIfbuI0BVNlrxq6o",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "k4gn43NoKWvBBl44cQHKbnorhCRc4pIfbuI0BVNlrxq6o",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "r2XhXNPn4cH3k5z9jws7xWR0NMYq1k5r7l4cF1aGma4",
    "code_challenge_method": "S256",
    "nonce": "k4gn43NoKWvBBl44cQHKbnorhCRc4pIfbuI0BVNlrxq6o"
  }
}
2020-01-19 13:30:32.598 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:32.600 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:32.613 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d79e"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000006F",
  "TimeStamp": "2020-01-19T12:30:32Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:32.623 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "k4gn43NoKWvBBl44cQHKbnorhCRc4pIfbuI0BVNlrxq6o",
  "Scope": "openid profile api"
}
2020-01-19 13:30:33.316 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:33.316 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:33.317 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:33.317 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:33.318 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:33.319 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:33.321 +01:00 [DBG] Start discovery request
2020-01-19 13:30:33.376 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:33.376 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:33.377 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:33.381 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:33.381 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:33.382 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:33.382 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:33.438 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:33.439 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:33.442 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:33.446 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:33.447 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:33.448 +01:00 [DBG] Start authorize request
2020-01-19 13:30:33.449 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:33.450 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:33.450 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:33.450 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:33.451 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "b44G-vSlBdzmlp5Dzwt6sEcEtDFeOmzJthHpxPQ8fUxUh",
  "Nonce": "b44G-vSlBdzmlp5Dzwt6sEcEtDFeOmzJthHpxPQ8fUxUh",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "b44G-vSlBdzmlp5Dzwt6sEcEtDFeOmzJthHpxPQ8fUxUh",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "9UwCmtRybCChG1gfOEnSd5QQb0L4vbHj4g9PfRWH6j4",
    "code_challenge_method": "S256",
    "nonce": "b44G-vSlBdzmlp5Dzwt6sEcEtDFeOmzJthHpxPQ8fUxUh"
  }
}
2020-01-19 13:30:33.453 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:33.453 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:33.465 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****612b"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000070",
  "TimeStamp": "2020-01-19T12:30:33Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:33.466 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "b44G-vSlBdzmlp5Dzwt6sEcEtDFeOmzJthHpxPQ8fUxUh",
  "Scope": "openid profile api"
}
2020-01-19 13:30:33.946 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:33.946 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:33.946 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:33.947 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:33.947 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:33.947 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:33.948 +01:00 [DBG] Start discovery request
2020-01-19 13:30:33.994 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:33.995 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:33.995 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:33.995 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:33.996 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:33.996 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:33.996 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:34.041 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:34.041 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:34.042 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:34.042 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:34.043 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:34.043 +01:00 [DBG] Start authorize request
2020-01-19 13:30:34.044 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:34.044 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:34.044 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:34.045 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:34.045 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "wKczVbF2TemKvEEsGK6u6aDsszcIbDy-Q9sWKBluX5m_b",
  "Nonce": "wKczVbF2TemKvEEsGK6u6aDsszcIbDy-Q9sWKBluX5m_b",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "wKczVbF2TemKvEEsGK6u6aDsszcIbDy-Q9sWKBluX5m_b",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "DLoXlSEr4_22b2Mraz5qqSoLy8PPE85JTC3AoT3Fu5Q",
    "code_challenge_method": "S256",
    "nonce": "wKczVbF2TemKvEEsGK6u6aDsszcIbDy-Q9sWKBluX5m_b"
  }
}
2020-01-19 13:30:34.046 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:34.047 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:34.057 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****34b5"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000071",
  "TimeStamp": "2020-01-19T12:30:34Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:34.059 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "wKczVbF2TemKvEEsGK6u6aDsszcIbDy-Q9sWKBluX5m_b",
  "Scope": "openid profile api"
}
2020-01-19 13:30:34.519 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:34.520 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:34.520 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:34.520 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:34.521 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:34.521 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:34.521 +01:00 [DBG] Start discovery request
2020-01-19 13:30:34.572 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:34.572 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:34.573 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:34.573 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:34.573 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:34.574 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:34.575 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:34.634 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:34.634 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:34.635 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:34.637 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:34.638 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:34.641 +01:00 [DBG] Start authorize request
2020-01-19 13:30:34.641 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:34.642 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:34.642 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:34.642 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:34.644 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "uDFGzB22-srLEdAvaQT55AiMbPRHjUSVy74eMt0S4OTd8",
  "Nonce": "uDFGzB22-srLEdAvaQT55AiMbPRHjUSVy74eMt0S4OTd8",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "uDFGzB22-srLEdAvaQT55AiMbPRHjUSVy74eMt0S4OTd8",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "658cLCzXqLdCdJzJGyLvbT1XcYqutx57pXukp9U5anM",
    "code_challenge_method": "S256",
    "nonce": "uDFGzB22-srLEdAvaQT55AiMbPRHjUSVy74eMt0S4OTd8"
  }
}
2020-01-19 13:30:34.645 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:34.645 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:34.657 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****0fe6"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000072",
  "TimeStamp": "2020-01-19T12:30:34Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:34.659 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "uDFGzB22-srLEdAvaQT55AiMbPRHjUSVy74eMt0S4OTd8",
  "Scope": "openid profile api"
}
2020-01-19 13:30:35.169 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:35.170 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:35.170 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:35.170 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:35.170 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:35.171 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:35.171 +01:00 [DBG] Start discovery request
2020-01-19 13:30:35.222 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:35.222 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:35.222 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:35.223 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:35.223 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:35.223 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:35.223 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:35.277 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:35.277 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:35.278 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:35.278 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:35.278 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:35.279 +01:00 [DBG] Start authorize request
2020-01-19 13:30:35.279 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:35.279 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:35.280 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:35.280 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:35.281 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "fu7NnnrwXRE3oFt2O5p6T0EFFtxCvNyYdT8mICrk1plN9",
  "Nonce": "fu7NnnrwXRE3oFt2O5p6T0EFFtxCvNyYdT8mICrk1plN9",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "fu7NnnrwXRE3oFt2O5p6T0EFFtxCvNyYdT8mICrk1plN9",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "a-JEdn3tBwUPmy_qFhRED6A5tA1wHDgDqIAPeySO7SE",
    "code_challenge_method": "S256",
    "nonce": "fu7NnnrwXRE3oFt2O5p6T0EFFtxCvNyYdT8mICrk1plN9"
  }
}
2020-01-19 13:30:35.282 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:35.283 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:35.292 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d099"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000073",
  "TimeStamp": "2020-01-19T12:30:35Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:35.293 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "fu7NnnrwXRE3oFt2O5p6T0EFFtxCvNyYdT8mICrk1plN9",
  "Scope": "openid profile api"
}
2020-01-19 13:30:35.728 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:35.728 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:35.729 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:35.729 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:35.729 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:35.729 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:35.730 +01:00 [DBG] Start discovery request
2020-01-19 13:30:35.778 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:35.778 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:35.778 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:35.779 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:35.779 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:35.779 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:35.780 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:35.829 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:35.830 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:35.830 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:35.831 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:35.831 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:35.832 +01:00 [DBG] Start authorize request
2020-01-19 13:30:35.832 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:35.832 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:35.833 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:35.833 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:35.834 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "0mq3glZ0rgHiDSzEYx6_LbJdR7oq_Lbm97C1dmKJt4bc5",
  "Nonce": "0mq3glZ0rgHiDSzEYx6_LbJdR7oq_Lbm97C1dmKJt4bc5",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "0mq3glZ0rgHiDSzEYx6_LbJdR7oq_Lbm97C1dmKJt4bc5",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "SUvbkpXoBmlbH-d3OeOlD0ZBez-12j8qpX67mnUPHpY",
    "code_challenge_method": "S256",
    "nonce": "0mq3glZ0rgHiDSzEYx6_LbJdR7oq_Lbm97C1dmKJt4bc5"
  }
}
2020-01-19 13:30:35.835 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:35.835 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:35.846 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****e56d"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000074",
  "TimeStamp": "2020-01-19T12:30:35Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:35.848 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "0mq3glZ0rgHiDSzEYx6_LbJdR7oq_Lbm97C1dmKJt4bc5",
  "Scope": "openid profile api"
}
2020-01-19 13:30:36.277 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:36.278 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:36.278 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:36.278 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:36.278 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:36.279 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:36.279 +01:00 [DBG] Start discovery request
2020-01-19 13:30:36.329 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:36.329 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:36.329 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:36.330 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:36.330 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:36.330 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:36.331 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:36.373 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:36.374 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:36.375 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:36.375 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:36.376 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:36.376 +01:00 [DBG] Start authorize request
2020-01-19 13:30:36.376 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:36.376 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:36.377 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:36.377 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:36.377 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "f0B_wsb0BEdlnGGO3RwafLzftUxJ_i5h8V4OzgGbqw-UY",
  "Nonce": "f0B_wsb0BEdlnGGO3RwafLzftUxJ_i5h8V4OzgGbqw-UY",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "f0B_wsb0BEdlnGGO3RwafLzftUxJ_i5h8V4OzgGbqw-UY",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "38gjuCsPU0lfJ7RSbnoTywUyOX8Fbq1azfoFbZHfMxM",
    "code_challenge_method": "S256",
    "nonce": "f0B_wsb0BEdlnGGO3RwafLzftUxJ_i5h8V4OzgGbqw-UY"
  }
}
2020-01-19 13:30:36.378 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:36.379 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:36.390 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****4433"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000075",
  "TimeStamp": "2020-01-19T12:30:36Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:36.400 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "f0B_wsb0BEdlnGGO3RwafLzftUxJ_i5h8V4OzgGbqw-UY",
  "Scope": "openid profile api"
}
2020-01-19 13:30:36.825 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:30:36.825 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:36.826 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:36.826 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:30:36.826 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:30:36.826 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:30:36.827 +01:00 [DBG] Start discovery request
2020-01-19 13:30:36.874 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:30:36.875 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:30:36.875 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:30:36.876 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:30:36.876 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:30:36.877 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:30:36.878 +01:00 [DBG] Start key discovery request
2020-01-19 13:30:36.913 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:36.913 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:30:36.914 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:30:36.914 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:30:36.915 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:30:36.915 +01:00 [DBG] Start authorize request
2020-01-19 13:30:36.915 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:30:36.916 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:30:36.916 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:30:36.916 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:30:36.917 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "civANAiGimFkQUQuUYmHm5CkSTttJShm-7DOuD9ZSaloF",
  "Nonce": "civANAiGimFkQUQuUYmHm5CkSTttJShm-7DOuD9ZSaloF",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "civANAiGimFkQUQuUYmHm5CkSTttJShm-7DOuD9ZSaloF",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "bF799pfQDVyI2F-d23vG8ahxcmST2uS6T3KpCh2vaOQ",
    "code_challenge_method": "S256",
    "nonce": "civANAiGimFkQUQuUYmHm5CkSTttJShm-7DOuD9ZSaloF"
  }
}
2020-01-19 13:30:36.918 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:30:36.918 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:30:36.929 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****2f62"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000076",
  "TimeStamp": "2020-01-19T12:30:36Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:30:36.935 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "civANAiGimFkQUQuUYmHm5CkSTttJShm-7DOuD9ZSaloF",
  "Scope": "openid profile api"
}
2020-01-19 13:31:25.522 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:31:25.523 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:25.523 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:25.523 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:31:25.523 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:31:25.524 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:31:25.525 +01:00 [DBG] Start discovery request
2020-01-19 13:31:25.572 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:31:25.573 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:25.573 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:25.577 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:31:25.577 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:31:25.578 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:31:25.578 +01:00 [DBG] Start key discovery request
2020-01-19 13:31:25.613 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:25.615 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:25.616 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:31:25.617 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:31:25.618 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:31:25.619 +01:00 [DBG] Start authorize request
2020-01-19 13:31:25.620 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:31:25.620 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:31:25.620 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:31:25.620 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:31:25.621 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "yaDuHMh8GWuXyk3bs0FvQ_AMOrbtkuyKMPice_qUNAMbH",
  "Nonce": "yaDuHMh8GWuXyk3bs0FvQ_AMOrbtkuyKMPice_qUNAMbH",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "yaDuHMh8GWuXyk3bs0FvQ_AMOrbtkuyKMPice_qUNAMbH",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "yMHXeiBW6LCgHekTx7osAqyDTtMU_WeeNL7x_mzEBgc",
    "code_challenge_method": "S256",
    "nonce": "yaDuHMh8GWuXyk3bs0FvQ_AMOrbtkuyKMPice_qUNAMbH"
  }
}
2020-01-19 13:31:25.621 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:31:25.621 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:31:25.629 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d22c"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000077",
  "TimeStamp": "2020-01-19T12:31:25Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:31:25.629 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "yaDuHMh8GWuXyk3bs0FvQ_AMOrbtkuyKMPice_qUNAMbH",
  "Scope": "openid profile api"
}
2020-01-19 13:31:26.114 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:31:26.114 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:26.114 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:26.115 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:31:26.115 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:31:26.115 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:31:26.116 +01:00 [DBG] Start discovery request
2020-01-19 13:31:26.156 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:31:26.157 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:26.157 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:26.157 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:31:26.158 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:31:26.159 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:31:26.160 +01:00 [DBG] Start key discovery request
2020-01-19 13:31:26.210 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:26.211 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:26.211 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:31:26.212 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:31:26.212 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:31:26.213 +01:00 [DBG] Start authorize request
2020-01-19 13:31:26.213 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:31:26.213 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:31:26.213 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:31:26.214 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:31:26.215 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "XhUGjq-vyk5QBw_lMCPfUFdnboP00o2ZDqaWt4CC5ilHi",
  "Nonce": "XhUGjq-vyk5QBw_lMCPfUFdnboP00o2ZDqaWt4CC5ilHi",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "XhUGjq-vyk5QBw_lMCPfUFdnboP00o2ZDqaWt4CC5ilHi",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "XurDZOXVrWE5DAuBvC2RmyOPaojup23s0WRhCA7U_SE",
    "code_challenge_method": "S256",
    "nonce": "XhUGjq-vyk5QBw_lMCPfUFdnboP00o2ZDqaWt4CC5ilHi"
  }
}
2020-01-19 13:31:26.215 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:31:26.216 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:31:26.224 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****6fa3"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000078",
  "TimeStamp": "2020-01-19T12:31:26Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:31:26.225 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "XhUGjq-vyk5QBw_lMCPfUFdnboP00o2ZDqaWt4CC5ilHi",
  "Scope": "openid profile api"
}
2020-01-19 13:31:26.643 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:31:26.643 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:26.644 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:26.644 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:31:26.644 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:31:26.644 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:31:26.645 +01:00 [DBG] Start discovery request
2020-01-19 13:31:26.685 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:31:26.686 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:26.687 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:26.687 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:31:26.688 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:31:26.690 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:31:26.691 +01:00 [DBG] Start key discovery request
2020-01-19 13:31:26.734 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:26.734 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:26.736 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:31:26.736 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:31:26.736 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:31:26.737 +01:00 [DBG] Start authorize request
2020-01-19 13:31:26.737 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:31:26.737 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:31:26.737 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:31:26.738 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:31:26.738 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "Uxy-lzY3cOnX64Xf0z7HaWlkqlaYcUvARyT2iQrrDIMHd",
  "Nonce": "Uxy-lzY3cOnX64Xf0z7HaWlkqlaYcUvARyT2iQrrDIMHd",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "Uxy-lzY3cOnX64Xf0z7HaWlkqlaYcUvARyT2iQrrDIMHd",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "UROPJp77GEzQtMCJ3Iaz-a-38mRHXKm96teCHhX-zJk",
    "code_challenge_method": "S256",
    "nonce": "Uxy-lzY3cOnX64Xf0z7HaWlkqlaYcUvARyT2iQrrDIMHd"
  }
}
2020-01-19 13:31:26.739 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:31:26.740 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:31:26.748 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****a42c"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000079",
  "TimeStamp": "2020-01-19T12:31:26Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:31:26.748 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "Uxy-lzY3cOnX64Xf0z7HaWlkqlaYcUvARyT2iQrrDIMHd",
  "Scope": "openid profile api"
}
2020-01-19 13:31:27.160 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:31:27.162 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:27.165 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:27.165 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:31:27.166 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:31:27.166 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:31:27.166 +01:00 [DBG] Start discovery request
2020-01-19 13:31:27.201 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:31:27.202 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:27.202 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:27.203 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:31:27.203 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:31:27.203 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:31:27.204 +01:00 [DBG] Start key discovery request
2020-01-19 13:31:27.239 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:27.240 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:27.241 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:31:27.241 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:31:27.241 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:31:27.242 +01:00 [DBG] Start authorize request
2020-01-19 13:31:27.242 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:31:27.243 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:31:27.243 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:31:27.243 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:31:27.244 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "hnUrd8tJ6K1u7kj-4n9ZdNSUGJRGtDTGZjh7VWWb_ZXXZ",
  "Nonce": "hnUrd8tJ6K1u7kj-4n9ZdNSUGJRGtDTGZjh7VWWb_ZXXZ",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "hnUrd8tJ6K1u7kj-4n9ZdNSUGJRGtDTGZjh7VWWb_ZXXZ",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "IKGZA3xTa30Kt0Eqrbc2sFJdcRsFru5lsjAaYbNalv8",
    "code_challenge_method": "S256",
    "nonce": "hnUrd8tJ6K1u7kj-4n9ZdNSUGJRGtDTGZjh7VWWb_ZXXZ"
  }
}
2020-01-19 13:31:27.245 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:31:27.246 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:31:27.256 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****623f"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000007A",
  "TimeStamp": "2020-01-19T12:31:27Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:31:27.257 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "hnUrd8tJ6K1u7kj-4n9ZdNSUGJRGtDTGZjh7VWWb_ZXXZ",
  "Scope": "openid profile api"
}
2020-01-19 13:31:27.738 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:31:27.739 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:27.740 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:27.740 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:31:27.741 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:31:27.742 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:31:27.743 +01:00 [DBG] Start discovery request
2020-01-19 13:31:27.789 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:31:27.790 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:27.790 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:27.791 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:31:27.791 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:31:27.792 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:31:27.792 +01:00 [DBG] Start key discovery request
2020-01-19 13:31:27.832 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:27.834 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:27.835 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:31:27.838 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:31:27.839 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:31:27.840 +01:00 [DBG] Start authorize request
2020-01-19 13:31:27.840 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:31:27.841 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:31:27.841 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:31:27.841 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:31:27.842 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "TxVX2ShqeWykGbg9nchiKBhodZ8Jgak8YoCFrppgtqYva",
  "Nonce": "TxVX2ShqeWykGbg9nchiKBhodZ8Jgak8YoCFrppgtqYva",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "TxVX2ShqeWykGbg9nchiKBhodZ8Jgak8YoCFrppgtqYva",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "9q5bZ3i1v7prJSUnbCnjaK_eeCqIWPA8SeIRnID-EKs",
    "code_challenge_method": "S256",
    "nonce": "TxVX2ShqeWykGbg9nchiKBhodZ8Jgak8YoCFrppgtqYva"
  }
}
2020-01-19 13:31:27.844 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:31:27.845 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:31:27.855 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****b6b9"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000007B",
  "TimeStamp": "2020-01-19T12:31:27Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:31:27.856 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "TxVX2ShqeWykGbg9nchiKBhodZ8Jgak8YoCFrppgtqYva",
  "Scope": "openid profile api"
}
2020-01-19 13:31:28.336 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:31:28.337 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:28.337 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:28.337 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:31:28.337 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:31:28.338 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:31:28.338 +01:00 [DBG] Start discovery request
2020-01-19 13:31:28.381 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:31:28.381 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:28.382 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:28.382 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:31:28.382 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:31:28.383 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:31:28.383 +01:00 [DBG] Start key discovery request
2020-01-19 13:31:28.420 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:28.421 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:28.421 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:31:28.422 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:31:28.423 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:31:28.424 +01:00 [DBG] Start authorize request
2020-01-19 13:31:28.424 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:31:28.424 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:31:28.425 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:31:28.426 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:31:28.427 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "az7wIhgkl2sKYiEM9wdToKtkjVKgyWLiwUQx0nuyD_Ndw",
  "Nonce": "az7wIhgkl2sKYiEM9wdToKtkjVKgyWLiwUQx0nuyD_Ndw",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "az7wIhgkl2sKYiEM9wdToKtkjVKgyWLiwUQx0nuyD_Ndw",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "Mui2E1G6Ny-iqHPmD7a46cdDwNQ1gocgyVBCKT_E080",
    "code_challenge_method": "S256",
    "nonce": "az7wIhgkl2sKYiEM9wdToKtkjVKgyWLiwUQx0nuyD_Ndw"
  }
}
2020-01-19 13:31:28.434 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:31:28.434 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:31:28.445 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****0035"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000007C",
  "TimeStamp": "2020-01-19T12:31:28Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:31:28.446 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "az7wIhgkl2sKYiEM9wdToKtkjVKgyWLiwUQx0nuyD_Ndw",
  "Scope": "openid profile api"
}
2020-01-19 13:31:28.877 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:31:28.877 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:28.877 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:28.878 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:31:28.878 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:31:28.878 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:31:28.878 +01:00 [DBG] Start discovery request
2020-01-19 13:31:28.919 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:31:28.919 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:28.919 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:28.920 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:31:28.920 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:31:28.921 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:31:28.921 +01:00 [DBG] Start key discovery request
2020-01-19 13:31:28.955 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:28.956 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:28.956 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:31:28.957 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:31:28.957 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:31:28.957 +01:00 [DBG] Start authorize request
2020-01-19 13:31:28.958 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:31:28.958 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:31:28.958 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:31:28.959 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:31:28.960 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "nXY3XORHY9oRuUAOIwdu82VxnlXAPltWVZoMTrUxLZhQv",
  "Nonce": "nXY3XORHY9oRuUAOIwdu82VxnlXAPltWVZoMTrUxLZhQv",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "nXY3XORHY9oRuUAOIwdu82VxnlXAPltWVZoMTrUxLZhQv",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "kPUCcELJmvG2URkAOXh8h07VybBlr-wjdYZzqpKVAlQ",
    "code_challenge_method": "S256",
    "nonce": "nXY3XORHY9oRuUAOIwdu82VxnlXAPltWVZoMTrUxLZhQv"
  }
}
2020-01-19 13:31:28.961 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:31:28.961 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:31:28.971 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****2bf3"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000007D",
  "TimeStamp": "2020-01-19T12:31:28Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:31:28.976 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "nXY3XORHY9oRuUAOIwdu82VxnlXAPltWVZoMTrUxLZhQv",
  "Scope": "openid profile api"
}
2020-01-19 13:31:29.559 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:31:29.560 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:29.560 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:29.560 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:31:29.561 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:31:29.561 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:31:29.561 +01:00 [DBG] Start discovery request
2020-01-19 13:31:29.605 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:31:29.607 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:29.607 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:29.607 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:31:29.608 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:31:29.608 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:31:29.608 +01:00 [DBG] Start key discovery request
2020-01-19 13:31:29.647 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:29.647 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:29.648 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:31:29.649 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:31:29.649 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:31:29.650 +01:00 [DBG] Start authorize request
2020-01-19 13:31:29.650 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:31:29.650 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:31:29.650 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:31:29.651 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:31:29.651 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "REZkZQaBtFfXKgYUtALzcL-qKaj2yVWfmt78YSUwrEJbc",
  "Nonce": "REZkZQaBtFfXKgYUtALzcL-qKaj2yVWfmt78YSUwrEJbc",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "REZkZQaBtFfXKgYUtALzcL-qKaj2yVWfmt78YSUwrEJbc",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "g_cOP45KFFxk6ozdNFyJ-fap8tCMvte8zpzPhGkY3uE",
    "code_challenge_method": "S256",
    "nonce": "REZkZQaBtFfXKgYUtALzcL-qKaj2yVWfmt78YSUwrEJbc"
  }
}
2020-01-19 13:31:29.653 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:31:29.653 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:31:29.662 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****fe55"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000007E",
  "TimeStamp": "2020-01-19T12:31:29Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:31:29.669 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "REZkZQaBtFfXKgYUtALzcL-qKaj2yVWfmt78YSUwrEJbc",
  "Scope": "openid profile api"
}
2020-01-19 13:31:30.130 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:31:30.130 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:30.131 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:30.131 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:31:30.131 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:31:30.132 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:31:30.132 +01:00 [DBG] Start discovery request
2020-01-19 13:31:30.182 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:31:30.183 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:30.187 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:30.188 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:31:30.188 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:31:30.189 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:31:30.189 +01:00 [DBG] Start key discovery request
2020-01-19 13:31:30.244 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:30.245 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:30.245 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:31:30.245 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:31:30.246 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:31:30.246 +01:00 [DBG] Start authorize request
2020-01-19 13:31:30.246 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:31:30.247 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:31:30.247 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:31:30.248 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:31:30.248 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "cAQIPhooo2EUiA_XUSX9YX2YepavCFJk8baI0hi0UIcjJ",
  "Nonce": "cAQIPhooo2EUiA_XUSX9YX2YepavCFJk8baI0hi0UIcjJ",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "cAQIPhooo2EUiA_XUSX9YX2YepavCFJk8baI0hi0UIcjJ",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "ZGR3AM40UOxa0eep5uU-P10FRYuv4NxRY4CyJmFxSAA",
    "code_challenge_method": "S256",
    "nonce": "cAQIPhooo2EUiA_XUSX9YX2YepavCFJk8baI0hi0UIcjJ"
  }
}
2020-01-19 13:31:30.249 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:31:30.249 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:31:30.258 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****e555"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000007F",
  "TimeStamp": "2020-01-19T12:31:30Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:31:30.264 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "cAQIPhooo2EUiA_XUSX9YX2YepavCFJk8baI0hi0UIcjJ",
  "Scope": "openid profile api"
}
2020-01-19 13:31:30.834 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:31:30.835 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:30.837 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:30.838 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:31:30.841 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:31:30.842 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:31:30.842 +01:00 [DBG] Start discovery request
2020-01-19 13:31:30.881 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:31:30.882 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:30.882 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:30.883 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:31:30.883 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:31:30.884 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:31:30.884 +01:00 [DBG] Start key discovery request
2020-01-19 13:31:30.928 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:30.931 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:30.932 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:31:30.932 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:31:30.933 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:31:30.933 +01:00 [DBG] Start authorize request
2020-01-19 13:31:30.933 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:31:30.934 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:31:30.934 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:31:30.935 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:31:30.936 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "aVBS7vFkce8S2I493_ZmoC6UgJ19wTn62T4TCAo_LEPG9",
  "Nonce": "aVBS7vFkce8S2I493_ZmoC6UgJ19wTn62T4TCAo_LEPG9",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "aVBS7vFkce8S2I493_ZmoC6UgJ19wTn62T4TCAo_LEPG9",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "mfeQXyUw35mPacEcK_b6oXg1gcXODmtDF-rADOwg9V4",
    "code_challenge_method": "S256",
    "nonce": "aVBS7vFkce8S2I493_ZmoC6UgJ19wTn62T4TCAo_LEPG9"
  }
}
2020-01-19 13:31:30.937 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:31:30.937 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:31:30.946 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****3e87"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000080",
  "TimeStamp": "2020-01-19T12:31:30Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:31:30.948 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "aVBS7vFkce8S2I493_ZmoC6UgJ19wTn62T4TCAo_LEPG9",
  "Scope": "openid profile api"
}
2020-01-19 13:31:31.453 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:31:31.454 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:31.454 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:31.454 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:31:31.455 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:31:31.455 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:31:31.455 +01:00 [DBG] Start discovery request
2020-01-19 13:31:31.496 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:31:31.496 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:31.496 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:31.497 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:31:31.497 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:31:31.498 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:31:31.498 +01:00 [DBG] Start key discovery request
2020-01-19 13:31:31.542 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:31.542 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:31:31.542 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:31:31.543 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:31:31.543 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:31:31.544 +01:00 [DBG] Start authorize request
2020-01-19 13:31:31.545 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:31:31.545 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:31:31.546 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:31:31.546 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:31:31.547 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "C6xjBtLaRM50rwSh3RudM8NHnCb32AXSWAmQ6VLIVCWyN",
  "Nonce": "C6xjBtLaRM50rwSh3RudM8NHnCb32AXSWAmQ6VLIVCWyN",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "C6xjBtLaRM50rwSh3RudM8NHnCb32AXSWAmQ6VLIVCWyN",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "M3sfVHz7C7QPnMCtb2NS2Rk6dVVNYsZG5g7Z36bie64",
    "code_challenge_method": "S256",
    "nonce": "C6xjBtLaRM50rwSh3RudM8NHnCb32AXSWAmQ6VLIVCWyN"
  }
}
2020-01-19 13:31:31.547 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:31:31.548 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:31:31.557 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****20b0"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000081",
  "TimeStamp": "2020-01-19T12:31:31Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:31:31.558 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "C6xjBtLaRM50rwSh3RudM8NHnCb32AXSWAmQ6VLIVCWyN",
  "Scope": "openid profile api"
}
2020-01-19 13:31:32.030 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:31:32.030 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:31:32.031 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:31:32.031 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:31:32.032 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:31:32.032 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:31:32.032 +01:00 [DBG] Start discovery request
2020-01-19 13:32:13.710 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:32:13.710 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:13.713 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:13.713 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:32:13.714 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:32:13.714 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:32:13.714 +01:00 [DBG] Start discovery request
2020-01-19 13:32:13.768 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:32:13.769 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:13.769 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:13.769 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:32:13.770 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:32:13.770 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:32:13.770 +01:00 [DBG] Start key discovery request
2020-01-19 13:32:13.826 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:13.827 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:13.827 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:32:13.828 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:32:13.828 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:32:13.828 +01:00 [DBG] Start authorize request
2020-01-19 13:32:13.829 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:32:13.829 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:32:13.829 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:32:13.830 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:32:13.830 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "w7xEVQgphxXIupub_T1R56Tyxa3xkBmzmtih22PM9_BW8",
  "Nonce": "w7xEVQgphxXIupub_T1R56Tyxa3xkBmzmtih22PM9_BW8",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "w7xEVQgphxXIupub_T1R56Tyxa3xkBmzmtih22PM9_BW8",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "sEGo9YOKVER-AHejDyzpgMRGX4yTNHa61d2SO39UnBI",
    "code_challenge_method": "S256",
    "nonce": "w7xEVQgphxXIupub_T1R56Tyxa3xkBmzmtih22PM9_BW8"
  }
}
2020-01-19 13:32:13.831 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:32:13.831 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:32:13.841 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d884"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000082",
  "TimeStamp": "2020-01-19T12:32:13Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:32:13.844 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "w7xEVQgphxXIupub_T1R56Tyxa3xkBmzmtih22PM9_BW8",
  "Scope": "openid profile api"
}
2020-01-19 13:32:14.029 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:32:14.030 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:14.030 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:14.030 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:32:14.031 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:32:14.031 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:32:14.031 +01:00 [DBG] Start discovery request
2020-01-19 13:32:14.129 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:32:14.130 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:14.130 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:14.131 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:32:14.131 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:32:14.131 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:32:14.132 +01:00 [DBG] Start key discovery request
2020-01-19 13:32:14.241 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:14.242 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:14.242 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:32:14.242 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:32:14.243 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:32:14.243 +01:00 [DBG] Start authorize request
2020-01-19 13:32:14.243 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:32:14.243 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:32:14.243 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:32:14.244 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:32:14.244 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "oSD8yuFvlNG0RYSNhWXftu33E4deqG1rpjsd_ARyXQOgD",
  "Nonce": "oSD8yuFvlNG0RYSNhWXftu33E4deqG1rpjsd_ARyXQOgD",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "oSD8yuFvlNG0RYSNhWXftu33E4deqG1rpjsd_ARyXQOgD",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "QU-UfB1bj_iFkmNtqG4_VPn_6cowoJd1m7BeQccAXJg",
    "code_challenge_method": "S256",
    "nonce": "oSD8yuFvlNG0RYSNhWXftu33E4deqG1rpjsd_ARyXQOgD"
  }
}
2020-01-19 13:32:14.245 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:32:14.245 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:32:14.254 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****9a75"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000083",
  "TimeStamp": "2020-01-19T12:32:14Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:32:14.255 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "oSD8yuFvlNG0RYSNhWXftu33E4deqG1rpjsd_ARyXQOgD",
  "Scope": "openid profile api"
}
2020-01-19 13:32:14.766 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:32:14.767 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:14.767 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:14.768 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:32:14.768 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:32:14.768 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:32:14.769 +01:00 [DBG] Start discovery request
2020-01-19 13:32:14.853 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:32:14.854 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:14.854 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:14.855 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:32:14.855 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:32:14.855 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:32:14.856 +01:00 [DBG] Start key discovery request
2020-01-19 13:32:14.897 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:14.898 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:14.898 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:32:14.898 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:32:14.899 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:32:14.899 +01:00 [DBG] Start authorize request
2020-01-19 13:32:14.899 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:32:14.899 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:32:14.900 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:32:14.900 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:32:14.900 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "GXF5tIUEGMSjs2efW5YiwYRI2Nshh_7B99w_A-5CkFdJU",
  "Nonce": "GXF5tIUEGMSjs2efW5YiwYRI2Nshh_7B99w_A-5CkFdJU",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "GXF5tIUEGMSjs2efW5YiwYRI2Nshh_7B99w_A-5CkFdJU",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "VoCvTZ3k1CGurnRTiVy3mSjNXs2tmhFKMs4jaapMJK8",
    "code_challenge_method": "S256",
    "nonce": "GXF5tIUEGMSjs2efW5YiwYRI2Nshh_7B99w_A-5CkFdJU"
  }
}
2020-01-19 13:32:14.901 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:32:14.901 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:32:14.912 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****cd70"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000084",
  "TimeStamp": "2020-01-19T12:32:14Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:32:14.915 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "GXF5tIUEGMSjs2efW5YiwYRI2Nshh_7B99w_A-5CkFdJU",
  "Scope": "openid profile api"
}
2020-01-19 13:32:15.395 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:32:15.395 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:15.396 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:15.396 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:32:15.396 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:32:15.396 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:32:15.397 +01:00 [DBG] Start discovery request
2020-01-19 13:32:15.435 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:32:15.435 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:15.436 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:15.436 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:32:15.437 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:32:15.437 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:32:15.437 +01:00 [DBG] Start key discovery request
2020-01-19 13:32:15.468 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:15.468 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:15.469 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:32:15.470 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:32:15.470 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:32:15.472 +01:00 [DBG] Start authorize request
2020-01-19 13:32:15.474 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:32:15.475 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:32:15.482 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:32:15.483 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:32:15.483 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "Qu6RLvKqM8e5nDdNud1INYHWAw8dOvO9oFDVa4qulsyTR",
  "Nonce": "Qu6RLvKqM8e5nDdNud1INYHWAw8dOvO9oFDVa4qulsyTR",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "Qu6RLvKqM8e5nDdNud1INYHWAw8dOvO9oFDVa4qulsyTR",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "LzNxwff_URQS7I9GT9GSjunOQ2bNTjU7GaaGpJQ02W4",
    "code_challenge_method": "S256",
    "nonce": "Qu6RLvKqM8e5nDdNud1INYHWAw8dOvO9oFDVa4qulsyTR"
  }
}
2020-01-19 13:32:15.484 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:32:15.484 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:32:15.495 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****42ad"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000085",
  "TimeStamp": "2020-01-19T12:32:15Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:32:15.496 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "Qu6RLvKqM8e5nDdNud1INYHWAw8dOvO9oFDVa4qulsyTR",
  "Scope": "openid profile api"
}
2020-01-19 13:32:15.950 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:32:15.950 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:15.950 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:15.951 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:32:15.951 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:32:15.951 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:32:15.951 +01:00 [DBG] Start discovery request
2020-01-19 13:32:15.999 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:32:15.999 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:16.002 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:16.002 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:32:16.004 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:32:16.004 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:32:16.005 +01:00 [DBG] Start key discovery request
2020-01-19 13:32:16.048 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:16.050 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:16.051 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:32:16.055 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:32:16.055 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:32:16.056 +01:00 [DBG] Start authorize request
2020-01-19 13:32:16.056 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:32:16.056 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:32:16.056 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:32:16.057 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:32:16.057 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "E6PnGL4wRmd_PLXajg94EGM32q3jemAyhUv0T1pD618cd",
  "Nonce": "E6PnGL4wRmd_PLXajg94EGM32q3jemAyhUv0T1pD618cd",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "E6PnGL4wRmd_PLXajg94EGM32q3jemAyhUv0T1pD618cd",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "pNQP0oDGMujTg0aefvAukFq2rBgugBQFGp7xHtJpFJQ",
    "code_challenge_method": "S256",
    "nonce": "E6PnGL4wRmd_PLXajg94EGM32q3jemAyhUv0T1pD618cd"
  }
}
2020-01-19 13:32:16.059 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:32:16.060 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:32:16.070 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****2fe2"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000086",
  "TimeStamp": "2020-01-19T12:32:16Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:32:16.072 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "E6PnGL4wRmd_PLXajg94EGM32q3jemAyhUv0T1pD618cd",
  "Scope": "openid profile api"
}
2020-01-19 13:32:16.501 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:32:16.501 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:16.502 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:16.502 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:32:16.503 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:32:16.503 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:32:16.503 +01:00 [DBG] Start discovery request
2020-01-19 13:32:16.545 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:32:16.546 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:16.547 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:16.547 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:32:16.548 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:32:16.548 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:32:16.549 +01:00 [DBG] Start key discovery request
2020-01-19 13:32:16.595 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:16.597 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:16.598 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:32:16.599 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:32:16.600 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:32:16.601 +01:00 [DBG] Start authorize request
2020-01-19 13:32:16.602 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:32:16.602 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:32:16.603 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:32:16.603 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:32:16.604 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "6Ha3Fj0Nkq-d6QVixDFaSKK3BbAknSTKf9_xJ2aFYZGFA",
  "Nonce": "6Ha3Fj0Nkq-d6QVixDFaSKK3BbAknSTKf9_xJ2aFYZGFA",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "6Ha3Fj0Nkq-d6QVixDFaSKK3BbAknSTKf9_xJ2aFYZGFA",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "wQ2hFBVTg7y1CCsaLJEW12wuaMpAKCicoyGZdPP7OZU",
    "code_challenge_method": "S256",
    "nonce": "6Ha3Fj0Nkq-d6QVixDFaSKK3BbAknSTKf9_xJ2aFYZGFA"
  }
}
2020-01-19 13:32:16.607 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:32:16.607 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:32:16.617 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****ce60"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000087",
  "TimeStamp": "2020-01-19T12:32:16Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:32:16.624 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "6Ha3Fj0Nkq-d6QVixDFaSKK3BbAknSTKf9_xJ2aFYZGFA",
  "Scope": "openid profile api"
}
2020-01-19 13:32:17.099 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:32:17.100 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:17.100 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:17.100 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:32:17.100 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:32:17.101 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:32:17.101 +01:00 [DBG] Start discovery request
2020-01-19 13:32:17.140 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:32:17.141 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:17.141 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:17.141 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:32:17.141 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:32:17.142 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:32:17.142 +01:00 [DBG] Start key discovery request
2020-01-19 13:32:17.180 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:17.181 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:17.182 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:32:17.183 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:32:17.183 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:32:17.183 +01:00 [DBG] Start authorize request
2020-01-19 13:32:17.183 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:32:17.184 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:32:17.184 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:32:17.184 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:32:17.184 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "T5Z4l6rkXre9irLg9miC716NkUyhbBEQEM-lYtPI_Di9m",
  "Nonce": "T5Z4l6rkXre9irLg9miC716NkUyhbBEQEM-lYtPI_Di9m",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "T5Z4l6rkXre9irLg9miC716NkUyhbBEQEM-lYtPI_Di9m",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "U4HQ89oxTHW5PR0W1I47zAKTrCdaocw3navUFN4ddlo",
    "code_challenge_method": "S256",
    "nonce": "T5Z4l6rkXre9irLg9miC716NkUyhbBEQEM-lYtPI_Di9m"
  }
}
2020-01-19 13:32:17.185 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:32:17.185 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:32:17.199 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****44e5"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000088",
  "TimeStamp": "2020-01-19T12:32:17Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:32:17.208 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "T5Z4l6rkXre9irLg9miC716NkUyhbBEQEM-lYtPI_Di9m",
  "Scope": "openid profile api"
}
2020-01-19 13:32:17.638 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:32:17.639 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:17.639 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:17.639 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:32:17.640 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:32:17.640 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:32:17.640 +01:00 [DBG] Start discovery request
2020-01-19 13:32:17.680 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:32:17.681 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:17.682 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:17.685 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:32:17.685 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:32:17.686 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:32:17.686 +01:00 [DBG] Start key discovery request
2020-01-19 13:32:17.720 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:17.722 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:17.722 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:32:17.725 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:32:17.725 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:32:17.725 +01:00 [DBG] Start authorize request
2020-01-19 13:32:17.726 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:32:17.726 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:32:17.727 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:32:17.728 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:32:17.728 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "y9LU4gytx208fj0u-Ri4nu42fPJAbkd5P3gnmcE1b6Qxb",
  "Nonce": "y9LU4gytx208fj0u-Ri4nu42fPJAbkd5P3gnmcE1b6Qxb",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "y9LU4gytx208fj0u-Ri4nu42fPJAbkd5P3gnmcE1b6Qxb",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "RGsWlKpiYynCCyaSB5ovNQq8Sjkzp3r3yyYSLp66HR4",
    "code_challenge_method": "S256",
    "nonce": "y9LU4gytx208fj0u-Ri4nu42fPJAbkd5P3gnmcE1b6Qxb"
  }
}
2020-01-19 13:32:17.729 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:32:17.730 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:32:17.741 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****3565"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000089",
  "TimeStamp": "2020-01-19T12:32:17Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:32:17.742 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "y9LU4gytx208fj0u-Ri4nu42fPJAbkd5P3gnmcE1b6Qxb",
  "Scope": "openid profile api"
}
2020-01-19 13:32:18.291 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:32:18.292 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:18.292 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:18.292 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:32:18.293 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:32:18.293 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:32:18.293 +01:00 [DBG] Start discovery request
2020-01-19 13:32:18.328 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:32:18.328 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:18.328 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:18.329 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:32:18.329 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:32:18.329 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:32:18.329 +01:00 [DBG] Start key discovery request
2020-01-19 13:32:18.365 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:18.366 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:18.366 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:32:18.367 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:32:18.367 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:32:18.368 +01:00 [DBG] Start authorize request
2020-01-19 13:32:18.368 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:32:18.369 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:32:18.370 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:32:18.370 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:32:18.371 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "4Km8cMzp_Yv8ljxL4iSjQ47Ulp5qjh0G1C5j2fqSovebT",
  "Nonce": "4Km8cMzp_Yv8ljxL4iSjQ47Ulp5qjh0G1C5j2fqSovebT",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "4Km8cMzp_Yv8ljxL4iSjQ47Ulp5qjh0G1C5j2fqSovebT",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "VJERlVAGinULfIM5v15vkaZLqgR6LrW2s6Vfe8nhdw0",
    "code_challenge_method": "S256",
    "nonce": "4Km8cMzp_Yv8ljxL4iSjQ47Ulp5qjh0G1C5j2fqSovebT"
  }
}
2020-01-19 13:32:18.371 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:32:18.372 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:32:18.381 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****f235"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000008A",
  "TimeStamp": "2020-01-19T12:32:18Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:32:18.383 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "4Km8cMzp_Yv8ljxL4iSjQ47Ulp5qjh0G1C5j2fqSovebT",
  "Scope": "openid profile api"
}
2020-01-19 13:32:18.815 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:32:18.816 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:18.816 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:18.816 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:32:18.817 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:32:18.817 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:32:18.817 +01:00 [DBG] Start discovery request
2020-01-19 13:32:18.851 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:32:18.851 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:18.851 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:18.852 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:32:18.852 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:32:18.853 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:32:18.853 +01:00 [DBG] Start key discovery request
2020-01-19 13:32:18.889 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:18.889 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:18.889 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:32:18.890 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:32:18.890 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:32:18.890 +01:00 [DBG] Start authorize request
2020-01-19 13:32:18.891 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:32:18.891 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:32:18.891 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:32:18.892 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:32:18.893 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "eAecR4vGq_5M5slGVfKIxIupMU8qy7UBuXb16tg0F5gJH",
  "Nonce": "eAecR4vGq_5M5slGVfKIxIupMU8qy7UBuXb16tg0F5gJH",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "eAecR4vGq_5M5slGVfKIxIupMU8qy7UBuXb16tg0F5gJH",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "_aDEqKt_1tonJoh_6Jp7qI7mfj9JKZFmfAim9khSmjE",
    "code_challenge_method": "S256",
    "nonce": "eAecR4vGq_5M5slGVfKIxIupMU8qy7UBuXb16tg0F5gJH"
  }
}
2020-01-19 13:32:18.894 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:32:18.895 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:32:18.908 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****9dec"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000008B",
  "TimeStamp": "2020-01-19T12:32:18Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:32:18.909 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "eAecR4vGq_5M5slGVfKIxIupMU8qy7UBuXb16tg0F5gJH",
  "Scope": "openid profile api"
}
2020-01-19 13:32:19.408 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:32:19.409 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:19.409 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:19.409 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:32:19.410 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:32:19.410 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:32:19.410 +01:00 [DBG] Start discovery request
2020-01-19 13:32:19.452 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:32:19.453 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:19.453 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:19.454 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:32:19.454 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:32:19.455 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:32:19.455 +01:00 [DBG] Start key discovery request
2020-01-19 13:32:19.498 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:19.499 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:19.500 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:32:19.501 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:32:19.501 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:32:19.502 +01:00 [DBG] Start authorize request
2020-01-19 13:32:19.502 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:32:19.504 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:32:19.505 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:32:19.506 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:32:19.506 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "gP_oKdhUyXoaqcpGV4Fd3sC4meZJYlDG1yEIjqiiajtIP",
  "Nonce": "gP_oKdhUyXoaqcpGV4Fd3sC4meZJYlDG1yEIjqiiajtIP",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "gP_oKdhUyXoaqcpGV4Fd3sC4meZJYlDG1yEIjqiiajtIP",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "4OJIiPCnrwLKqt_ZnxfOPMOCia_frdOi5sgxAA3aJO4",
    "code_challenge_method": "S256",
    "nonce": "gP_oKdhUyXoaqcpGV4Fd3sC4meZJYlDG1yEIjqiiajtIP"
  }
}
2020-01-19 13:32:19.507 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:32:19.507 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:32:19.519 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****c8d5"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000008C",
  "TimeStamp": "2020-01-19T12:32:19Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:32:19.521 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "gP_oKdhUyXoaqcpGV4Fd3sC4meZJYlDG1yEIjqiiajtIP",
  "Scope": "openid profile api"
}
2020-01-19 13:32:20.092 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:32:20.092 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:20.093 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:20.093 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:32:20.093 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:32:20.094 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:32:20.094 +01:00 [DBG] Start discovery request
2020-01-19 13:32:20.156 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:32:20.157 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:20.157 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:20.158 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:32:20.158 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:32:20.158 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:32:20.159 +01:00 [DBG] Start key discovery request
2020-01-19 13:32:20.206 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:20.206 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:20.207 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:32:20.207 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:32:20.207 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:32:20.208 +01:00 [DBG] Start authorize request
2020-01-19 13:32:20.208 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:32:20.208 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:32:20.209 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:32:20.209 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:32:20.209 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "6kWyjrvuzlPj0Wpy7OU2X8tyZc0KyRTERcRPrCQgEMB2n",
  "Nonce": "6kWyjrvuzlPj0Wpy7OU2X8tyZc0KyRTERcRPrCQgEMB2n",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "6kWyjrvuzlPj0Wpy7OU2X8tyZc0KyRTERcRPrCQgEMB2n",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "LOr9Fx50-5npraUg-WHwRT8q9O6LjJ4oLGJbh9F9RMQ",
    "code_challenge_method": "S256",
    "nonce": "6kWyjrvuzlPj0Wpy7OU2X8tyZc0KyRTERcRPrCQgEMB2n"
  }
}
2020-01-19 13:32:20.211 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:32:20.213 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:32:20.229 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****c167"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000008D",
  "TimeStamp": "2020-01-19T12:32:20Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:32:20.231 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "6kWyjrvuzlPj0Wpy7OU2X8tyZc0KyRTERcRPrCQgEMB2n",
  "Scope": "openid profile api"
}
2020-01-19 13:32:20.717 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:32:20.717 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:20.717 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:20.717 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:32:20.718 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:32:20.718 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:32:20.718 +01:00 [DBG] Start discovery request
2020-01-19 13:32:20.758 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:32:20.758 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:32:20.758 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:32:20.759 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:32:20.759 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:32:20.759 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:32:20.759 +01:00 [DBG] Start key discovery request
2020-01-19 13:32:20.786 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:20.787 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:32:20.788 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:32:20.788 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:32:20.788 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:32:20.789 +01:00 [DBG] Start authorize request
2020-01-19 13:32:20.789 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:32:20.789 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:32:20.789 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:32:20.790 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:32:20.790 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "zqTnFIe5nJ-RqMiHbvion8xd0u4EFlUdJlGQndadOyHX5",
  "Nonce": "zqTnFIe5nJ-RqMiHbvion8xd0u4EFlUdJlGQndadOyHX5",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "zqTnFIe5nJ-RqMiHbvion8xd0u4EFlUdJlGQndadOyHX5",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "ToiFau63GaRCEWN1dBRSroADJZ6xaVrH6uL1HqMIBgI",
    "code_challenge_method": "S256",
    "nonce": "zqTnFIe5nJ-RqMiHbvion8xd0u4EFlUdJlGQndadOyHX5"
  }
}
2020-01-19 13:32:20.791 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:32:20.791 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:32:20.801 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****ee09"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000008E",
  "TimeStamp": "2020-01-19T12:32:20Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:32:20.812 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "zqTnFIe5nJ-RqMiHbvion8xd0u4EFlUdJlGQndadOyHX5",
  "Scope": "openid profile api"
}
2020-01-19 13:33:11.825 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:11.826 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:11.826 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:11.826 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:11.826 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:11.827 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:11.827 +01:00 [DBG] Start discovery request
2020-01-19 13:33:11.870 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:11.871 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:11.871 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:11.872 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:11.872 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:11.872 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:11.872 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:11.906 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:11.908 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:11.909 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:11.910 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:11.912 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:11.913 +01:00 [DBG] Start authorize request
2020-01-19 13:33:11.916 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:11.918 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:11.918 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:11.918 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:11.919 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "mXqqdNg02sVA8c32g3mwxIJG8pyQbXpxmzvMc3VAqUWC9",
  "Nonce": "mXqqdNg02sVA8c32g3mwxIJG8pyQbXpxmzvMc3VAqUWC9",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "mXqqdNg02sVA8c32g3mwxIJG8pyQbXpxmzvMc3VAqUWC9",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "P-wn7pv2dc7MNsGL32D8gp0Sz8Hpz2ucjyFD2hBV0sM",
    "code_challenge_method": "S256",
    "nonce": "mXqqdNg02sVA8c32g3mwxIJG8pyQbXpxmzvMc3VAqUWC9"
  }
}
2020-01-19 13:33:11.920 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:11.920 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:11.928 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****075d"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000008F",
  "TimeStamp": "2020-01-19T12:33:11Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:11.929 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "mXqqdNg02sVA8c32g3mwxIJG8pyQbXpxmzvMc3VAqUWC9",
  "Scope": "openid profile api"
}
2020-01-19 13:33:12.388 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:12.389 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:12.389 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:12.390 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:12.390 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:12.390 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:12.391 +01:00 [DBG] Start discovery request
2020-01-19 13:33:12.434 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:12.434 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:12.434 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:12.435 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:12.435 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:12.435 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:12.435 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:12.461 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:12.464 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:12.468 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:12.468 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:12.469 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:12.469 +01:00 [DBG] Start authorize request
2020-01-19 13:33:12.470 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:12.470 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:12.470 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:12.471 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:12.471 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "NODPkYDxuHRxTZPPtJ4ZgyEPhQ1rdQ_O8vTbSlGDskKn2",
  "Nonce": "NODPkYDxuHRxTZPPtJ4ZgyEPhQ1rdQ_O8vTbSlGDskKn2",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "NODPkYDxuHRxTZPPtJ4ZgyEPhQ1rdQ_O8vTbSlGDskKn2",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "tZa-q81AF7H5HeHIlnbSw7M36-lLJusO5Vdnhp9eTJ8",
    "code_challenge_method": "S256",
    "nonce": "NODPkYDxuHRxTZPPtJ4ZgyEPhQ1rdQ_O8vTbSlGDskKn2"
  }
}
2020-01-19 13:33:12.473 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:12.474 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:12.483 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****2042"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000090",
  "TimeStamp": "2020-01-19T12:33:12Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:12.484 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "NODPkYDxuHRxTZPPtJ4ZgyEPhQ1rdQ_O8vTbSlGDskKn2",
  "Scope": "openid profile api"
}
2020-01-19 13:33:12.930 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:12.931 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:12.932 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:12.935 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:12.935 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:12.935 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:12.936 +01:00 [DBG] Start discovery request
2020-01-19 13:33:12.967 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:12.968 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:12.968 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:12.968 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:12.969 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:12.969 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:12.969 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:13.009 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:13.010 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:13.010 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:13.011 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:13.011 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:13.012 +01:00 [DBG] Start authorize request
2020-01-19 13:33:13.012 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:13.012 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:13.012 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:13.013 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:13.013 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "XVr7XD4e1whEHONhRS6JeMVRTDsRLWvTyObjg30l98_sN",
  "Nonce": "XVr7XD4e1whEHONhRS6JeMVRTDsRLWvTyObjg30l98_sN",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "XVr7XD4e1whEHONhRS6JeMVRTDsRLWvTyObjg30l98_sN",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "2Plw-p21UghQod42A93YLM1BXSdoeav6FK38PECArGg",
    "code_challenge_method": "S256",
    "nonce": "XVr7XD4e1whEHONhRS6JeMVRTDsRLWvTyObjg30l98_sN"
  }
}
2020-01-19 13:33:13.014 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:13.014 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:13.026 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****25b5"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000091",
  "TimeStamp": "2020-01-19T12:33:13Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:13.029 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "XVr7XD4e1whEHONhRS6JeMVRTDsRLWvTyObjg30l98_sN",
  "Scope": "openid profile api"
}
2020-01-19 13:33:13.429 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:13.429 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:13.431 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:13.431 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:13.435 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:13.435 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:13.435 +01:00 [DBG] Start discovery request
2020-01-19 13:33:13.468 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:13.469 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:13.469 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:13.470 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:13.471 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:13.471 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:13.471 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:13.508 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:13.509 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:13.509 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:13.510 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:13.510 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:13.510 +01:00 [DBG] Start authorize request
2020-01-19 13:33:13.511 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:13.511 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:13.511 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:13.512 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:13.512 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "lkuJoZZGIcr_jlf3ul4OMq4Bg2Cp8-NZ6Tp1R6PdziUuj",
  "Nonce": "lkuJoZZGIcr_jlf3ul4OMq4Bg2Cp8-NZ6Tp1R6PdziUuj",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "lkuJoZZGIcr_jlf3ul4OMq4Bg2Cp8-NZ6Tp1R6PdziUuj",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "iOLSN58RBpLDy3xnIFguWVRGorVDLeq6s5HWFb2rDQw",
    "code_challenge_method": "S256",
    "nonce": "lkuJoZZGIcr_jlf3ul4OMq4Bg2Cp8-NZ6Tp1R6PdziUuj"
  }
}
2020-01-19 13:33:13.513 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:13.513 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:13.521 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****2eaf"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000092",
  "TimeStamp": "2020-01-19T12:33:13Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:13.533 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "lkuJoZZGIcr_jlf3ul4OMq4Bg2Cp8-NZ6Tp1R6PdziUuj",
  "Scope": "openid profile api"
}
2020-01-19 13:33:13.996 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:13.996 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:13.997 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:13.997 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:13.997 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:13.997 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:13.998 +01:00 [DBG] Start discovery request
2020-01-19 13:33:14.039 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:14.040 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:14.041 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:14.041 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:14.045 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:14.045 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:14.045 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:14.089 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:14.089 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:14.090 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:14.090 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:14.091 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:14.091 +01:00 [DBG] Start authorize request
2020-01-19 13:33:14.092 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:14.092 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:14.092 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:14.093 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:14.093 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "-obHs_kI5a3YKz7tCNZ3WqBhHeOOKvX7b0q0Vm5iEiFVl",
  "Nonce": "-obHs_kI5a3YKz7tCNZ3WqBhHeOOKvX7b0q0Vm5iEiFVl",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "-obHs_kI5a3YKz7tCNZ3WqBhHeOOKvX7b0q0Vm5iEiFVl",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "AQN_QDkS5CeQ_JwFHb_SE2d8DPP6gHtx9WR9j5hnzpw",
    "code_challenge_method": "S256",
    "nonce": "-obHs_kI5a3YKz7tCNZ3WqBhHeOOKvX7b0q0Vm5iEiFVl"
  }
}
2020-01-19 13:33:14.094 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:14.094 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:14.105 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****2d34"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000093",
  "TimeStamp": "2020-01-19T12:33:14Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:14.117 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "-obHs_kI5a3YKz7tCNZ3WqBhHeOOKvX7b0q0Vm5iEiFVl",
  "Scope": "openid profile api"
}
2020-01-19 13:33:14.550 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:14.550 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:14.550 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:14.551 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:14.551 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:14.551 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:14.552 +01:00 [DBG] Start discovery request
2020-01-19 13:33:14.659 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:14.660 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:14.660 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:14.660 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:14.661 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:14.661 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:14.662 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:14.997 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:14.999 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:14.999 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:14.999 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:15.000 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:15.000 +01:00 [DBG] Start authorize request
2020-01-19 13:33:15.000 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:15.000 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:15.001 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:15.001 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:15.001 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "KLWLfDsXJmVerRFyfELwFrzWvuqvLRrBDOVfMKXROHlHz",
  "Nonce": "KLWLfDsXJmVerRFyfELwFrzWvuqvLRrBDOVfMKXROHlHz",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "KLWLfDsXJmVerRFyfELwFrzWvuqvLRrBDOVfMKXROHlHz",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "iHmyCfqxMtP32oT8WGydzGAn-3eu0ONbuVXen4cxiT0",
    "code_challenge_method": "S256",
    "nonce": "KLWLfDsXJmVerRFyfELwFrzWvuqvLRrBDOVfMKXROHlHz"
  }
}
2020-01-19 13:33:15.002 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:15.002 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:15.010 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****ea99"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000094",
  "TimeStamp": "2020-01-19T12:33:15Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:15.011 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "KLWLfDsXJmVerRFyfELwFrzWvuqvLRrBDOVfMKXROHlHz",
  "Scope": "openid profile api"
}
2020-01-19 13:33:15.603 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:15.603 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:15.604 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:15.604 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:15.604 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:15.604 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:15.605 +01:00 [DBG] Start discovery request
2020-01-19 13:33:15.643 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:15.643 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:15.643 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:15.644 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:15.644 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:15.644 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:15.645 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:15.678 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:15.678 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:15.679 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:15.679 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:15.679 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:15.680 +01:00 [DBG] Start authorize request
2020-01-19 13:33:15.681 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:15.681 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:15.681 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:15.682 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:15.683 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "4n7SO5zLKifmzE-Aq-vvE_Ylqlky_qCBE75_lsB9W4fQS",
  "Nonce": "4n7SO5zLKifmzE-Aq-vvE_Ylqlky_qCBE75_lsB9W4fQS",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "4n7SO5zLKifmzE-Aq-vvE_Ylqlky_qCBE75_lsB9W4fQS",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "n39pstmR1WHQRBoqQExPiMS7JtGxfvMsDaV97rMZ2xo",
    "code_challenge_method": "S256",
    "nonce": "4n7SO5zLKifmzE-Aq-vvE_Ylqlky_qCBE75_lsB9W4fQS"
  }
}
2020-01-19 13:33:15.684 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:15.684 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:15.694 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****cd3e"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000095",
  "TimeStamp": "2020-01-19T12:33:15Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:15.704 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "4n7SO5zLKifmzE-Aq-vvE_Ylqlky_qCBE75_lsB9W4fQS",
  "Scope": "openid profile api"
}
2020-01-19 13:33:16.116 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:16.116 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:16.117 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:16.117 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:16.117 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:16.117 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:16.118 +01:00 [DBG] Start discovery request
2020-01-19 13:33:16.158 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:16.159 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:16.159 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:16.160 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:16.160 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:16.160 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:16.160 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:16.197 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:16.199 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:16.199 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:16.200 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:16.201 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:16.201 +01:00 [DBG] Start authorize request
2020-01-19 13:33:16.201 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:16.202 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:16.202 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:16.202 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:16.203 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "VJXYpyDJ6i1DCPXqj8o7TJG6Se_523SCDgrH2wfziEM5H",
  "Nonce": "VJXYpyDJ6i1DCPXqj8o7TJG6Se_523SCDgrH2wfziEM5H",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "VJXYpyDJ6i1DCPXqj8o7TJG6Se_523SCDgrH2wfziEM5H",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "pE6UL0kGwD7XmvfgjGj23loNNMb6a9_akuT6iKF65yg",
    "code_challenge_method": "S256",
    "nonce": "VJXYpyDJ6i1DCPXqj8o7TJG6Se_523SCDgrH2wfziEM5H"
  }
}
2020-01-19 13:33:16.204 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:16.204 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:16.217 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****82b0"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000096",
  "TimeStamp": "2020-01-19T12:33:16Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:16.224 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "VJXYpyDJ6i1DCPXqj8o7TJG6Se_523SCDgrH2wfziEM5H",
  "Scope": "openid profile api"
}
2020-01-19 13:33:16.637 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:16.637 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:16.637 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:16.637 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:16.638 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:16.638 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:16.638 +01:00 [DBG] Start discovery request
2020-01-19 13:33:16.674 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:16.675 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:16.675 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:16.676 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:16.676 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:16.676 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:16.676 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:16.708 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:16.709 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:16.709 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:16.710 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:16.711 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:16.711 +01:00 [DBG] Start authorize request
2020-01-19 13:33:16.711 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:16.712 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:16.712 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:16.712 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:16.713 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "LvtBmBxfEhMIFnmax_3ptDNq4s7-z0cw7eJ5fB8CK2DM3",
  "Nonce": "LvtBmBxfEhMIFnmax_3ptDNq4s7-z0cw7eJ5fB8CK2DM3",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "LvtBmBxfEhMIFnmax_3ptDNq4s7-z0cw7eJ5fB8CK2DM3",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "LcxIiqiXKQOEsvI5g62koJK7HiEtAAbhUyVGed5VE4A",
    "code_challenge_method": "S256",
    "nonce": "LvtBmBxfEhMIFnmax_3ptDNq4s7-z0cw7eJ5fB8CK2DM3"
  }
}
2020-01-19 13:33:16.714 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:16.714 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:16.725 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****6aae"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000097",
  "TimeStamp": "2020-01-19T12:33:16Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:16.726 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "LvtBmBxfEhMIFnmax_3ptDNq4s7-z0cw7eJ5fB8CK2DM3",
  "Scope": "openid profile api"
}
2020-01-19 13:33:17.243 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:17.243 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:17.244 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:17.244 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:17.245 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:17.245 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:17.246 +01:00 [DBG] Start discovery request
2020-01-19 13:33:17.289 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:17.289 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:17.289 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:17.290 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:17.290 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:17.290 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:17.291 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:17.334 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:17.335 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:17.335 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:17.338 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:17.338 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:17.341 +01:00 [DBG] Start authorize request
2020-01-19 13:33:17.342 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:17.342 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:17.343 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:17.343 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:17.344 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "yib623E23IfsbctkBFqdsbfRGkXRnJpuye_y-lqKf2Oa3",
  "Nonce": "yib623E23IfsbctkBFqdsbfRGkXRnJpuye_y-lqKf2Oa3",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "yib623E23IfsbctkBFqdsbfRGkXRnJpuye_y-lqKf2Oa3",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "TJsVyVCchW9G1zDDjRwYXi5tKizDMuJfzS_8wyIVlko",
    "code_challenge_method": "S256",
    "nonce": "yib623E23IfsbctkBFqdsbfRGkXRnJpuye_y-lqKf2Oa3"
  }
}
2020-01-19 13:33:17.346 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:17.346 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:17.357 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****77bb"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000098",
  "TimeStamp": "2020-01-19T12:33:17Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:17.357 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "yib623E23IfsbctkBFqdsbfRGkXRnJpuye_y-lqKf2Oa3",
  "Scope": "openid profile api"
}
2020-01-19 13:33:17.816 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:17.818 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:17.819 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:17.819 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:17.820 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:17.820 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:17.820 +01:00 [DBG] Start discovery request
2020-01-19 13:33:18.025 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:18.025 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:18.026 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:18.026 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:18.026 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:18.027 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:18.027 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:18.374 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:18.375 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:18.375 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:18.376 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:18.376 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:18.376 +01:00 [DBG] Start authorize request
2020-01-19 13:33:18.376 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:18.376 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:18.377 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:18.377 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:18.377 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "wwuT5a2DpnQXKA0LVtlZT1EuptrPn0tICfkprt_ns-s2R",
  "Nonce": "wwuT5a2DpnQXKA0LVtlZT1EuptrPn0tICfkprt_ns-s2R",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "wwuT5a2DpnQXKA0LVtlZT1EuptrPn0tICfkprt_ns-s2R",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "EX0myyDTXFxY8vLhGqqccjB2hs0wlOsNnWpR5sJTGJ0",
    "code_challenge_method": "S256",
    "nonce": "wwuT5a2DpnQXKA0LVtlZT1EuptrPn0tICfkprt_ns-s2R"
  }
}
2020-01-19 13:33:18.379 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:18.379 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:18.391 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****e40a"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:00000099",
  "TimeStamp": "2020-01-19T12:33:18Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:18.395 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "wwuT5a2DpnQXKA0LVtlZT1EuptrPn0tICfkprt_ns-s2R",
  "Scope": "openid profile api"
}
2020-01-19 13:33:18.972 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:18.973 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:18.973 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:18.974 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:18.974 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:18.974 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:18.975 +01:00 [DBG] Start discovery request
2020-01-19 13:33:19.021 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:19.022 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:19.023 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:19.023 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:19.023 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:19.024 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:19.024 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:19.127 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:19.128 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:19.128 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:19.129 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:19.129 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:19.129 +01:00 [DBG] Start authorize request
2020-01-19 13:33:19.129 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:19.129 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:19.130 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:19.130 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:19.131 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "Ct6mXqY3FsDCIkJuOpmR7B34Hn9zEqF7oTcvry0cG2vJB",
  "Nonce": "Ct6mXqY3FsDCIkJuOpmR7B34Hn9zEqF7oTcvry0cG2vJB",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "Ct6mXqY3FsDCIkJuOpmR7B34Hn9zEqF7oTcvry0cG2vJB",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "4dn9_LbFNI5Mh6ATeM-WgvN05ph4vLg93GnC3lDiOGA",
    "code_challenge_method": "S256",
    "nonce": "Ct6mXqY3FsDCIkJuOpmR7B34Hn9zEqF7oTcvry0cG2vJB"
  }
}
2020-01-19 13:33:19.132 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:19.132 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:19.140 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****b3c1"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000009A",
  "TimeStamp": "2020-01-19T12:33:19Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:19.141 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "Ct6mXqY3FsDCIkJuOpmR7B34Hn9zEqF7oTcvry0cG2vJB",
  "Scope": "openid profile api"
}
2020-01-19 13:33:19.622 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:19.623 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:19.623 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:19.624 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:19.624 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:19.624 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:19.624 +01:00 [DBG] Start discovery request
2020-01-19 13:33:19.663 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:19.663 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:19.664 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:19.665 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:19.670 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:19.670 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:19.671 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:19.715 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:19.718 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:19.718 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:19.719 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:19.719 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:19.720 +01:00 [DBG] Start authorize request
2020-01-19 13:33:19.721 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:19.721 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:19.728 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:19.729 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:19.734 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "t2blRnxn5rZ1hUJf_kT4bhlhIqRW-MmpY9LhGQOdwvmuz",
  "Nonce": "t2blRnxn5rZ1hUJf_kT4bhlhIqRW-MmpY9LhGQOdwvmuz",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "t2blRnxn5rZ1hUJf_kT4bhlhIqRW-MmpY9LhGQOdwvmuz",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "31NoWcLbYdAo7IaV1n7qlHvy7YwOIkdA73NCZ8oKj10",
    "code_challenge_method": "S256",
    "nonce": "t2blRnxn5rZ1hUJf_kT4bhlhIqRW-MmpY9LhGQOdwvmuz"
  }
}
2020-01-19 13:33:19.735 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:19.735 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:19.744 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****9c31"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000009B",
  "TimeStamp": "2020-01-19T12:33:19Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:19.744 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "t2blRnxn5rZ1hUJf_kT4bhlhIqRW-MmpY9LhGQOdwvmuz",
  "Scope": "openid profile api"
}
2020-01-19 13:33:20.226 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:20.228 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:20.228 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:20.231 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:20.231 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:20.231 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:20.232 +01:00 [DBG] Start discovery request
2020-01-19 13:33:20.279 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:20.280 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:20.280 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:20.280 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:20.280 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:20.281 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:20.281 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:20.311 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:20.312 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:20.312 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:20.314 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:20.316 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:20.317 +01:00 [DBG] Start authorize request
2020-01-19 13:33:20.323 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:20.323 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:20.324 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:20.324 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:20.324 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "dSVnWyuqGcU5riYCNgym3JhURS53QjaJjXuCdyn9wDCDw",
  "Nonce": "dSVnWyuqGcU5riYCNgym3JhURS53QjaJjXuCdyn9wDCDw",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "dSVnWyuqGcU5riYCNgym3JhURS53QjaJjXuCdyn9wDCDw",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "haQ2PfK-gc8SBQl-9hvOjI6K7-CIgDLjaDha4RuCe0s",
    "code_challenge_method": "S256",
    "nonce": "dSVnWyuqGcU5riYCNgym3JhURS53QjaJjXuCdyn9wDCDw"
  }
}
2020-01-19 13:33:20.325 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:20.326 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:20.335 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****ed0f"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000009C",
  "TimeStamp": "2020-01-19T12:33:20Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:20.337 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "dSVnWyuqGcU5riYCNgym3JhURS53QjaJjXuCdyn9wDCDw",
  "Scope": "openid profile api"
}
2020-01-19 13:33:20.773 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:20.774 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:20.774 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:20.774 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:20.775 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:20.775 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:20.775 +01:00 [DBG] Start discovery request
2020-01-19 13:33:20.831 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:20.832 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:20.832 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:20.832 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:20.833 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:20.833 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:20.833 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:20.868 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:20.868 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:20.869 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:20.869 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:20.870 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:20.870 +01:00 [DBG] Start authorize request
2020-01-19 13:33:20.871 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:20.871 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:20.872 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:20.874 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:20.874 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "-g9ngueskH447ImFPZJRN6WF6cNySt2Lud-ycFsORpSNn",
  "Nonce": "-g9ngueskH447ImFPZJRN6WF6cNySt2Lud-ycFsORpSNn",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "-g9ngueskH447ImFPZJRN6WF6cNySt2Lud-ycFsORpSNn",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "yT70YD3jA-Hd4yf9AnM5_sMh023mgpF3Kc3-CO0XFIw",
    "code_challenge_method": "S256",
    "nonce": "-g9ngueskH447ImFPZJRN6WF6cNySt2Lud-ycFsORpSNn"
  }
}
2020-01-19 13:33:20.875 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:20.875 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:20.883 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****a66f"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000009D",
  "TimeStamp": "2020-01-19T12:33:20Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:20.904 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "-g9ngueskH447ImFPZJRN6WF6cNySt2Lud-ycFsORpSNn",
  "Scope": "openid profile api"
}
2020-01-19 13:33:21.383 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:21.383 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:21.383 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:21.384 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:21.384 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:21.384 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:21.384 +01:00 [DBG] Start discovery request
2020-01-19 13:33:21.425 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:33:21.426 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:21.426 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:21.427 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:33:21.427 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:33:21.429 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:33:21.430 +01:00 [DBG] Start key discovery request
2020-01-19 13:33:21.475 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:21.476 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:33:21.476 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 13:33:21.477 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 13:33:21.477 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 13:33:21.478 +01:00 [DBG] Start authorize request
2020-01-19 13:33:21.478 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 13:33:21.479 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 13:33:21.479 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 13:33:21.480 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 13:33:21.480 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "lXauha4K218PkB8JWBWgbYiXhGzFpL1RGQPYiW9AaveiP",
  "Nonce": "lXauha4K218PkB8JWBWgbYiXhGzFpL1RGQPYiW9AaveiP",
  "SessionId": "025b94e81439481866b0cfcd80f0c6cf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "lXauha4K218PkB8JWBWgbYiXhGzFpL1RGQPYiW9AaveiP",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "eNTvZa-fVNeAMns1eoyc4y7tsvkUMlvKRfmB-waCybc",
    "code_challenge_method": "S256",
    "nonce": "lXauha4K218PkB8JWBWgbYiXhGzFpL1RGQPYiW9AaveiP"
  }
}
2020-01-19 13:33:21.481 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 13:33:21.481 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 13:33:21.495 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****58a1"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDC:0000009E",
  "TimeStamp": "2020-01-19T12:33:21Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:33:21.498 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "lXauha4K218PkB8JWBWgbYiXhGzFpL1RGQPYiW9AaveiP",
  "Scope": "openid profile api"
}
2020-01-19 13:33:21.988 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:33:21.989 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:33:21.990 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:33:21.991 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:33:21.991 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:33:21.992 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:33:21.992 +01:00 [DBG] Start discovery request
2020-01-19 13:35:04.209 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:35:04.210 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:35:04.210 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:35:04.211 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:35:04.211 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:35:04.211 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:35:04.212 +01:00 [DBG] Start discovery request
2020-01-19 13:35:04.259 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:35:04.260 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:35:04.262 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:35:04.263 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:35:04.267 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:35:04.268 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:35:04.268 +01:00 [DBG] Start key discovery request
2020-01-19 13:35:09.465 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:35:09.465 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:35:09.466 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:35:09.466 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:35:09.466 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:35:09.466 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:35:09.467 +01:00 [DBG] Start discovery request
2020-01-19 13:35:09.501 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:35:09.501 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:35:09.502 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:35:09.502 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:35:09.502 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:35:09.502 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:35:09.503 +01:00 [DBG] Start key discovery request
2020-01-19 13:40:48.123 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:40:48.124 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:40:48.124 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:40:48.125 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:40:48.125 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:40:48.125 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:40:48.125 +01:00 [DBG] Start discovery request
2020-01-19 13:40:48.161 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:40:48.161 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:40:48.162 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:40:48.162 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:40:48.162 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:40:48.162 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:40:48.163 +01:00 [DBG] Start key discovery request
2020-01-19 13:47:21.558 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:47:21.560 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:47:21.560 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:47:21.560 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:47:21.561 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:47:21.562 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:47:21.562 +01:00 [DBG] Start discovery request
2020-01-19 13:47:21.591 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:47:21.592 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:47:21.593 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:47:21.593 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:47:21.594 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:47:21.594 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:47:21.595 +01:00 [DBG] Start key discovery request
2020-01-19 13:47:51.711 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:47:51.715 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:47:51.716 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:47:51.720 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:47:51.721 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:47:51.721 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:47:51.722 +01:00 [DBG] Start discovery request
2020-01-19 13:47:51.790 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:47:51.798 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:47:51.804 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:47:51.804 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:47:51.805 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:47:51.806 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:47:51.807 +01:00 [DBG] Start key discovery request
2020-01-19 13:48:52.577 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:48:52.578 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:48:52.948 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:48:52.949 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:48:55.403 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:48:55.404 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:48:57.061 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 13:48:57.062 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:48:57.063 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 13:48:57.074 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-19 13:48:57.080 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "ActivityId": "0HLSSRA3BHEDG:00000004",
  "TimeStamp": "2020-01-19T12:48:57Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 13:48:57.278 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-01-19 13:48:57.296 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-01-19 13:48:57.297 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-01-19 13:48:57.299 +01:00 [DBG] Processing signout callback request
2020-01-19 13:48:57.314 +01:00 [DBG] No client front-channel logout URLs
2020-01-19 13:48:57.315 +01:00 [DBG] No client back-channel logout URLs
2020-01-19 13:48:57.318 +01:00 [INF] Successful signout callback.
2020-01-19 13:48:57.318 +01:00 [DBG] No client front-channel iframe urls
2020-01-19 13:48:57.319 +01:00 [DBG] No client back-channel iframe urls
2020-01-19 13:49:00.777 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:49:00.778 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:49:00.779 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:49:00.779 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:49:00.780 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:49:00.780 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:49:00.780 +01:00 [DBG] Start discovery request
2020-01-19 13:49:00.802 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:49:00.802 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:49:00.803 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:49:00.803 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:49:00.804 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:49:00.805 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:49:00.808 +01:00 [DBG] Start key discovery request
2020-01-19 13:49:02.835 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:49:02.836 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:49:02.837 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:49:02.837 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:49:02.838 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:49:02.838 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:49:02.839 +01:00 [DBG] Start discovery request
2020-01-19 13:49:02.862 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:49:02.863 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:49:02.863 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:49:02.863 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:49:02.863 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:49:02.864 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:49:02.864 +01:00 [DBG] Start key discovery request
2020-01-19 13:49:43.279 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:49:43.280 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:49:43.280 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:49:43.281 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:49:43.282 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:49:43.283 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:49:43.283 +01:00 [DBG] Start discovery request
2020-01-19 13:49:43.317 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:49:43.317 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:49:43.318 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:49:43.318 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:49:43.319 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:49:43.319 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:49:43.320 +01:00 [DBG] Start key discovery request
2020-01-19 13:51:18.989 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:51:18.990 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:51:18.990 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:51:18.991 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:51:18.991 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:51:18.992 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:51:18.992 +01:00 [DBG] Start discovery request
2020-01-19 13:51:19.014 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:51:19.014 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:51:19.015 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:51:19.015 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:51:19.015 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:51:19.015 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:51:19.016 +01:00 [DBG] Start key discovery request
2020-01-19 13:51:34.489 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:51:34.489 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:51:34.490 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:51:34.490 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:51:34.491 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:51:34.491 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:51:34.492 +01:00 [DBG] Start discovery request
2020-01-19 13:51:34.526 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:51:34.528 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:51:34.528 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:51:34.528 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:51:34.529 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:51:34.529 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:51:34.530 +01:00 [DBG] Start key discovery request
2020-01-19 13:53:58.830 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:53:58.831 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:53:58.831 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:53:58.832 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:53:58.833 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:53:58.834 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:53:58.838 +01:00 [DBG] Start discovery request
2020-01-19 13:53:58.886 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:53:58.887 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:53:58.887 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:53:58.888 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:53:58.888 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:53:58.888 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:53:58.889 +01:00 [DBG] Start key discovery request
2020-01-19 13:54:01.071 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:54:01.072 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:54:01.072 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:54:01.073 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:54:01.073 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:54:01.073 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:54:01.074 +01:00 [DBG] Start discovery request
2020-01-19 13:54:01.109 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:54:01.109 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:54:01.110 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:54:01.110 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:54:01.110 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:54:01.111 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:54:01.111 +01:00 [DBG] Start key discovery request
2020-01-19 13:54:02.190 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:54:02.191 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:54:02.191 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:54:02.192 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:54:02.192 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:54:02.193 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:54:02.193 +01:00 [DBG] Start discovery request
2020-01-19 13:54:02.214 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:54:02.214 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:54:02.214 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:54:02.214 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:54:02.215 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:54:02.215 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:54:02.215 +01:00 [DBG] Start key discovery request
2020-01-19 13:54:03.007 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:54:03.010 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:54:03.013 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:54:03.013 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:54:03.014 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:54:03.014 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:54:03.015 +01:00 [DBG] Start discovery request
2020-01-19 13:54:03.055 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:54:03.056 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:54:03.057 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:54:03.058 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:54:03.063 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:54:03.063 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:54:03.064 +01:00 [DBG] Start key discovery request
2020-01-19 13:54:15.006 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:54:15.007 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:54:15.007 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:54:15.008 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:54:15.009 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:54:15.010 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:54:15.010 +01:00 [DBG] Start discovery request
2020-01-19 13:54:15.043 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:54:15.044 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:54:15.045 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:54:15.045 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:54:15.046 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:54:15.046 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:54:15.047 +01:00 [DBG] Start key discovery request
2020-01-19 13:54:35.225 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:54:35.226 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:54:35.226 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:54:35.226 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:54:35.226 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:54:35.227 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:54:35.227 +01:00 [DBG] Start discovery request
2020-01-19 13:54:35.241 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:54:35.241 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:54:35.241 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:54:35.242 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:54:35.242 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:54:35.242 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:54:35.242 +01:00 [DBG] Start key discovery request
2020-01-19 13:57:22.395 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:57:22.396 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:57:22.397 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:57:22.397 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:57:22.397 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:57:22.398 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:57:22.398 +01:00 [DBG] Start discovery request
2020-01-19 13:57:22.434 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:57:22.434 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:57:22.435 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:57:22.435 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:57:22.435 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:57:22.435 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:57:22.436 +01:00 [DBG] Start key discovery request
2020-01-19 13:59:46.977 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:59:46.978 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:59:46.979 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:59:46.979 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:59:46.980 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:59:46.980 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:59:46.980 +01:00 [DBG] Start discovery request
2020-01-19 13:59:47.004 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:59:47.004 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:59:47.005 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:59:47.005 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:59:47.005 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:59:47.005 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:59:47.006 +01:00 [DBG] Start key discovery request
2020-01-19 13:59:54.243 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:59:54.245 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:59:54.246 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:59:54.249 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:59:54.250 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:59:54.250 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:59:54.250 +01:00 [DBG] Start discovery request
2020-01-19 13:59:54.289 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:59:54.289 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:59:54.290 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:59:54.290 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:59:54.290 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:59:54.291 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:59:54.291 +01:00 [DBG] Start key discovery request
2020-01-19 13:59:55.905 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:59:55.905 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:59:55.906 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:59:55.906 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:59:55.907 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:59:55.907 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:59:55.908 +01:00 [DBG] Start discovery request
2020-01-19 13:59:55.931 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:59:55.932 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:59:55.932 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:59:55.932 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:59:55.932 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:59:55.933 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:59:55.933 +01:00 [DBG] Start key discovery request
2020-01-19 13:59:57.124 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:59:57.125 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:59:57.125 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:59:57.126 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:59:57.126 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:59:57.127 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:59:57.127 +01:00 [DBG] Start discovery request
2020-01-19 13:59:57.153 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:59:57.153 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:59:57.154 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:59:57.154 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:59:57.154 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:59:57.154 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:59:57.155 +01:00 [DBG] Start key discovery request
2020-01-19 13:59:58.470 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:59:58.471 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:59:58.471 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:59:58.473 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 13:59:58.474 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 13:59:58.478 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 13:59:58.479 +01:00 [DBG] Start discovery request
2020-01-19 13:59:58.506 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 13:59:58.507 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:59:58.508 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:59:58.508 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 13:59:58.509 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 13:59:58.509 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 13:59:58.509 +01:00 [DBG] Start key discovery request
2020-01-19 13:59:59.997 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 13:59:59.998 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 13:59:59.999 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 13:59:59.999 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:00:00.000 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:00:00.000 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:00:00.000 +01:00 [DBG] Start discovery request
2020-01-19 14:00:00.023 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:00:00.024 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:00.025 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:00.027 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:00:00.028 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:00:00.028 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:00:00.028 +01:00 [DBG] Start key discovery request
2020-01-19 14:00:14.872 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:00:14.873 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:14.874 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:14.874 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:00:14.875 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:00:14.875 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:00:14.876 +01:00 [DBG] Start discovery request
2020-01-19 14:00:14.911 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:00:14.912 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:14.912 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:14.913 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:00:14.913 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:00:14.914 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:00:14.915 +01:00 [DBG] Start key discovery request
2020-01-19 14:00:15.026 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:00:15.029 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:00:15.032 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:00:15.033 +01:00 [DBG] Start authorize request
2020-01-19 14:00:15.034 +01:00 [DBG] No user present in authorize request
2020-01-19 14:00:15.041 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:00:15.041 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:00:15.042 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:00:15.043 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "i1NTCvNDlKyx8Z7iuCSaLJOte0jC4C4wHrB-DM6ISVdBN",
  "Nonce": "i1NTCvNDlKyx8Z7iuCSaLJOte0jC4C4wHrB-DM6ISVdBN",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "i1NTCvNDlKyx8Z7iuCSaLJOte0jC4C4wHrB-DM6ISVdBN",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "-F-7pCppDkaKybNcoF-05vt3L_QfgRY8s6JuT4_PsDQ",
    "code_challenge_method": "S256",
    "nonce": "i1NTCvNDlKyx8Z7iuCSaLJOte0jC4C4wHrB-DM6ISVdBN"
  }
}
2020-01-19 14:00:15.044 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 14:00:15.056 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:00:15.056 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:00:15.057 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:00:24.639 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 14:00:24.641 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSRA3BHEDM:00000003",
  "TimeStamp": "2020-01-19T13:00:24Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:00:24.641 +01:00 [DBG] Augmenting SignInContext
2020-01-19 14:00:24.641 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 14:00:24.642 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 14:00:24.642 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 14:00:24.651 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:00:24.652 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:00:24.652 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 14:00:24.652 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 14:00:24.653 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 14:00:24.653 +01:00 [DBG] Start authorize callback request
2020-01-19 14:00:24.653 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:00:24.653 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:00:24.654 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:00:24.654 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:00:24.654 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "i1NTCvNDlKyx8Z7iuCSaLJOte0jC4C4wHrB-DM6ISVdBN",
  "Nonce": "i1NTCvNDlKyx8Z7iuCSaLJOte0jC4C4wHrB-DM6ISVdBN",
  "SessionId": "7fbb4204ab2f5bd2cf4cd6cee543726d",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "i1NTCvNDlKyx8Z7iuCSaLJOte0jC4C4wHrB-DM6ISVdBN",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "-F-7pCppDkaKybNcoF-05vt3L_QfgRY8s6JuT4_PsDQ",
    "code_challenge_method": "S256",
    "nonce": "i1NTCvNDlKyx8Z7iuCSaLJOte0jC4C4wHrB-DM6ISVdBN"
  }
}
2020-01-19 14:00:24.655 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:00:24.655 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:00:24.665 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****3ce8"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDM:00000004",
  "TimeStamp": "2020-01-19T13:00:24Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:00:24.666 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "i1NTCvNDlKyx8Z7iuCSaLJOte0jC4C4wHrB-DM6ISVdBN",
  "Scope": "openid profile api"
}
2020-01-19 14:00:24.667 +01:00 [DBG] Augmenting SignInContext
2020-01-19 14:00:24.667 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 14:00:25.422 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:00:25.424 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:25.426 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:25.429 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:00:25.430 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:00:25.430 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:00:25.431 +01:00 [DBG] Start discovery request
2020-01-19 14:00:25.470 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:00:25.470 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:25.471 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:25.471 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:00:25.471 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:00:25.472 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:00:25.472 +01:00 [DBG] Start key discovery request
2020-01-19 14:00:25.486 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:00:25.486 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:25.486 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:25.486 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:00:25.490 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:00:25.490 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:00:25.494 +01:00 [DBG] Start token request.
2020-01-19 14:00:25.497 +01:00 [DBG] Start client validation
2020-01-19 14:00:25.501 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:00:25.502 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:00:25.502 +01:00 [DBG] client id without secret found
2020-01-19 14:00:25.503 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:00:25.503 +01:00 [DBG] Secret id found: angular
2020-01-19 14:00:25.503 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:00:25.504 +01:00 [DBG] Client validation success
2020-01-19 14:00:25.508 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEDF:0000002B",
  "TimeStamp": "2020-01-19T13:00:25Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:00:25.511 +01:00 [DBG] Start token request validation
2020-01-19 14:00:25.516 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:00:25.533 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:00:25.534 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:00:25.540 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "bec4bb2dddcb4b50b2e559e4d2dc9895cbb466f1af0e273a316dfa90b5f23ce8",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "bec4bb2dddcb4b50b2e559e4d2dc9895cbb466f1af0e273a316dfa90b5f23ce8",
    "redirect_uri": "http://localhost:4201/index.html",
    "code_verifier": "hs2maOX7Aefo8gVrdpggYp981KLH2OIzU8GpPDuSjspTv",
    "client_id": "angular"
  }
}
2020-01-19 14:00:25.550 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:00:25.551 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:00:25.556 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:00:25.559 +01:00 [DBG] Issued claims: []
2020-01-19 14:00:25.610 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:00:25.610 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:00:25.615 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****zvCg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****vieg"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDF:0000002B",
  "TimeStamp": "2020-01-19T13:00:25Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:00:25.616 +01:00 [DBG] Token request success.
2020-01-19 14:00:29.280 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:00:29.281 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:29.281 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:29.281 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:00:29.282 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:00:29.282 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:00:29.283 +01:00 [DBG] Start discovery request
2020-01-19 14:00:29.305 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:00:29.306 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:29.306 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:29.306 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:00:29.307 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:00:29.307 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:00:29.308 +01:00 [DBG] Start key discovery request
2020-01-19 14:00:30.617 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:00:30.618 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:30.619 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:30.619 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:00:30.620 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:00:30.620 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:00:30.620 +01:00 [DBG] Start discovery request
2020-01-19 14:00:30.645 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:00:30.646 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:30.646 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:30.646 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:00:30.647 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:00:30.647 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:00:30.647 +01:00 [DBG] Start key discovery request
2020-01-19 14:00:31.901 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:00:31.902 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:31.903 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:31.903 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:00:31.903 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:00:31.904 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:00:31.904 +01:00 [DBG] Start discovery request
2020-01-19 14:00:31.927 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:00:31.928 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:31.929 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:31.929 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:00:31.929 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:00:31.930 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:00:31.930 +01:00 [DBG] Start key discovery request
2020-01-19 14:00:35.443 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:00:35.444 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:00:35.540 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:00:35.541 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:00:39.273 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:00:39.274 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:00:40.343 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 14:00:40.344 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:00:40.344 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:00:40.345 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-19 14:00:40.346 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "ActivityId": "0HLSSRA3BHEDM:00000008",
  "TimeStamp": "2020-01-19T13:00:40Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:00:40.378 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-01-19 14:00:40.380 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-01-19 14:00:40.381 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-01-19 14:00:40.381 +01:00 [DBG] Processing signout callback request
2020-01-19 14:00:40.382 +01:00 [DBG] No client front-channel logout URLs
2020-01-19 14:00:40.382 +01:00 [DBG] No client back-channel logout URLs
2020-01-19 14:00:40.383 +01:00 [INF] Successful signout callback.
2020-01-19 14:00:40.383 +01:00 [DBG] No client front-channel iframe urls
2020-01-19 14:00:40.384 +01:00 [DBG] No client back-channel iframe urls
2020-01-19 14:00:43.827 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:00:43.828 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:43.829 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:43.829 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:00:43.830 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:00:43.830 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:00:43.831 +01:00 [DBG] Start discovery request
2020-01-19 14:00:43.855 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:00:43.856 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:43.856 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:43.857 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:00:43.857 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:00:43.858 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:00:43.858 +01:00 [DBG] Start key discovery request
2020-01-19 14:00:46.302 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:00:46.303 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:46.303 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:46.304 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:00:46.304 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:00:46.305 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:00:46.305 +01:00 [DBG] Start discovery request
2020-01-19 14:00:46.327 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:00:46.328 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:00:46.328 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:00:46.328 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:00:46.328 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:00:46.329 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:00:46.329 +01:00 [DBG] Start key discovery request
2020-01-19 14:01:00.445 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:01:00.445 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:01:00.446 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:01:00.446 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:01:00.447 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:01:00.449 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:01:00.449 +01:00 [DBG] Start discovery request
2020-01-19 14:01:00.494 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:01:00.494 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:01:00.498 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:01:00.498 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:01:00.498 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:01:00.499 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:01:00.499 +01:00 [DBG] Start key discovery request
2020-01-19 14:01:00.536 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:01:00.537 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:01:00.537 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:01:00.538 +01:00 [DBG] Start authorize request
2020-01-19 14:01:00.538 +01:00 [DBG] No user present in authorize request
2020-01-19 14:01:00.538 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:01:00.538 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:01:00.538 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:01:00.539 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "k38dJHwSHhE-kMQwXWOBfBd1POhRHksai2FgecQL-DA4J",
  "Nonce": "k38dJHwSHhE-kMQwXWOBfBd1POhRHksai2FgecQL-DA4J",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "k38dJHwSHhE-kMQwXWOBfBd1POhRHksai2FgecQL-DA4J",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "wEOij-YecRCibmnfz-A-PTUU_6MC3-YBMgXC8QlUFkc",
    "code_challenge_method": "S256",
    "nonce": "k38dJHwSHhE-kMQwXWOBfBd1POhRHksai2FgecQL-DA4J"
  }
}
2020-01-19 14:01:00.539 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 14:01:00.585 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:01:00.586 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:01:00.586 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:01:06.248 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 14:01:06.250 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSRA3BHEDI:00000007",
  "TimeStamp": "2020-01-19T13:01:06Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:01:06.250 +01:00 [DBG] Augmenting SignInContext
2020-01-19 14:01:06.250 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 14:01:06.250 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 14:01:06.251 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 14:01:06.263 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:01:06.264 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:01:06.264 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 14:01:06.264 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 14:01:06.265 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 14:01:06.265 +01:00 [DBG] Start authorize callback request
2020-01-19 14:01:06.265 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:01:06.265 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:01:06.266 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:01:06.266 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:01:06.267 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "k38dJHwSHhE-kMQwXWOBfBd1POhRHksai2FgecQL-DA4J",
  "Nonce": "k38dJHwSHhE-kMQwXWOBfBd1POhRHksai2FgecQL-DA4J",
  "SessionId": "89b3fd2167af6452e6de3d165e98edbf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "k38dJHwSHhE-kMQwXWOBfBd1POhRHksai2FgecQL-DA4J",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "wEOij-YecRCibmnfz-A-PTUU_6MC3-YBMgXC8QlUFkc",
    "code_challenge_method": "S256",
    "nonce": "k38dJHwSHhE-kMQwXWOBfBd1POhRHksai2FgecQL-DA4J"
  }
}
2020-01-19 14:01:06.267 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:01:06.268 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:01:06.274 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****3f1c"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDI:00000008",
  "TimeStamp": "2020-01-19T13:01:06Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:01:06.281 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "k38dJHwSHhE-kMQwXWOBfBd1POhRHksai2FgecQL-DA4J",
  "Scope": "openid profile api"
}
2020-01-19 14:01:06.281 +01:00 [DBG] Augmenting SignInContext
2020-01-19 14:01:06.282 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 14:01:06.731 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:01:06.731 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:01:06.732 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:01:06.732 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:01:06.732 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:01:06.733 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:01:06.733 +01:00 [DBG] Start discovery request
2020-01-19 14:01:06.757 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:01:06.758 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:01:06.758 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:01:06.758 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:01:06.759 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:01:06.759 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:01:06.759 +01:00 [DBG] Start key discovery request
2020-01-19 14:01:06.795 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:01:06.795 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:01:06.796 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:01:06.796 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:01:06.797 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:01:06.797 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:01:06.798 +01:00 [DBG] Start token request.
2020-01-19 14:01:06.798 +01:00 [DBG] Start client validation
2020-01-19 14:01:06.799 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:01:06.799 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:01:06.800 +01:00 [DBG] client id without secret found
2020-01-19 14:01:06.800 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:01:06.800 +01:00 [DBG] Secret id found: angular
2020-01-19 14:01:06.800 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:01:06.801 +01:00 [DBG] Client validation success
2020-01-19 14:01:06.801 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEDF:0000003A",
  "TimeStamp": "2020-01-19T13:01:06Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:01:06.802 +01:00 [DBG] Start token request validation
2020-01-19 14:01:06.802 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:01:06.810 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:01:06.810 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:01:06.810 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "5c64de7fc353d66417ce6ce2daf0105133818f185bcb660e21c8612032b53f1c",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "5c64de7fc353d66417ce6ce2daf0105133818f185bcb660e21c8612032b53f1c",
    "redirect_uri": "http://localhost:4201/index.html",
    "code_verifier": "Y9dpDrpLdSvLGFID7s-TtGyHvfmadWL4Rn6WHljMKGZt6",
    "client_id": "angular"
  }
}
2020-01-19 14:01:06.811 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:01:06.811 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:01:06.811 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:01:06.811 +01:00 [DBG] Issued claims: []
2020-01-19 14:01:06.815 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:01:06.815 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:01:06.818 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****iVww"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Av3Q"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDF:0000003A",
  "TimeStamp": "2020-01-19T13:01:06Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:01:06.819 +01:00 [DBG] Token request success.
2020-01-19 14:01:15.905 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:01:15.906 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:01:15.906 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:01:15.907 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:01:15.912 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:01:15.914 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:01:15.915 +01:00 [DBG] Start discovery request
2020-01-19 14:01:15.950 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:01:15.951 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:01:15.952 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:01:15.952 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:01:15.952 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:01:15.953 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:01:15.953 +01:00 [DBG] Start key discovery request
2020-01-19 14:01:16.004 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:01:16.005 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:01:16.006 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:01:16.006 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:01:16.006 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:01:16.007 +01:00 [DBG] Start authorize request
2020-01-19 14:01:16.007 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:01:16.007 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:01:16.008 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:01:16.008 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:01:16.009 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "0HM7-Yd7glHwM4p7xwkoT6FEW4HAwGIR88ZtHdRdmFozq",
  "Nonce": "0HM7-Yd7glHwM4p7xwkoT6FEW4HAwGIR88ZtHdRdmFozq",
  "SessionId": "89b3fd2167af6452e6de3d165e98edbf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "0HM7-Yd7glHwM4p7xwkoT6FEW4HAwGIR88ZtHdRdmFozq",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "OiKwJLNUGKC5jhWPlDVCL6c8OXXCrz-H6WufTljYSp0",
    "code_challenge_method": "S256",
    "nonce": "0HM7-Yd7glHwM4p7xwkoT6FEW4HAwGIR88ZtHdRdmFozq"
  }
}
2020-01-19 14:01:16.013 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:01:16.013 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:01:16.020 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****69c1"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDI:00000009",
  "TimeStamp": "2020-01-19T13:01:16Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:01:16.021 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "0HM7-Yd7glHwM4p7xwkoT6FEW4HAwGIR88ZtHdRdmFozq",
  "Scope": "openid profile api"
}
2020-01-19 14:01:16.506 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:01:16.507 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:01:16.508 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:01:16.509 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:01:16.511 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:01:16.514 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:01:16.515 +01:00 [DBG] Start discovery request
2020-01-19 14:01:16.541 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:01:16.542 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:01:16.545 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:01:16.545 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:01:16.546 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:01:16.546 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:01:16.547 +01:00 [DBG] Start key discovery request
2020-01-19 14:01:16.566 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:01:16.567 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:01:16.567 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:01:16.567 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:01:16.567 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:01:16.568 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:01:16.568 +01:00 [DBG] Start token request.
2020-01-19 14:01:16.568 +01:00 [DBG] Start client validation
2020-01-19 14:01:16.568 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:01:16.568 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:01:16.569 +01:00 [DBG] client id without secret found
2020-01-19 14:01:16.569 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:01:16.569 +01:00 [DBG] Secret id found: angular
2020-01-19 14:01:16.569 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:01:16.569 +01:00 [DBG] Client validation success
2020-01-19 14:01:16.570 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEDF:0000003F",
  "TimeStamp": "2020-01-19T13:01:16Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:01:16.570 +01:00 [DBG] Start token request validation
2020-01-19 14:01:16.570 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:01:16.578 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:01:16.578 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:01:16.578 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "fef4bb534f30ed00475358b0ec5250f354856d3567237f753b800fa8adaa69c1",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "fef4bb534f30ed00475358b0ec5250f354856d3567237f753b800fa8adaa69c1",
    "redirect_uri": "http://localhost:4201/index.html",
    "code_verifier": "jM1mRX01Df4DG7ti8NgN9gItrdkwTdar6wMmRxf3Bbfxb",
    "client_id": "angular"
  }
}
2020-01-19 14:01:16.579 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:01:16.579 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:01:16.579 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:01:16.580 +01:00 [DBG] Issued claims: []
2020-01-19 14:01:16.584 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:01:16.584 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:01:16.588 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****mXQg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Yyvg"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDF:0000003F",
  "TimeStamp": "2020-01-19T13:01:16Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:01:16.588 +01:00 [DBG] Token request success.
2020-01-19 14:01:35.013 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:01:35.014 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:01:35.015 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:01:35.015 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:01:35.016 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:01:35.016 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:01:35.017 +01:00 [DBG] Start discovery request
2020-01-19 14:01:35.047 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:01:35.048 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:01:35.048 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:01:35.049 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:01:35.049 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:01:35.049 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:01:35.049 +01:00 [DBG] Start key discovery request
2020-01-19 14:01:51.851 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:01:51.852 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:01:51.854 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:01:51.855 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:01:51.858 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:01:51.858 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:01:51.861 +01:00 [DBG] Start discovery request
2020-01-19 14:01:51.933 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:01:51.934 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:01:51.935 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:01:51.935 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:01:51.937 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:01:51.949 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:01:51.951 +01:00 [DBG] Start key discovery request
2020-01-19 14:04:13.541 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:04:13.542 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:04:13.543 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:04:13.544 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:04:13.544 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:04:13.545 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:04:13.545 +01:00 [DBG] Start discovery request
2020-01-19 14:04:13.568 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:04:13.569 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:04:13.569 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:04:13.569 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:04:13.569 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:04:13.570 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:04:13.570 +01:00 [DBG] Start key discovery request
2020-01-19 14:04:13.641 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:04:13.642 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:04:13.643 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:04:13.643 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:04:13.645 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:04:13.646 +01:00 [DBG] Start authorize request
2020-01-19 14:04:13.650 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:04:13.650 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:04:13.650 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:04:13.651 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:04:13.652 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "-sdgLgOZW9S4FLaX3bYtVWtpgIg8eoHTuKKSk154dvbTM",
  "Nonce": "-sdgLgOZW9S4FLaX3bYtVWtpgIg8eoHTuKKSk154dvbTM",
  "SessionId": "89b3fd2167af6452e6de3d165e98edbf",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "-sdgLgOZW9S4FLaX3bYtVWtpgIg8eoHTuKKSk154dvbTM",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "UrhbrlUcoIcO9V7hYofn5I3dfBHSlYl62fWIyq2fh_A",
    "code_challenge_method": "S256",
    "nonce": "-sdgLgOZW9S4FLaX3bYtVWtpgIg8eoHTuKKSk154dvbTM"
  }
}
2020-01-19 14:04:13.653 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:04:13.653 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:04:13.661 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****4191"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDI:0000000A",
  "TimeStamp": "2020-01-19T13:04:13Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:04:13.661 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "-sdgLgOZW9S4FLaX3bYtVWtpgIg8eoHTuKKSk154dvbTM",
  "Scope": "openid profile api"
}
2020-01-19 14:04:14.101 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:04:14.102 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:04:14.103 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:04:14.103 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:04:14.104 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:04:14.104 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:04:14.104 +01:00 [DBG] Start discovery request
2020-01-19 14:04:14.130 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:04:14.131 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:04:14.131 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:04:14.132 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:04:14.132 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:04:14.132 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:04:14.133 +01:00 [DBG] Start key discovery request
2020-01-19 14:04:14.163 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:04:14.164 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:04:14.164 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:04:14.165 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:04:14.165 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:04:14.165 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:04:14.166 +01:00 [DBG] Start token request.
2020-01-19 14:04:14.166 +01:00 [DBG] Start client validation
2020-01-19 14:04:14.166 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:04:14.166 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:04:14.167 +01:00 [DBG] client id without secret found
2020-01-19 14:04:14.167 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:04:14.167 +01:00 [DBG] Secret id found: angular
2020-01-19 14:04:14.167 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:04:14.167 +01:00 [DBG] Client validation success
2020-01-19 14:04:14.168 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEDF:00000048",
  "TimeStamp": "2020-01-19T13:04:14Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:04:14.168 +01:00 [DBG] Start token request validation
2020-01-19 14:04:14.168 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:04:14.176 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:04:14.176 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:04:14.176 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "53c9dd19c376b0f3eb545838c3eb484b9ba012be72187942db695c8fc8eb4191",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "53c9dd19c376b0f3eb545838c3eb484b9ba012be72187942db695c8fc8eb4191",
    "redirect_uri": "http://localhost:4201/index.html",
    "code_verifier": "e2PkBQBAGqaS1BmhpUnj6EXraD8OhXAIE2b6-kb_8abmy",
    "client_id": "angular"
  }
}
2020-01-19 14:04:14.177 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:04:14.177 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:04:14.177 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:04:14.177 +01:00 [DBG] Issued claims: []
2020-01-19 14:04:14.181 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:04:14.188 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:04:14.191 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****BYbQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Hg7w"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDF:00000048",
  "TimeStamp": "2020-01-19T13:04:14Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:04:14.192 +01:00 [DBG] Token request success.
2020-01-19 14:04:34.843 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:04:34.846 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:04:34.851 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:04:34.852 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:04:34.856 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:04:34.857 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:04:34.859 +01:00 [DBG] Start discovery request
2020-01-19 14:04:34.928 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:04:34.930 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:04:34.931 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:04:34.933 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:04:34.938 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:04:34.938 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:04:34.940 +01:00 [DBG] Start key discovery request
2020-01-19 14:04:47.892 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:04:47.893 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:04:51.517 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:04:51.518 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:04:52.741 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 14:04:52.743 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:04:52.745 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:04:52.746 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-19 14:04:52.747 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "ActivityId": "0HLSSRA3BHEDI:0000000D",
  "TimeStamp": "2020-01-19T13:04:52Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:04:52.778 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-01-19 14:04:52.779 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-01-19 14:04:52.779 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-01-19 14:04:52.779 +01:00 [DBG] Processing signout callback request
2020-01-19 14:04:52.780 +01:00 [DBG] No client front-channel logout URLs
2020-01-19 14:04:52.780 +01:00 [DBG] No client back-channel logout URLs
2020-01-19 14:04:52.780 +01:00 [INF] Successful signout callback.
2020-01-19 14:04:52.781 +01:00 [DBG] No client front-channel iframe urls
2020-01-19 14:04:52.781 +01:00 [DBG] No client back-channel iframe urls
2020-01-19 14:05:21.390 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:05:21.391 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:05:21.391 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:05:21.392 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:05:21.392 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:05:21.393 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:05:21.393 +01:00 [DBG] Start discovery request
2020-01-19 14:05:21.413 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:05:21.414 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:05:21.414 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:05:21.416 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:05:21.416 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:05:21.417 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:05:21.417 +01:00 [DBG] Start key discovery request
2020-01-19 14:05:27.867 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:05:27.868 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:05:27.868 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:05:27.869 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:05:27.869 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:05:27.870 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:05:27.870 +01:00 [DBG] Start discovery request
2020-01-19 14:05:27.901 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:05:27.902 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:05:27.903 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:05:27.903 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:05:27.904 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:05:27.904 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:05:27.905 +01:00 [DBG] Start key discovery request
2020-01-19 14:06:49.226 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:06:49.226 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:06:49.227 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:06:49.227 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:06:49.228 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:06:49.228 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:06:49.228 +01:00 [DBG] Start discovery request
2020-01-19 14:06:49.245 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:06:49.246 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:06:49.246 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:06:49.246 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:06:49.247 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:06:49.247 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:06:49.247 +01:00 [DBG] Start key discovery request
2020-01-19 14:08:22.400 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:08:22.401 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:08:22.401 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:08:22.402 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:08:22.403 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:08:22.405 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:08:22.406 +01:00 [DBG] Start discovery request
2020-01-19 14:08:22.464 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:08:22.470 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:08:22.471 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:08:22.471 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:08:22.472 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:08:22.474 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:08:22.475 +01:00 [DBG] Start key discovery request
2020-01-19 14:08:33.343 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:08:33.344 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:08:33.344 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:08:33.345 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:08:33.346 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:08:33.347 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:08:33.348 +01:00 [DBG] Start discovery request
2020-01-19 14:08:33.416 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:08:33.417 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:08:33.417 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:08:33.418 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:08:33.419 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:08:33.419 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:08:33.420 +01:00 [DBG] Start key discovery request
2020-01-19 14:09:04.540 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:09:04.540 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:09:04.542 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:09:04.542 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:09:04.543 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:09:04.543 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:09:04.544 +01:00 [DBG] Start discovery request
2020-01-19 14:09:04.572 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:09:04.573 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:09:04.573 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:09:04.573 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:09:04.574 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:09:04.574 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:09:04.575 +01:00 [DBG] Start key discovery request
2020-01-19 14:09:09.135 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:09:09.135 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:09:09.136 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:09:09.136 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:09:09.138 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:09:09.138 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:09:09.139 +01:00 [DBG] Start discovery request
2020-01-19 14:09:09.163 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:09:09.163 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:09:09.164 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:09:09.164 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:09:09.164 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:09:09.164 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:09:09.165 +01:00 [DBG] Start key discovery request
2020-01-19 14:09:09.217 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:09:09.218 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:09:09.218 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:09:09.219 +01:00 [DBG] Start authorize request
2020-01-19 14:09:09.219 +01:00 [DBG] No user present in authorize request
2020-01-19 14:09:09.219 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:09:09.219 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:09:09.220 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:09:09.220 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "rFWSOMz2PU658UWfsYpxk2x1xGeptUDQWOdTwTnQY1Aj3",
  "Nonce": "rFWSOMz2PU658UWfsYpxk2x1xGeptUDQWOdTwTnQY1Aj3",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "rFWSOMz2PU658UWfsYpxk2x1xGeptUDQWOdTwTnQY1Aj3",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "vzkSGgdNN52bLFV0FE26Zw-4iVvaPbiFTxYV2hfrnis",
    "code_challenge_method": "S256",
    "nonce": "rFWSOMz2PU658UWfsYpxk2x1xGeptUDQWOdTwTnQY1Aj3"
  }
}
2020-01-19 14:09:09.221 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 14:09:09.237 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:09:09.237 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:09:09.237 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:09:54.953 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:09:54.954 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:09:54.954 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:09:54.955 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:09:54.955 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:09:54.955 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:09:54.956 +01:00 [DBG] Start discovery request
2020-01-19 14:09:54.978 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:09:54.978 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:09:54.979 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:09:54.979 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:09:54.979 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:09:54.979 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:09:54.980 +01:00 [DBG] Start key discovery request
2020-01-19 14:09:55.041 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:09:55.043 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:09:55.043 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:09:55.044 +01:00 [DBG] Start authorize request
2020-01-19 14:09:55.044 +01:00 [DBG] No user present in authorize request
2020-01-19 14:09:55.044 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:09:55.045 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:09:55.045 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:09:55.045 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "7s6a_viam_06CSBMDq-pM76L86icIIAkTsMDnN9n__1_B",
  "Nonce": "7s6a_viam_06CSBMDq-pM76L86icIIAkTsMDnN9n__1_B",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "7s6a_viam_06CSBMDq-pM76L86icIIAkTsMDnN9n__1_B",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "R4Daa2YYWP5tiHROPBCeXMWAPcbs2lq6r6TrGYcCMsY",
    "code_challenge_method": "S256",
    "nonce": "7s6a_viam_06CSBMDq-pM76L86icIIAkTsMDnN9n__1_B"
  }
}
2020-01-19 14:09:55.046 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 14:09:55.060 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:09:55.060 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:09:55.060 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:10:04.136 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 14:10:04.138 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSRA3BHEDP:00000009",
  "TimeStamp": "2020-01-19T13:10:04Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:10:04.139 +01:00 [DBG] Augmenting SignInContext
2020-01-19 14:10:04.139 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 14:10:04.140 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 14:10:04.140 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 14:10:04.152 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:10:04.153 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:10:04.153 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 14:10:04.154 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 14:10:04.154 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 14:10:04.154 +01:00 [DBG] Start authorize callback request
2020-01-19 14:10:04.154 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:10:04.154 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:10:04.155 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:10:04.155 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:10:04.156 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "7s6a_viam_06CSBMDq-pM76L86icIIAkTsMDnN9n__1_B",
  "Nonce": "7s6a_viam_06CSBMDq-pM76L86icIIAkTsMDnN9n__1_B",
  "SessionId": "893f016dba010e927ff5946b85a1ddb8",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "7s6a_viam_06CSBMDq-pM76L86icIIAkTsMDnN9n__1_B",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "R4Daa2YYWP5tiHROPBCeXMWAPcbs2lq6r6TrGYcCMsY",
    "code_challenge_method": "S256",
    "nonce": "7s6a_viam_06CSBMDq-pM76L86icIIAkTsMDnN9n__1_B"
  }
}
2020-01-19 14:10:04.156 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:10:04.157 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:10:04.163 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****3ad0"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDP:0000000A",
  "TimeStamp": "2020-01-19T13:10:04Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:10:04.170 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "7s6a_viam_06CSBMDq-pM76L86icIIAkTsMDnN9n__1_B",
  "Scope": "openid profile api"
}
2020-01-19 14:10:04.170 +01:00 [DBG] Augmenting SignInContext
2020-01-19 14:10:04.171 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 14:10:04.636 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:10:04.637 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:10:04.637 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:10:04.638 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:10:04.638 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:10:04.639 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:10:04.639 +01:00 [DBG] Start discovery request
2020-01-19 14:10:04.676 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:10:04.676 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:10:04.676 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:10:04.677 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:10:04.677 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:10:04.677 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:10:04.678 +01:00 [DBG] Start key discovery request
2020-01-19 14:10:04.711 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:10:04.711 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:10:04.712 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:10:04.712 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:10:04.712 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:10:04.712 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:10:04.713 +01:00 [DBG] Start token request.
2020-01-19 14:10:04.713 +01:00 [DBG] Start client validation
2020-01-19 14:10:04.713 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:10:04.713 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:10:04.714 +01:00 [DBG] client id without secret found
2020-01-19 14:10:04.714 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:10:04.714 +01:00 [DBG] Secret id found: angular
2020-01-19 14:10:04.714 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:10:04.715 +01:00 [DBG] Client validation success
2020-01-19 14:10:04.715 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEDF:0000005D",
  "TimeStamp": "2020-01-19T13:10:04Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:10:04.715 +01:00 [DBG] Start token request validation
2020-01-19 14:10:04.716 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:10:04.724 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:10:04.725 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:10:04.725 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "36628a0437e796dc56b53f947b6d3717bbe4f53f256a6aff4c19bf4ce8a83ad0",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "36628a0437e796dc56b53f947b6d3717bbe4f53f256a6aff4c19bf4ce8a83ad0",
    "redirect_uri": "http://localhost:4201/index.html",
    "code_verifier": "jxdVrcvp5QjrHFsYq_Nk-w8PneQ20IcevtDVNpAq9kc4S",
    "client_id": "angular"
  }
}
2020-01-19 14:10:04.725 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:10:04.726 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:10:04.726 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:10:04.726 +01:00 [DBG] Issued claims: []
2020-01-19 14:10:04.729 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:10:04.729 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:10:04.733 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****GgyA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****RSZg"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDF:0000005D",
  "TimeStamp": "2020-01-19T13:10:04Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:10:04.734 +01:00 [DBG] Token request success.
2020-01-19 14:10:23.877 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:10:23.878 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:10:23.878 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:10:23.879 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:10:23.879 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:10:23.880 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:10:23.881 +01:00 [DBG] Start discovery request
2020-01-19 14:10:23.898 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:10:23.898 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:10:23.899 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:10:23.899 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:10:23.899 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:10:23.901 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:10:23.901 +01:00 [DBG] Start key discovery request
2020-01-19 14:10:23.954 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:10:23.955 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:10:23.955 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:10:23.955 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:10:23.956 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:10:23.956 +01:00 [DBG] Start authorize request
2020-01-19 14:10:23.956 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:10:23.956 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:10:23.957 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:10:23.957 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:10:23.957 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "c7ojjbpRVH-MdyLzVYCzZBPp6ZWuEsuKrJQ_SlfEHXCwU",
  "Nonce": "c7ojjbpRVH-MdyLzVYCzZBPp6ZWuEsuKrJQ_SlfEHXCwU",
  "SessionId": "893f016dba010e927ff5946b85a1ddb8",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "c7ojjbpRVH-MdyLzVYCzZBPp6ZWuEsuKrJQ_SlfEHXCwU",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "thhETowxuqJKi42xdbI7AFEviyRPaWZ4UDhilUrfHXs",
    "code_challenge_method": "S256",
    "nonce": "c7ojjbpRVH-MdyLzVYCzZBPp6ZWuEsuKrJQ_SlfEHXCwU"
  }
}
2020-01-19 14:10:23.958 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:10:23.958 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:10:23.964 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****55ab"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDP:0000000B",
  "TimeStamp": "2020-01-19T13:10:23Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:10:23.965 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "c7ojjbpRVH-MdyLzVYCzZBPp6ZWuEsuKrJQ_SlfEHXCwU",
  "Scope": "openid profile api"
}
2020-01-19 14:10:24.435 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:10:24.436 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:10:24.436 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:10:24.436 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:10:24.437 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:10:24.438 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:10:24.438 +01:00 [DBG] Start discovery request
2020-01-19 14:10:24.458 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:10:24.458 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:10:24.458 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:10:24.459 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:10:24.459 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:10:24.459 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:10:24.459 +01:00 [DBG] Start key discovery request
2020-01-19 14:10:24.494 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:10:24.495 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:10:24.496 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:10:24.496 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:10:24.497 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:10:24.497 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:10:24.497 +01:00 [DBG] Start token request.
2020-01-19 14:10:24.497 +01:00 [DBG] Start client validation
2020-01-19 14:10:24.498 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:10:24.498 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:10:24.498 +01:00 [DBG] client id without secret found
2020-01-19 14:10:24.498 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:10:24.498 +01:00 [DBG] Secret id found: angular
2020-01-19 14:10:24.499 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:10:24.499 +01:00 [DBG] Client validation success
2020-01-19 14:10:24.499 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEDF:00000062",
  "TimeStamp": "2020-01-19T13:10:24Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:10:24.500 +01:00 [DBG] Start token request validation
2020-01-19 14:10:24.500 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:10:24.507 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:10:24.507 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:10:24.507 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "5264fee3ddb142ffe4d3fbca625883724515de849cc2cf9db69c0e6a8e0355ab",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "5264fee3ddb142ffe4d3fbca625883724515de849cc2cf9db69c0e6a8e0355ab",
    "redirect_uri": "http://localhost:4201/index.html",
    "code_verifier": "L5ZwYFY83s-vCeybwl5WLgULgAoJgpfRohzWhonMBlisW",
    "client_id": "angular"
  }
}
2020-01-19 14:10:24.508 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:10:24.508 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:10:24.508 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:10:24.508 +01:00 [DBG] Issued claims: []
2020-01-19 14:10:24.512 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:10:24.512 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:10:24.515 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****236g"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Izfg"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDF:00000062",
  "TimeStamp": "2020-01-19T13:10:24Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:10:24.515 +01:00 [DBG] Token request success.
2020-01-19 14:12:25.230 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:12:25.231 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:12:25.231 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:12:25.232 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:12:25.233 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:12:25.233 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:12:25.235 +01:00 [DBG] Start discovery request
2020-01-19 14:12:25.267 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:12:25.268 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:12:25.269 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:12:25.270 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:12:25.272 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:12:25.273 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:12:25.283 +01:00 [DBG] Start key discovery request
2020-01-19 14:13:01.625 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:13:01.629 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:13:01.631 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:13:01.632 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:13:01.637 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:13:01.638 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:13:01.639 +01:00 [DBG] Start discovery request
2020-01-19 14:13:01.711 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:13:01.711 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:13:01.712 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:13:01.712 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:13:01.712 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:13:01.713 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:13:01.713 +01:00 [DBG] Start key discovery request
2020-01-19 14:13:09.716 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:13:09.717 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:13:09.717 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:13:09.718 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:13:09.718 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:13:09.718 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:13:09.719 +01:00 [DBG] Start discovery request
2020-01-19 14:13:09.784 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:13:09.785 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:13:09.785 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:13:09.785 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:13:09.786 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:13:09.787 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:13:09.790 +01:00 [DBG] Start key discovery request
2020-01-19 14:14:25.690 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:14:25.692 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:14:25.693 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:14:25.696 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:14:25.696 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:14:25.696 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:14:25.697 +01:00 [DBG] Start discovery request
2020-01-19 14:14:25.742 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:14:25.742 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:14:25.743 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:14:25.743 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:14:25.743 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:14:25.743 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:14:25.744 +01:00 [DBG] Start key discovery request
2020-01-19 14:14:26.010 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:14:26.010 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:14:26.012 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:14:26.013 +01:00 [DBG] Start discovery request
2020-01-19 14:14:26.124 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:14:26.124 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:14:26.124 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:14:26.125 +01:00 [DBG] Start key discovery request
2020-01-19 14:15:26.810 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:15:26.817 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:15:26.824 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:15:26.824 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:15:26.825 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:15:26.826 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:15:26.826 +01:00 [DBG] Start discovery request
2020-01-19 14:15:26.863 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:15:26.864 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:15:26.865 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:15:26.866 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:15:26.866 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:15:26.868 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:15:26.869 +01:00 [DBG] Start key discovery request
2020-01-19 14:15:26.949 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:15:26.949 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:15:26.950 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:15:26.950 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:15:26.950 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:15:26.950 +01:00 [DBG] Start authorize request
2020-01-19 14:15:26.951 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:15:26.951 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:15:26.952 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:15:26.952 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:15:26.953 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "0tKU6jLNaAq4PtaBAJETQG3anpmt9w5ZunPmLKCgWVD2-",
  "Nonce": "0tKU6jLNaAq4PtaBAJETQG3anpmt9w5ZunPmLKCgWVD2-",
  "SessionId": "893f016dba010e927ff5946b85a1ddb8",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "0tKU6jLNaAq4PtaBAJETQG3anpmt9w5ZunPmLKCgWVD2-",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "MPisvTA4jc16kLjCYupnQXJshzhMmpbz_z1pOFjRhAU",
    "code_challenge_method": "S256",
    "nonce": "0tKU6jLNaAq4PtaBAJETQG3anpmt9w5ZunPmLKCgWVD2-"
  }
}
2020-01-19 14:15:26.954 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:15:26.954 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:15:26.966 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****49da"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDR:00000001",
  "TimeStamp": "2020-01-19T13:15:26Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:15:26.967 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "0tKU6jLNaAq4PtaBAJETQG3anpmt9w5ZunPmLKCgWVD2-",
  "Scope": "openid profile api"
}
2020-01-19 14:15:27.586 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:15:27.587 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:15:27.588 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:15:27.588 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:15:27.588 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:15:27.589 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:15:27.589 +01:00 [DBG] Start discovery request
2020-01-19 14:15:27.608 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:15:27.609 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:15:27.609 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:15:27.609 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:15:27.610 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:15:27.610 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:15:27.610 +01:00 [DBG] Start key discovery request
2020-01-19 14:15:27.637 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:15:27.637 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:15:27.638 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:15:27.638 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:15:27.638 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:15:27.639 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:15:27.639 +01:00 [DBG] Start token request.
2020-01-19 14:15:27.640 +01:00 [DBG] Start client validation
2020-01-19 14:15:27.640 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:15:27.640 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:15:27.641 +01:00 [DBG] client id without secret found
2020-01-19 14:15:27.641 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:15:27.641 +01:00 [DBG] Secret id found: angular
2020-01-19 14:15:27.641 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:15:27.642 +01:00 [DBG] Client validation success
2020-01-19 14:15:27.642 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEDF:00000075",
  "TimeStamp": "2020-01-19T13:15:27Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:15:27.642 +01:00 [DBG] Start token request validation
2020-01-19 14:15:27.643 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:15:27.650 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:15:27.650 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:15:27.650 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "21f866fad91f1c52d1a3ecd0640caa753559c256c4374c231d246bf8902349da",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "21f866fad91f1c52d1a3ecd0640caa753559c256c4374c231d246bf8902349da",
    "redirect_uri": "http://localhost:4201/index.html",
    "code_verifier": "Sw984S2HOukz-4uF8SLf6ywK_mmRpXzGI7BI49qwndKuH",
    "client_id": "angular"
  }
}
2020-01-19 14:15:27.651 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:15:27.651 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:15:27.652 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:15:27.652 +01:00 [DBG] Issued claims: []
2020-01-19 14:15:27.655 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:15:27.656 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:15:27.659 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****RT9A"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****DZqw"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDF:00000075",
  "TimeStamp": "2020-01-19T13:15:27Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:15:27.660 +01:00 [DBG] Token request success.
2020-01-19 14:15:32.614 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:15:32.614 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:15:32.614 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:15:32.615 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:15:32.615 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:15:32.615 +01:00 [DBG] Start authorize request
2020-01-19 14:15:32.616 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:15:32.616 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:15:32.616 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:15:32.616 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:15:32.617 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "fw_6ifLVXGdFIgQDbuV-R30rGRGuv0oJqUnZtuW_r5icK",
  "Nonce": "fw_6ifLVXGdFIgQDbuV-R30rGRGuv0oJqUnZtuW_r5icK",
  "SessionId": "893f016dba010e927ff5946b85a1ddb8",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "fw_6ifLVXGdFIgQDbuV-R30rGRGuv0oJqUnZtuW_r5icK",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "KYdQvr2FT6bpZJn0QlxYaVDXW1yrBZP87f9AQFt8_4c",
    "code_challenge_method": "S256",
    "nonce": "fw_6ifLVXGdFIgQDbuV-R30rGRGuv0oJqUnZtuW_r5icK"
  }
}
2020-01-19 14:15:32.617 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:15:32.617 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:15:32.626 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****6329"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDR:00000002",
  "TimeStamp": "2020-01-19T13:15:32Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:15:32.626 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "fw_6ifLVXGdFIgQDbuV-R30rGRGuv0oJqUnZtuW_r5icK",
  "Scope": "openid profile api"
}
2020-01-19 14:15:33.124 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:15:33.124 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:15:33.124 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:15:33.126 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:15:33.126 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:15:33.127 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:15:33.128 +01:00 [DBG] Start discovery request
2020-01-19 14:15:33.157 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:15:33.158 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:15:33.158 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:15:33.158 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:15:33.158 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:15:33.159 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:15:33.159 +01:00 [DBG] Start key discovery request
2020-01-19 14:15:33.197 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:15:33.198 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:15:33.198 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:15:33.198 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:15:33.199 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:15:33.199 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:15:33.199 +01:00 [DBG] Start token request.
2020-01-19 14:15:33.199 +01:00 [DBG] Start client validation
2020-01-19 14:15:33.200 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:15:33.200 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:15:33.200 +01:00 [DBG] client id without secret found
2020-01-19 14:15:33.200 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:15:33.200 +01:00 [DBG] Secret id found: angular
2020-01-19 14:15:33.201 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:15:33.201 +01:00 [DBG] Client validation success
2020-01-19 14:15:33.201 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEDF:00000078",
  "TimeStamp": "2020-01-19T13:15:33Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:15:33.202 +01:00 [DBG] Start token request validation
2020-01-19 14:15:33.202 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:15:33.209 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:15:33.209 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:15:33.210 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "6327b2a0c04858c30927d212b3ed022a3090d146d925d1d7ea95aca56b856329",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "6327b2a0c04858c30927d212b3ed022a3090d146d925d1d7ea95aca56b856329",
    "redirect_uri": "http://localhost:4201/index.html",
    "code_verifier": "M0vI5vVrD0GiQ4vADsX5A4EPPuVFEWJI-bQMM4DA80ls0",
    "client_id": "angular"
  }
}
2020-01-19 14:15:33.210 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:15:33.210 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:15:33.211 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:15:33.211 +01:00 [DBG] Issued claims: []
2020-01-19 14:15:33.214 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:15:33.214 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:15:33.217 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****rDpw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****6Vrw"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDF:00000078",
  "TimeStamp": "2020-01-19T13:15:33Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:15:33.218 +01:00 [DBG] Token request success.
2020-01-19 14:15:39.532 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:15:39.532 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:15:39.533 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:15:39.533 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:15:39.534 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:15:39.534 +01:00 [DBG] Start authorize request
2020-01-19 14:15:39.534 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:15:39.535 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:15:39.535 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:15:39.535 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:15:39.536 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "eC0VlB28mOeUYM1tJF5AAPHpD6_yKNh11BS6aWuFL07OF",
  "Nonce": "eC0VlB28mOeUYM1tJF5AAPHpD6_yKNh11BS6aWuFL07OF",
  "SessionId": "893f016dba010e927ff5946b85a1ddb8",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "eC0VlB28mOeUYM1tJF5AAPHpD6_yKNh11BS6aWuFL07OF",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "cBv50pb9YmAJZdadxnSjjulc1OjIRrUWLr9sCrZ3_t8",
    "code_challenge_method": "S256",
    "nonce": "eC0VlB28mOeUYM1tJF5AAPHpD6_yKNh11BS6aWuFL07OF"
  }
}
2020-01-19 14:15:39.536 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:15:39.537 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:15:39.544 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****f39a"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDR:00000003",
  "TimeStamp": "2020-01-19T13:15:39Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:15:39.546 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "eC0VlB28mOeUYM1tJF5AAPHpD6_yKNh11BS6aWuFL07OF",
  "Scope": "openid profile api"
}
2020-01-19 14:15:39.992 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:15:39.992 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:15:39.993 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:15:39.993 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:15:39.994 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:15:39.994 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:15:39.994 +01:00 [DBG] Start discovery request
2020-01-19 14:15:40.020 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:15:40.021 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:15:40.021 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:15:40.021 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:15:40.022 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:15:40.022 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:15:40.022 +01:00 [DBG] Start key discovery request
2020-01-19 14:15:40.062 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:15:40.062 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:15:40.062 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:15:40.063 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:15:40.063 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:15:40.064 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:15:40.065 +01:00 [DBG] Start token request.
2020-01-19 14:15:40.067 +01:00 [DBG] Start client validation
2020-01-19 14:15:40.067 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:15:40.067 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:15:40.068 +01:00 [DBG] client id without secret found
2020-01-19 14:15:40.068 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:15:40.068 +01:00 [DBG] Secret id found: angular
2020-01-19 14:15:40.068 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:15:40.069 +01:00 [DBG] Client validation success
2020-01-19 14:15:40.069 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEDF:0000007B",
  "TimeStamp": "2020-01-19T13:15:40Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:15:40.069 +01:00 [DBG] Start token request validation
2020-01-19 14:15:40.070 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:15:40.077 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:15:40.077 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:15:40.077 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "84e2ab0c57eb1432f5a0842edec1b418abf2f4ae84cc9e5211e8cc2c0197f39a",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "84e2ab0c57eb1432f5a0842edec1b418abf2f4ae84cc9e5211e8cc2c0197f39a",
    "redirect_uri": "http://localhost:4201/index.html",
    "code_verifier": "B2KnlAg2GhESJqD0np1ZI5CKYKPH7HX-AVAcejeKvQFXw",
    "client_id": "angular"
  }
}
2020-01-19 14:15:40.078 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:15:40.078 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:15:40.078 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:15:40.079 +01:00 [DBG] Issued claims: []
2020-01-19 14:15:40.082 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:15:40.082 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:15:40.085 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****nkzQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****TU3g"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDF:0000007B",
  "TimeStamp": "2020-01-19T13:15:40Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:15:40.086 +01:00 [DBG] Token request success.
2020-01-19 14:15:51.704 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:15:51.705 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:15:51.705 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:15:51.706 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:15:51.706 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:15:51.706 +01:00 [DBG] Start authorize request
2020-01-19 14:15:51.707 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:15:51.707 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:15:51.707 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:15:51.707 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:15:51.708 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "3J4xfV1f_OKuvxz9N0FzldoPImuElj1FxhOjOD5TjM0vK",
  "Nonce": "3J4xfV1f_OKuvxz9N0FzldoPImuElj1FxhOjOD5TjM0vK",
  "SessionId": "893f016dba010e927ff5946b85a1ddb8",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "3J4xfV1f_OKuvxz9N0FzldoPImuElj1FxhOjOD5TjM0vK",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "dAXee7Y7_LEAFCJR7wKCMHQquPg-f1luULc51xYYnEg",
    "code_challenge_method": "S256",
    "nonce": "3J4xfV1f_OKuvxz9N0FzldoPImuElj1FxhOjOD5TjM0vK"
  }
}
2020-01-19 14:15:51.709 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:15:51.709 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:15:51.717 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****2977"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDR:00000004",
  "TimeStamp": "2020-01-19T13:15:51Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:15:51.717 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "3J4xfV1f_OKuvxz9N0FzldoPImuElj1FxhOjOD5TjM0vK",
  "Scope": "openid profile api"
}
2020-01-19 14:15:52.487 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:15:52.488 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:15:52.488 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:15:52.488 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:15:52.489 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:15:52.489 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:15:52.490 +01:00 [DBG] Start discovery request
2020-01-19 14:15:52.515 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:15:52.516 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:15:52.516 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:15:52.516 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:15:52.516 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:15:52.517 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:15:52.517 +01:00 [DBG] Start key discovery request
2020-01-19 14:15:52.557 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:15:52.558 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:15:52.558 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:15:52.558 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:15:52.559 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:15:52.559 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:15:52.560 +01:00 [DBG] Start token request.
2020-01-19 14:15:52.560 +01:00 [DBG] Start client validation
2020-01-19 14:15:52.560 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:15:52.560 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:15:52.561 +01:00 [DBG] client id without secret found
2020-01-19 14:15:52.561 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:15:52.561 +01:00 [DBG] Secret id found: angular
2020-01-19 14:15:52.561 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:15:52.561 +01:00 [DBG] Client validation success
2020-01-19 14:15:52.562 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEDF:0000007E",
  "TimeStamp": "2020-01-19T13:15:52Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:15:52.562 +01:00 [DBG] Start token request validation
2020-01-19 14:15:52.562 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:15:52.570 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:15:52.571 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:15:52.571 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "482c0ef85e25cf7c74437aff94230250801be7f8bf3a43aada0437389b212977",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "482c0ef85e25cf7c74437aff94230250801be7f8bf3a43aada0437389b212977",
    "redirect_uri": "http://localhost:4201/index.html",
    "code_verifier": "8bG11syYYlBiy_s81y-TaYECuoJe3JhA3glED3z6tG5VA",
    "client_id": "angular"
  }
}
2020-01-19 14:15:52.571 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:15:52.572 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:15:52.577 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:15:52.578 +01:00 [DBG] Issued claims: []
2020-01-19 14:15:52.581 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:15:52.581 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:15:52.585 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****P3dA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Q1CA"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDF:0000007E",
  "TimeStamp": "2020-01-19T13:15:52Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:15:52.586 +01:00 [DBG] Token request success.
2020-01-19 14:16:13.101 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:16:13.102 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:16:15.592 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:16:15.593 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:16:16.792 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 14:16:16.793 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:16:16.794 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:16:16.795 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-19 14:16:16.795 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "ActivityId": "0HLSSRA3BHEDR:00000007",
  "TimeStamp": "2020-01-19T13:16:16Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:16:16.826 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-01-19 14:16:16.826 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-01-19 14:16:16.827 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-01-19 14:16:16.827 +01:00 [DBG] Processing signout callback request
2020-01-19 14:16:16.827 +01:00 [DBG] No client front-channel logout URLs
2020-01-19 14:16:16.828 +01:00 [DBG] No client back-channel logout URLs
2020-01-19 14:16:16.828 +01:00 [INF] Successful signout callback.
2020-01-19 14:16:16.828 +01:00 [DBG] No client front-channel iframe urls
2020-01-19 14:16:16.828 +01:00 [DBG] No client back-channel iframe urls
2020-01-19 14:16:20.907 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:16:20.908 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:16:20.908 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:16:20.909 +01:00 [DBG] Start authorize request
2020-01-19 14:16:20.910 +01:00 [DBG] No user present in authorize request
2020-01-19 14:16:20.910 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:16:20.913 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:16:20.914 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:16:20.914 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "GxP-Mf531ArayLveQVnP9e3K959RCZx-a5RLZWBYiJqoo",
  "Nonce": "GxP-Mf531ArayLveQVnP9e3K959RCZx-a5RLZWBYiJqoo",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "GxP-Mf531ArayLveQVnP9e3K959RCZx-a5RLZWBYiJqoo",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "ihz8h24gsitneO95ij6sTvrF1_QB22AH-zotYNQf66k",
    "code_challenge_method": "S256",
    "nonce": "GxP-Mf531ArayLveQVnP9e3K959RCZx-a5RLZWBYiJqoo"
  }
}
2020-01-19 14:16:20.915 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 14:16:20.924 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:16:20.925 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:16:20.925 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:16:25.231 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 14:16:25.233 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSRA3BHEDT:00000004",
  "TimeStamp": "2020-01-19T13:16:25Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:16:25.234 +01:00 [DBG] Augmenting SignInContext
2020-01-19 14:16:25.234 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 14:16:25.234 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 14:16:25.235 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 14:16:25.249 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:16:25.249 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:16:25.249 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 14:16:25.250 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 14:16:25.250 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 14:16:25.251 +01:00 [DBG] Start authorize callback request
2020-01-19 14:16:25.251 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:16:25.251 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:16:25.251 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:16:25.252 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:16:25.256 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "GxP-Mf531ArayLveQVnP9e3K959RCZx-a5RLZWBYiJqoo",
  "Nonce": "GxP-Mf531ArayLveQVnP9e3K959RCZx-a5RLZWBYiJqoo",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "GxP-Mf531ArayLveQVnP9e3K959RCZx-a5RLZWBYiJqoo",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "ihz8h24gsitneO95ij6sTvrF1_QB22AH-zotYNQf66k",
    "code_challenge_method": "S256",
    "nonce": "GxP-Mf531ArayLveQVnP9e3K959RCZx-a5RLZWBYiJqoo"
  }
}
2020-01-19 14:16:25.257 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:16:25.257 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:16:25.263 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****a813"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDT:00000005",
  "TimeStamp": "2020-01-19T13:16:25Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:16:25.264 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "GxP-Mf531ArayLveQVnP9e3K959RCZx-a5RLZWBYiJqoo",
  "Scope": "openid profile api"
}
2020-01-19 14:16:25.264 +01:00 [DBG] Augmenting SignInContext
2020-01-19 14:16:25.264 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 14:16:26.051 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:16:26.052 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:16:26.053 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:16:26.053 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:16:26.053 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:16:26.054 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:16:26.054 +01:00 [DBG] Start discovery request
2020-01-19 14:16:26.075 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:16:26.076 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:16:26.076 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:16:26.077 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:16:26.077 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:16:26.077 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:16:26.077 +01:00 [DBG] Start key discovery request
2020-01-19 14:16:26.110 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:16:26.111 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:16:26.112 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:16:26.112 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:16:26.112 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:16:26.113 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:16:26.113 +01:00 [DBG] Start token request.
2020-01-19 14:16:26.114 +01:00 [DBG] Start client validation
2020-01-19 14:16:26.114 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:16:26.114 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:16:26.115 +01:00 [DBG] client id without secret found
2020-01-19 14:16:26.115 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:16:26.115 +01:00 [DBG] Secret id found: angular
2020-01-19 14:16:26.116 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:16:26.116 +01:00 [DBG] Client validation success
2020-01-19 14:16:26.116 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEDF:00000081",
  "TimeStamp": "2020-01-19T13:16:26Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:16:26.117 +01:00 [DBG] Start token request validation
2020-01-19 14:16:26.117 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:16:26.125 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:16:26.126 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:16:26.126 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "9f3267cb6d33f68c7df388b8be8ff55d2c9c9862780591ee4ceefa79539ba813",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "9f3267cb6d33f68c7df388b8be8ff55d2c9c9862780591ee4ceefa79539ba813",
    "redirect_uri": "http://localhost:4201/index.html",
    "code_verifier": "jXYwMxzzxLIeYbimiTFvj-pddmLqp6kk-v-uoGSTSjJrz",
    "client_id": "angular"
  }
}
2020-01-19 14:16:26.127 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:16:26.127 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:16:26.127 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:16:26.127 +01:00 [DBG] Issued claims: []
2020-01-19 14:16:26.130 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:16:26.135 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:16:26.139 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****a-4w"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****7q9A"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDF:00000081",
  "TimeStamp": "2020-01-19T13:16:26Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:16:26.139 +01:00 [DBG] Token request success.
2020-01-19 14:16:44.141 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:16:44.142 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:16:44.142 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:16:44.143 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:16:44.143 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:16:44.143 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:16:44.143 +01:00 [DBG] Start discovery request
2020-01-19 14:16:44.172 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:16:44.173 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:16:44.173 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:16:44.173 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:16:44.174 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:16:44.174 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:16:44.174 +01:00 [DBG] Start key discovery request
2020-01-19 14:18:11.323 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:18:11.324 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:18:11.325 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:18:11.325 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:18:11.326 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:18:11.326 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:18:11.327 +01:00 [DBG] Start discovery request
2020-01-19 14:18:11.370 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:18:11.371 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:18:11.371 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:18:11.371 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:18:11.372 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:18:11.372 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:18:11.372 +01:00 [DBG] Start key discovery request
2020-01-19 14:19:32.019 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:19:32.020 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:19:32.020 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:19:32.020 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:19:32.021 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:19:32.021 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:19:32.021 +01:00 [DBG] Start discovery request
2020-01-19 14:19:32.052 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:19:32.052 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:19:32.053 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:19:32.053 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:19:32.053 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:19:32.053 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:19:32.054 +01:00 [DBG] Start key discovery request
2020-01-19 14:19:35.568 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:19:35.569 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:19:35.569 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:19:35.570 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:19:35.570 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:19:35.570 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:19:35.570 +01:00 [DBG] Start discovery request
2020-01-19 14:19:35.591 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:19:35.592 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:19:35.592 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:19:35.593 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:19:35.593 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:19:35.593 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:19:35.593 +01:00 [DBG] Start key discovery request
2020-01-19 14:25:45.074 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:25:45.075 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:25:45.075 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:25:45.076 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:25:45.076 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:25:45.076 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:25:45.077 +01:00 [DBG] Start discovery request
2020-01-19 14:25:45.090 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:25:45.092 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:25:45.092 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:25:45.093 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:25:45.094 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:25:45.094 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:25:45.094 +01:00 [DBG] Start key discovery request
2020-01-19 14:25:45.119 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:25:45.121 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:25:45.121 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:25:45.122 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:25:45.123 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:25:45.123 +01:00 [DBG] Start authorize request
2020-01-19 14:25:45.123 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:25:45.124 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:25:45.124 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:25:45.124 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:25:45.125 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "Z3jXMZb6rur3lrlwG2LIBKaHja9b55rMWiXaM0HYXMIU2",
  "Nonce": "Z3jXMZb6rur3lrlwG2LIBKaHja9b55rMWiXaM0HYXMIU2",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "Z3jXMZb6rur3lrlwG2LIBKaHja9b55rMWiXaM0HYXMIU2",
    "redirect_uri": "http://localhost:4201/index.html",
    "scope": "openid profile api",
    "code_challenge": "_8a3e63zNK-NLfLyHkBHbSj5-p7T_YKOtA0XC5Bvvs8",
    "code_challenge_method": "S256",
    "nonce": "Z3jXMZb6rur3lrlwG2LIBKaHja9b55rMWiXaM0HYXMIU2"
  }
}
2020-01-19 14:25:45.125 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:25:45.125 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:25:45.132 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****0433"
    }
  ],
  "ActivityId": "0HLSSRA3BHEE0:00000001",
  "TimeStamp": "2020-01-19T13:25:45Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:25:45.133 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:4201/index.html",
  "State": "Z3jXMZb6rur3lrlwG2LIBKaHja9b55rMWiXaM0HYXMIU2",
  "Scope": "openid profile api"
}
2020-01-19 14:25:45.288 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:4201
2020-01-19 14:25:45.290 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:25:45.290 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:25:45.291 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:25:45.291 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:25:45.291 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:25:45.291 +01:00 [DBG] Start discovery request
2020-01-19 14:25:45.328 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:4201
2020-01-19 14:25:45.329 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:25:45.330 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:25:45.330 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:25:45.330 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:25:45.331 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:25:45.331 +01:00 [DBG] Start key discovery request
2020-01-19 14:25:45.359 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:25:45.359 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:25:45.360 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:25:45.360 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:25:45.360 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:25:45.361 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:25:45.361 +01:00 [DBG] Start token request.
2020-01-19 14:25:45.361 +01:00 [DBG] Start client validation
2020-01-19 14:25:45.361 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:25:45.361 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:25:45.362 +01:00 [DBG] client id without secret found
2020-01-19 14:25:45.362 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:25:45.362 +01:00 [DBG] Secret id found: angular
2020-01-19 14:25:45.362 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:25:45.363 +01:00 [DBG] Client validation success
2020-01-19 14:25:45.363 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEDV:00000008",
  "TimeStamp": "2020-01-19T13:25:45Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:25:45.363 +01:00 [DBG] Start token request validation
2020-01-19 14:25:45.363 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:25:45.371 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:25:45.372 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:25:45.372 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "d99ab35f5c0d99661b4d756cb4b5e36fbf10adc3602e4548906595fd24220433",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "d99ab35f5c0d99661b4d756cb4b5e36fbf10adc3602e4548906595fd24220433",
    "redirect_uri": "http://localhost:4201/index.html",
    "code_verifier": "JkoZfOZjPHNQFZ8AEJfoYtTJvY5Sbl-hgKBPjz-uiWRru",
    "client_id": "angular"
  }
}
2020-01-19 14:25:45.372 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:25:45.373 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:25:45.373 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:25:45.373 +01:00 [DBG] Issued claims: []
2020-01-19 14:25:45.376 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:25:45.377 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:25:45.380 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****N1Zg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Eewg"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:00000008",
  "TimeStamp": "2020-01-19T13:25:45Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:25:45.380 +01:00 [DBG] Token request success.
2020-01-19 14:26:35.027 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:26:35.027 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:26:35.028 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:26:35.030 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:26:35.030 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:26:35.031 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:26:35.031 +01:00 [DBG] Start token request.
2020-01-19 14:26:35.031 +01:00 [DBG] Start client validation
2020-01-19 14:26:35.031 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:26:35.032 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:26:35.032 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:26:35.033 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:26:35.039 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:26:35.039 +01:00 [DBG] Client validation success
2020-01-19 14:26:35.039 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:0000000A",
  "TimeStamp": "2020-01-19T13:26:35Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:26:35.040 +01:00 [DBG] Start token request validation
2020-01-19 14:26:35.043 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:26:35.048 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:0000000A",
  "TimeStamp": "2020-01-19T13:26:35Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:26:35.048 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:26:35.049 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:26:35.050 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:26:35.051 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:26:35.051 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:26:35.051 +01:00 [DBG] Issued claims: []
2020-01-19 14:26:35.055 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****BJjg"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:0000000A",
  "TimeStamp": "2020-01-19T13:26:35Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:26:35.056 +01:00 [DBG] Token request success.
2020-01-19 14:26:41.570 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:26:41.570 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:26:41.571 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:26:41.574 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:26:41.575 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:26:41.575 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:26:41.575 +01:00 [DBG] Start token request.
2020-01-19 14:26:41.576 +01:00 [DBG] Start client validation
2020-01-19 14:26:41.576 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:26:41.576 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:26:41.577 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:26:41.577 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:26:41.578 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:26:41.578 +01:00 [DBG] Client validation success
2020-01-19 14:26:41.578 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:0000000C",
  "TimeStamp": "2020-01-19T13:26:41Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:26:41.580 +01:00 [DBG] Start token request validation
2020-01-19 14:26:41.580 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:26:41.580 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:0000000C",
  "TimeStamp": "2020-01-19T13:26:41Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:26:41.581 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:26:41.581 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:26:41.582 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:26:41.582 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:26:41.582 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:26:41.582 +01:00 [DBG] Issued claims: []
2020-01-19 14:26:41.586 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****KtBQ"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:0000000C",
  "TimeStamp": "2020-01-19T13:26:41Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:26:41.587 +01:00 [DBG] Token request success.
2020-01-19 14:26:55.884 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:26:55.885 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:26:55.885 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:26:55.886 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:26:55.886 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:26:55.886 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:26:55.886 +01:00 [DBG] Start token request.
2020-01-19 14:26:55.887 +01:00 [DBG] Start client validation
2020-01-19 14:26:55.887 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:26:55.887 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:26:55.887 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:26:55.888 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:26:55.888 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:26:55.888 +01:00 [DBG] Client validation success
2020-01-19 14:26:55.888 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:0000000E",
  "TimeStamp": "2020-01-19T13:26:55Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:26:55.889 +01:00 [DBG] Start token request validation
2020-01-19 14:26:55.889 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:26:55.889 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:0000000E",
  "TimeStamp": "2020-01-19T13:26:55Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:26:55.890 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:26:55.890 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:26:55.891 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:26:55.891 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:26:55.891 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:26:55.892 +01:00 [DBG] Issued claims: []
2020-01-19 14:26:55.895 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****Xe9A"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:0000000E",
  "TimeStamp": "2020-01-19T13:26:55Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:26:55.896 +01:00 [DBG] Token request success.
2020-01-19 14:27:22.976 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:27:22.976 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:27:22.977 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:27:22.977 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:27:22.978 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:27:22.978 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:27:22.979 +01:00 [DBG] Start token request.
2020-01-19 14:27:22.979 +01:00 [DBG] Start client validation
2020-01-19 14:27:22.979 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:27:22.979 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:27:22.980 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:27:22.980 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:27:22.980 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:27:22.980 +01:00 [DBG] Client validation success
2020-01-19 14:27:22.981 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:0000000F",
  "TimeStamp": "2020-01-19T13:27:22Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:27:22.981 +01:00 [DBG] Start token request validation
2020-01-19 14:27:22.981 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:27:22.982 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:0000000F",
  "TimeStamp": "2020-01-19T13:27:22Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:27:22.983 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:27:22.983 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:27:22.984 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:27:22.985 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:27:22.985 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:27:22.986 +01:00 [DBG] Issued claims: []
2020-01-19 14:27:22.990 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****aSVQ"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:0000000F",
  "TimeStamp": "2020-01-19T13:27:22Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:27:23.001 +01:00 [DBG] Token request success.
2020-01-19 14:29:02.049 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-19 14:29:02.050 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-19 14:29:02.050 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-19 14:29:02.050 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:29:02.050 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:29:02.051 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:29:02.051 +01:00 [DBG] Start discovery request
2020-01-19 14:29:02.057 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: https://jwt.io
2020-01-19 14:29:02.059 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-19 14:29:02.059 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-19 14:29:02.060 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:29:02.060 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:29:02.061 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:29:02.061 +01:00 [DBG] Start key discovery request
2020-01-19 14:30:05.599 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:30:05.600 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:30:05.601 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:30:05.602 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:30:05.603 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:30:05.603 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:30:05.604 +01:00 [DBG] Start token request.
2020-01-19 14:30:05.604 +01:00 [DBG] Start client validation
2020-01-19 14:30:05.604 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:30:05.605 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:30:05.605 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:30:05.605 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:30:05.606 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:30:05.606 +01:00 [DBG] Client validation success
2020-01-19 14:30:05.606 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:00000013",
  "TimeStamp": "2020-01-19T13:30:05Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:05.607 +01:00 [DBG] Start token request validation
2020-01-19 14:30:05.608 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:30:05.608 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:00000013",
  "TimeStamp": "2020-01-19T13:30:05Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:05.610 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:30:05.611 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:30:05.612 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:30:05.612 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:30:05.612 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:30:05.613 +01:00 [DBG] Issued claims: []
2020-01-19 14:30:05.616 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****33xw"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:00000013",
  "TimeStamp": "2020-01-19T13:30:05Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:05.617 +01:00 [DBG] Token request success.
2020-01-19 14:30:14.935 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:30:14.937 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:30:14.938 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:30:14.938 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:30:14.940 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:30:14.940 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:30:14.941 +01:00 [DBG] Start token request.
2020-01-19 14:30:14.941 +01:00 [DBG] Start client validation
2020-01-19 14:30:14.942 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:30:14.942 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:30:14.943 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:30:14.943 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:30:14.944 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:30:14.944 +01:00 [DBG] Client validation success
2020-01-19 14:30:14.946 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:00000015",
  "TimeStamp": "2020-01-19T13:30:14Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:14.949 +01:00 [DBG] Start token request validation
2020-01-19 14:30:14.950 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:30:14.951 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:00000015",
  "TimeStamp": "2020-01-19T13:30:14Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:14.951 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:30:14.952 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:30:14.953 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:30:14.953 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:30:14.953 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:30:14.954 +01:00 [DBG] Issued claims: []
2020-01-19 14:30:14.959 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****UA1w"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:00000015",
  "TimeStamp": "2020-01-19T13:30:14Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:14.960 +01:00 [DBG] Token request success.
2020-01-19 14:30:15.961 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:30:15.962 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:30:15.962 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:30:15.963 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:30:15.964 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:30:15.965 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:30:15.965 +01:00 [DBG] Start token request.
2020-01-19 14:30:15.965 +01:00 [DBG] Start client validation
2020-01-19 14:30:15.966 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:30:15.966 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:30:15.966 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:30:15.967 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:30:15.967 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:30:15.967 +01:00 [DBG] Client validation success
2020-01-19 14:30:15.967 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:00000017",
  "TimeStamp": "2020-01-19T13:30:15Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:15.968 +01:00 [DBG] Start token request validation
2020-01-19 14:30:15.969 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:30:15.969 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:00000017",
  "TimeStamp": "2020-01-19T13:30:15Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:15.970 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:30:15.970 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:30:15.972 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:30:15.972 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:30:15.973 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:30:15.973 +01:00 [DBG] Issued claims: []
2020-01-19 14:30:15.978 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****GHgw"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:00000017",
  "TimeStamp": "2020-01-19T13:30:15Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:15.987 +01:00 [DBG] Token request success.
2020-01-19 14:30:17.023 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:30:17.025 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:30:17.026 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:30:17.026 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:30:17.027 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:30:17.028 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:30:17.028 +01:00 [DBG] Start token request.
2020-01-19 14:30:17.029 +01:00 [DBG] Start client validation
2020-01-19 14:30:17.029 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:30:17.030 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:30:17.030 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:30:17.030 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:30:17.030 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:30:17.031 +01:00 [DBG] Client validation success
2020-01-19 14:30:17.031 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:00000019",
  "TimeStamp": "2020-01-19T13:30:17Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:17.032 +01:00 [DBG] Start token request validation
2020-01-19 14:30:17.032 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:30:17.032 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:00000019",
  "TimeStamp": "2020-01-19T13:30:17Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:17.034 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:30:17.034 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:30:17.036 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:30:17.036 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:30:17.037 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:30:17.037 +01:00 [DBG] Issued claims: []
2020-01-19 14:30:17.043 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****fniw"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:00000019",
  "TimeStamp": "2020-01-19T13:30:17Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:17.044 +01:00 [DBG] Token request success.
2020-01-19 14:30:17.945 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:30:17.946 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:30:17.946 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:30:17.946 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:30:17.947 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:30:17.947 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:30:17.948 +01:00 [DBG] Start token request.
2020-01-19 14:30:17.948 +01:00 [DBG] Start client validation
2020-01-19 14:30:17.948 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:30:17.948 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:30:17.949 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:30:17.949 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:30:17.949 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:30:17.950 +01:00 [DBG] Client validation success
2020-01-19 14:30:17.950 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:0000001B",
  "TimeStamp": "2020-01-19T13:30:17Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:17.951 +01:00 [DBG] Start token request validation
2020-01-19 14:30:17.951 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:30:17.951 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:0000001B",
  "TimeStamp": "2020-01-19T13:30:17Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:17.952 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:30:17.953 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:30:17.953 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:30:17.954 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:30:17.954 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:30:17.954 +01:00 [DBG] Issued claims: []
2020-01-19 14:30:17.958 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****fniw"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:0000001B",
  "TimeStamp": "2020-01-19T13:30:17Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:17.959 +01:00 [DBG] Token request success.
2020-01-19 14:30:20.397 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:30:20.398 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:30:20.399 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:30:20.399 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:30:20.400 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:30:20.400 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:30:20.401 +01:00 [DBG] Start token request.
2020-01-19 14:30:20.401 +01:00 [DBG] Start client validation
2020-01-19 14:30:20.402 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:30:20.402 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:30:20.402 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:30:20.403 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:30:20.403 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:30:20.403 +01:00 [DBG] Client validation success
2020-01-19 14:30:20.404 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:0000001D",
  "TimeStamp": "2020-01-19T13:30:20Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:20.404 +01:00 [DBG] Start token request validation
2020-01-19 14:30:20.404 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:30:20.405 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:0000001D",
  "TimeStamp": "2020-01-19T13:30:20Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:20.406 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:30:20.406 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:30:20.407 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:30:20.407 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:30:20.408 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:30:20.408 +01:00 [DBG] Issued claims: []
2020-01-19 14:30:20.413 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****2llQ"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:0000001D",
  "TimeStamp": "2020-01-19T13:30:20Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:20.421 +01:00 [DBG] Token request success.
2020-01-19 14:30:21.339 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:30:21.341 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:30:21.342 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:30:21.343 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:30:21.344 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:30:21.346 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:30:21.347 +01:00 [DBG] Start token request.
2020-01-19 14:30:21.348 +01:00 [DBG] Start client validation
2020-01-19 14:30:21.349 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:30:21.350 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:30:21.350 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:30:21.351 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:30:21.351 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:30:21.352 +01:00 [DBG] Client validation success
2020-01-19 14:30:21.353 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:0000001F",
  "TimeStamp": "2020-01-19T13:30:21Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:21.355 +01:00 [DBG] Start token request validation
2020-01-19 14:30:21.355 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:30:21.356 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:0000001F",
  "TimeStamp": "2020-01-19T13:30:21Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:21.357 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:30:21.358 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:30:21.361 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:30:21.362 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:30:21.363 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:30:21.364 +01:00 [DBG] Issued claims: []
2020-01-19 14:30:21.369 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****tSTg"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:0000001F",
  "TimeStamp": "2020-01-19T13:30:21Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:21.390 +01:00 [DBG] Token request success.
2020-01-19 14:30:28.584 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:30:28.586 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:30:28.587 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:30:28.587 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:30:28.588 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:30:28.590 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:30:28.591 +01:00 [DBG] Start token request.
2020-01-19 14:30:28.594 +01:00 [DBG] Start client validation
2020-01-19 14:30:28.596 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:30:28.596 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:30:28.597 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:30:28.597 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:30:28.598 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:30:28.599 +01:00 [DBG] Client validation success
2020-01-19 14:30:28.599 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:00000021",
  "TimeStamp": "2020-01-19T13:30:28Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:28.601 +01:00 [DBG] Start token request validation
2020-01-19 14:30:28.601 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:30:28.603 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:00000021",
  "TimeStamp": "2020-01-19T13:30:28Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:28.605 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:30:28.606 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:30:28.607 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:30:28.608 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:30:28.608 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:30:28.609 +01:00 [DBG] Issued claims: []
2020-01-19 14:30:28.616 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****AFjQ"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:00000021",
  "TimeStamp": "2020-01-19T13:30:28Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:28.617 +01:00 [DBG] Token request success.
2020-01-19 14:30:32.773 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:30:32.774 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:30:32.776 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:30:32.777 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:30:32.778 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:30:32.781 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:30:32.782 +01:00 [DBG] Start token request.
2020-01-19 14:30:32.784 +01:00 [DBG] Start client validation
2020-01-19 14:30:32.785 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:30:32.786 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:30:32.787 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:30:32.789 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:30:32.791 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:30:32.791 +01:00 [DBG] Client validation success
2020-01-19 14:30:32.792 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:00000023",
  "TimeStamp": "2020-01-19T13:30:32Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:32.796 +01:00 [DBG] Start token request validation
2020-01-19 14:30:32.797 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:30:32.799 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:00000023",
  "TimeStamp": "2020-01-19T13:30:32Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:32.806 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:30:32.807 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:30:32.810 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:30:32.811 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:30:32.813 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:30:32.816 +01:00 [DBG] Issued claims: []
2020-01-19 14:30:32.822 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****8WUg"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:00000023",
  "TimeStamp": "2020-01-19T13:30:32Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:32.825 +01:00 [DBG] Token request success.
2020-01-19 14:30:46.255 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:30:46.256 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:30:46.256 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:30:46.258 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:30:46.261 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:30:46.264 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:30:46.265 +01:00 [DBG] Start token request.
2020-01-19 14:30:46.267 +01:00 [DBG] Start client validation
2020-01-19 14:30:46.268 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:30:46.268 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:30:46.272 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:30:46.272 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:30:46.273 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:30:46.273 +01:00 [DBG] Client validation success
2020-01-19 14:30:46.274 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:00000025",
  "TimeStamp": "2020-01-19T13:30:46Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:46.276 +01:00 [DBG] Start token request validation
2020-01-19 14:30:46.276 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:30:46.277 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:00000025",
  "TimeStamp": "2020-01-19T13:30:46Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:46.279 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:30:46.280 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:30:46.281 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:30:46.281 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:30:46.282 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:30:46.283 +01:00 [DBG] Issued claims: []
2020-01-19 14:30:46.288 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****lroQ"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:00000025",
  "TimeStamp": "2020-01-19T13:30:46Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:46.292 +01:00 [DBG] Token request success.
2020-01-19 14:30:56.864 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:30:56.865 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:30:56.866 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:30:56.867 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:30:56.868 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:30:56.868 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:30:56.869 +01:00 [DBG] Start token request.
2020-01-19 14:30:56.869 +01:00 [DBG] Start client validation
2020-01-19 14:30:56.870 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:30:56.870 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:30:56.871 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:30:56.871 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:30:56.871 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:30:56.872 +01:00 [DBG] Client validation success
2020-01-19 14:30:56.872 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:00000027",
  "TimeStamp": "2020-01-19T13:30:56Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:56.874 +01:00 [DBG] Start token request validation
2020-01-19 14:30:56.874 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:30:56.875 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:00000027",
  "TimeStamp": "2020-01-19T13:30:56Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:56.876 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:30:56.877 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:30:56.878 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:30:56.879 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:30:56.879 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:30:56.880 +01:00 [DBG] Issued claims: []
2020-01-19 14:30:56.886 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****xUxw"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:00000027",
  "TimeStamp": "2020-01-19T13:30:56Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:30:56.894 +01:00 [DBG] Token request success.
2020-01-19 14:33:08.082 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:33:08.084 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:33:08.085 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:33:08.087 +01:00 [DBG] Start discovery request
2020-01-19 14:33:18.116 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:33:18.117 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:33:18.117 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:33:18.118 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:33:18.118 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:33:18.119 +01:00 [DBG] Start authorize request
2020-01-19 14:33:18.119 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:33:18.119 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:33:18.120 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:33:18.120 +01:00 [DBG] No PKCE used.
2020-01-19 14:33:18.120 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:33:18.122 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "84b5e048-eb4d-467b-92bb-6b00a478c694",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "84b5e048-eb4d-467b-92bb-6b00a478c694",
    "client_id": "nodejs"
  }
}
2020-01-19 14:33:18.123 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:33:18.123 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:33:18.132 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****6771"
    }
  ],
  "ActivityId": "0HLSSRA3BHEE2:00000001",
  "TimeStamp": "2020-01-19T13:33:18Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:33:18.133 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "84b5e048-eb4d-467b-92bb-6b00a478c694",
  "Scope": "openid profile role"
}
2020-01-19 14:33:18.133 +01:00 [DBG] Augmenting SignInContext
2020-01-19 14:33:18.134 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 14:33:18.156 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:33:18.165 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:33:18.166 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:33:18.166 +01:00 [DBG] Start token request.
2020-01-19 14:33:18.166 +01:00 [DBG] Start client validation
2020-01-19 14:33:18.167 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:33:18.167 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-19 14:33:18.167 +01:00 [DBG] Secret id found: nodejs
2020-01-19 14:33:18.168 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:33:18.168 +01:00 [DBG] Client validation success
2020-01-19 14:33:18.169 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEE3:00000001",
  "TimeStamp": "2020-01-19T13:33:18Z",
  "ProcessId": 6452,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 14:33:18.169 +01:00 [DBG] Start token request validation
2020-01-19 14:33:18.170 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:33:18.182 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:33:18.183 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "b9eeb7b09f658adc1d8aab0dc0e001cd723dc414e235be4e7961ab72c4266771",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "b9eeb7b09f658adc1d8aab0dc0e001cd723dc414e235be4e7961ab72c4266771",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "84b5e048-eb4d-467b-92bb-6b00a478c694"
  }
}
2020-01-19 14:33:18.184 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-19 14:33:18.185 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:33:18.185 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:33:18.186 +01:00 [DBG] Issued claims: []
2020-01-19 14:33:18.190 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-19 14:33:18.199 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via ClaimsProviderIdentityToken
2020-01-19 14:33:18.215 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 14:33:18.220 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****5P8w"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****jlAQ"
    }
  ],
  "ActivityId": "0HLSSRA3BHEE3:00000001",
  "TimeStamp": "2020-01-19T13:33:18Z",
  "ProcessId": 6452,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 14:33:18.222 +01:00 [DBG] Token request success.
2020-01-19 14:33:18.245 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:33:18.247 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:33:18.248 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:33:18.249 +01:00 [DBG] Start key discovery request
2020-01-19 14:33:18.273 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-19 14:33:18.275 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-19 14:33:18.276 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-19 14:33:18.281 +01:00 [DBG] Start userinfo request
2020-01-19 14:33:18.288 +01:00 [DBG] Bearer token found in header
2020-01-19 14:33:18.340 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-19 14:33:18.347 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579440798,
    "exp": 1579440823,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579439785,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "role"
    ],
    "amr": "pwd"
  }
}
2020-01-19 14:33:18.352 +01:00 [DBG] Creating userinfo response
2020-01-19 14:33:18.357 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 14:33:18.366 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 14:33:18.368 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at role
2020-01-19 14:33:18.369 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 14:33:18.369 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via UserInfoEndpoint
2020-01-19 14:33:18.370 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 14:33:18.371 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website role
2020-01-19 14:33:18.371 +01:00 [DBG] End userinfo request
2020-01-19 14:33:18.644 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:33:18.645 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:33:18.645 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:33:18.646 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:33:18.646 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:33:18.647 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:33:18.647 +01:00 [DBG] Start discovery request
2020-01-19 14:33:18.662 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:33:18.662 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:33:18.663 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:33:18.663 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:33:18.664 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:33:18.664 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:33:18.666 +01:00 [DBG] Start key discovery request
2020-01-19 14:33:18.693 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:33:18.693 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:33:18.694 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:33:18.698 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:33:18.698 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:33:18.698 +01:00 [DBG] Start authorize request
2020-01-19 14:33:18.699 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:33:18.699 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:33:18.699 +01:00 [ERR] Invalid redirect_uri: http://localhost:8888/index.html
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "pW0pKIh54kEMfSaxCFkIxCgDF-HaLweP7_8O504niJ1Sc",
    "redirect_uri": "http://localhost:8888/index.html",
    "scope": "openid profile api",
    "code_challenge": "ifPx_VytiMMbTbKcOY4CfBBSi9iW4EDH3JMYFY3ZSJE",
    "code_challenge_method": "S256",
    "nonce": "pW0pKIh54kEMfSaxCFkIxCgDF-HaLweP7_8O504niJ1Sc"
  }
}
2020-01-19 14:33:18.701 +01:00 [ERR] Request validation failed
2020-01-19 14:33:18.702 +01:00 [INF] {
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "pW0pKIh54kEMfSaxCFkIxCgDF-HaLweP7_8O504niJ1Sc",
    "redirect_uri": "http://localhost:8888/index.html",
    "scope": "openid profile api",
    "code_challenge": "ifPx_VytiMMbTbKcOY4CfBBSi9iW4EDH3JMYFY3ZSJE",
    "code_challenge_method": "S256",
    "nonce": "pW0pKIh54kEMfSaxCFkIxCgDF-HaLweP7_8O504niJ1Sc"
  }
}
2020-01-19 14:33:18.709 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "",
  "Error": "unauthorized_client",
  "ErrorDescription": "Invalid redirect_uri",
  "ActivityId": "0HLSSRA3BHEE2:00000002",
  "TimeStamp": "2020-01-19T13:33:18Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:33:18.721 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:33:18.722 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:36:01.455 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:36:01.457 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:36:01.459 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:36:01.460 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:36:01.465 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:36:01.467 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:36:01.468 +01:00 [DBG] Start token request.
2020-01-19 14:36:01.468 +01:00 [DBG] Start client validation
2020-01-19 14:36:01.468 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:36:01.468 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:36:01.469 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:36:01.469 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:36:01.470 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:36:01.470 +01:00 [DBG] Client validation success
2020-01-19 14:36:01.471 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEDV:0000002B",
  "TimeStamp": "2020-01-19T13:36:01Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:36:01.471 +01:00 [DBG] Start token request validation
2020-01-19 14:36:01.472 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:36:01.472 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEDV:0000002B",
  "TimeStamp": "2020-01-19T13:36:01Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:36:01.473 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:36:01.473 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:36:01.474 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:36:01.474 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:36:01.475 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:36:01.477 +01:00 [DBG] Issued claims: []
2020-01-19 14:36:01.483 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****Jm5w"
    }
  ],
  "ActivityId": "0HLSSRA3BHEDV:0000002B",
  "TimeStamp": "2020-01-19T13:36:01Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:36:01.484 +01:00 [DBG] Token request success.
2020-01-19 14:37:21.213 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:37:21.213 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:37:21.213 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:37:21.214 +01:00 [DBG] Start discovery request
2020-01-19 14:37:34.804 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:37:34.805 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:37:34.805 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:37:34.805 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:37:34.806 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:37:34.806 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:37:34.807 +01:00 [DBG] Start discovery request
2020-01-19 14:37:34.820 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:37:34.823 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:37:34.823 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:37:34.824 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:37:34.825 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:37:34.825 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:37:34.826 +01:00 [DBG] Start key discovery request
2020-01-19 14:37:34.871 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:34.872 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:34.872 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:37:34.872 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:37:34.873 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:37:34.873 +01:00 [DBG] Start authorize request
2020-01-19 14:37:34.873 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:37:34.874 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:37:34.874 +01:00 [ERR] Invalid redirect_uri: http://localhost:8888/index.html
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "8I5_bqojaYhbZdFQLIRfupGa2kCRW-zeq7Qf-KrWzwPv4",
    "redirect_uri": "http://localhost:8888/index.html",
    "scope": "openid profile api",
    "code_challenge": "NtVQiRGlufJu5BcRbg6KPtLys7yv-MBLcZliJf9Vo6U",
    "code_challenge_method": "S256",
    "nonce": "8I5_bqojaYhbZdFQLIRfupGa2kCRW-zeq7Qf-KrWzwPv4"
  }
}
2020-01-19 14:37:34.875 +01:00 [ERR] Request validation failed
2020-01-19 14:37:34.876 +01:00 [INF] {
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "8I5_bqojaYhbZdFQLIRfupGa2kCRW-zeq7Qf-KrWzwPv4",
    "redirect_uri": "http://localhost:8888/index.html",
    "scope": "openid profile api",
    "code_challenge": "NtVQiRGlufJu5BcRbg6KPtLys7yv-MBLcZliJf9Vo6U",
    "code_challenge_method": "S256",
    "nonce": "8I5_bqojaYhbZdFQLIRfupGa2kCRW-zeq7Qf-KrWzwPv4"
  }
}
2020-01-19 14:37:34.877 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "",
  "Error": "unauthorized_client",
  "ErrorDescription": "Invalid redirect_uri",
  "ActivityId": "0HLSSRA3BHEE2:00000004",
  "TimeStamp": "2020-01-19T13:37:34Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:37:34.899 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:34.900 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:39.968 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:37:39.968 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:37:39.969 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:37:39.969 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:37:39.969 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:37:39.970 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:37:39.970 +01:00 [DBG] Start key discovery request
2020-01-19 14:37:40.007 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:40.008 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:40.008 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:37:40.008 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:37:40.008 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:37:40.009 +01:00 [DBG] Start authorize request
2020-01-19 14:37:40.009 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:37:40.009 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:37:40.010 +01:00 [ERR] Invalid redirect_uri: http://localhost:8888/index.html
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "aQMi5GmUVfJ2jAIs783BtI8TRGiHwGZNtxItvZ7G2cQvO",
    "redirect_uri": "http://localhost:8888/index.html",
    "scope": "openid profile api",
    "code_challenge": "f8eijIa2vp3FBS3IEld7ICehB4PWJGg3YK6Qn_pXVGU",
    "code_challenge_method": "S256",
    "nonce": "aQMi5GmUVfJ2jAIs783BtI8TRGiHwGZNtxItvZ7G2cQvO"
  }
}
2020-01-19 14:37:40.012 +01:00 [ERR] Request validation failed
2020-01-19 14:37:40.012 +01:00 [INF] {
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "aQMi5GmUVfJ2jAIs783BtI8TRGiHwGZNtxItvZ7G2cQvO",
    "redirect_uri": "http://localhost:8888/index.html",
    "scope": "openid profile api",
    "code_challenge": "f8eijIa2vp3FBS3IEld7ICehB4PWJGg3YK6Qn_pXVGU",
    "code_challenge_method": "S256",
    "nonce": "aQMi5GmUVfJ2jAIs783BtI8TRGiHwGZNtxItvZ7G2cQvO"
  }
}
2020-01-19 14:37:40.013 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "",
  "Error": "unauthorized_client",
  "ErrorDescription": "Invalid redirect_uri",
  "ActivityId": "0HLSSRA3BHEE2:00000006",
  "TimeStamp": "2020-01-19T13:37:40Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:37:40.035 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:40.035 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:41.903 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:37:41.903 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:37:41.903 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:37:41.903 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:37:41.904 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:37:41.904 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:37:41.904 +01:00 [DBG] Start key discovery request
2020-01-19 14:37:41.935 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:41.935 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:41.935 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:37:41.936 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:37:41.936 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:37:41.937 +01:00 [DBG] Start authorize request
2020-01-19 14:37:41.937 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:37:41.938 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:37:41.938 +01:00 [ERR] Invalid redirect_uri: http://localhost:8888/index.html
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "UO5cf2_jY1Y_R5LQj3kN0DYT8CSrNTcOlQpkXtwyoN6NY",
    "redirect_uri": "http://localhost:8888/index.html",
    "scope": "openid profile api",
    "code_challenge": "jnsB5qUJAXFA9cq5keyf4TSX8jT9_5plxHpv69dEzIA",
    "code_challenge_method": "S256",
    "nonce": "UO5cf2_jY1Y_R5LQj3kN0DYT8CSrNTcOlQpkXtwyoN6NY"
  }
}
2020-01-19 14:37:41.939 +01:00 [ERR] Request validation failed
2020-01-19 14:37:41.939 +01:00 [INF] {
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "UO5cf2_jY1Y_R5LQj3kN0DYT8CSrNTcOlQpkXtwyoN6NY",
    "redirect_uri": "http://localhost:8888/index.html",
    "scope": "openid profile api",
    "code_challenge": "jnsB5qUJAXFA9cq5keyf4TSX8jT9_5plxHpv69dEzIA",
    "code_challenge_method": "S256",
    "nonce": "UO5cf2_jY1Y_R5LQj3kN0DYT8CSrNTcOlQpkXtwyoN6NY"
  }
}
2020-01-19 14:37:41.940 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "",
  "Error": "unauthorized_client",
  "ErrorDescription": "Invalid redirect_uri",
  "ActivityId": "0HLSSRA3BHEE2:00000008",
  "TimeStamp": "2020-01-19T13:37:41Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:37:41.997 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:41.998 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:43.355 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:37:43.355 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:37:43.355 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:37:43.356 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:37:43.356 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:37:43.356 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:37:43.357 +01:00 [DBG] Start key discovery request
2020-01-19 14:37:43.385 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:43.386 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:43.386 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:37:43.387 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:37:43.387 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:37:43.387 +01:00 [DBG] Start authorize request
2020-01-19 14:37:43.387 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:37:43.388 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:37:43.388 +01:00 [ERR] Invalid redirect_uri: http://localhost:8888/index.html
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "-Yl9FZSGmr914wInhL5cr7muWalD7ehGrfw4pnoxKK0oe",
    "redirect_uri": "http://localhost:8888/index.html",
    "scope": "openid profile api",
    "code_challenge": "JT7913rngKoug4b5YcLk-fBkvIndZs9krravU2Bk5SA",
    "code_challenge_method": "S256",
    "nonce": "-Yl9FZSGmr914wInhL5cr7muWalD7ehGrfw4pnoxKK0oe"
  }
}
2020-01-19 14:37:43.389 +01:00 [ERR] Request validation failed
2020-01-19 14:37:43.389 +01:00 [INF] {
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "-Yl9FZSGmr914wInhL5cr7muWalD7ehGrfw4pnoxKK0oe",
    "redirect_uri": "http://localhost:8888/index.html",
    "scope": "openid profile api",
    "code_challenge": "JT7913rngKoug4b5YcLk-fBkvIndZs9krravU2Bk5SA",
    "code_challenge_method": "S256",
    "nonce": "-Yl9FZSGmr914wInhL5cr7muWalD7ehGrfw4pnoxKK0oe"
  }
}
2020-01-19 14:37:43.390 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "",
  "Error": "unauthorized_client",
  "ErrorDescription": "Invalid redirect_uri",
  "ActivityId": "0HLSSRA3BHEE2:0000000A",
  "TimeStamp": "2020-01-19T13:37:43Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:37:43.415 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:43.416 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:43.536 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:37:43.536 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:37:43.537 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:37:43.538 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:37:43.539 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:37:43.541 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:37:43.542 +01:00 [DBG] Start key discovery request
2020-01-19 14:37:43.568 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:43.569 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:43.569 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:37:43.570 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:37:43.570 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:37:43.570 +01:00 [DBG] Start authorize request
2020-01-19 14:37:43.570 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:37:43.571 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:37:43.571 +01:00 [ERR] Invalid redirect_uri: http://localhost:8888/index.html
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "qmHZWtA8plcfn5-_sVdpS-DUXlwM_VFJNiCHrwSFypjM0",
    "redirect_uri": "http://localhost:8888/index.html",
    "scope": "openid profile api",
    "code_challenge": "IB1mSFso1xSxaFNq5DpX8UIoaV8QKaHhtcnstn8CqCc",
    "code_challenge_method": "S256",
    "nonce": "qmHZWtA8plcfn5-_sVdpS-DUXlwM_VFJNiCHrwSFypjM0"
  }
}
2020-01-19 14:37:43.571 +01:00 [ERR] Request validation failed
2020-01-19 14:37:43.572 +01:00 [INF] {
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "qmHZWtA8plcfn5-_sVdpS-DUXlwM_VFJNiCHrwSFypjM0",
    "redirect_uri": "http://localhost:8888/index.html",
    "scope": "openid profile api",
    "code_challenge": "IB1mSFso1xSxaFNq5DpX8UIoaV8QKaHhtcnstn8CqCc",
    "code_challenge_method": "S256",
    "nonce": "qmHZWtA8plcfn5-_sVdpS-DUXlwM_VFJNiCHrwSFypjM0"
  }
}
2020-01-19 14:37:43.572 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "",
  "Error": "unauthorized_client",
  "ErrorDescription": "Invalid redirect_uri",
  "ActivityId": "0HLSSRA3BHEE2:0000000C",
  "TimeStamp": "2020-01-19T13:37:43Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:37:43.586 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:43.586 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:50.243 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:50.244 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.649 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:37:54.650 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:37:54.651 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:37:54.652 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:37:54.653 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:37:54.653 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:37:54.653 +01:00 [DBG] Start discovery request
2020-01-19 14:37:54.702 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:37:54.703 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:37:54.703 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:37:54.704 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:37:54.704 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:37:54.704 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:37:54.705 +01:00 [DBG] Start key discovery request
2020-01-19 14:37:54.737 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.737 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.738 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:37:54.738 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:37:54.738 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:37:54.739 +01:00 [DBG] Start authorize request
2020-01-19 14:37:54.739 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:37:54.739 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:37:54.740 +01:00 [ERR] Invalid redirect_uri: http://localhost:8888/index.html
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "mRFbGqNpkl73EC4vCCpj93DSMDCHqzxKVC6dydpcTegGp",
    "redirect_uri": "http://localhost:8888/index.html",
    "scope": "openid profile api",
    "code_challenge": "1SO5w2A6odpy9_RBt_MiCfBz_zQCW6O8BJFxRzN2DC4",
    "code_challenge_method": "S256",
    "nonce": "mRFbGqNpkl73EC4vCCpj93DSMDCHqzxKVC6dydpcTegGp"
  }
}
2020-01-19 14:37:54.740 +01:00 [ERR] Request validation failed
2020-01-19 14:37:54.740 +01:00 [INF] {
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "RequestedScopes": "",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "mRFbGqNpkl73EC4vCCpj93DSMDCHqzxKVC6dydpcTegGp",
    "redirect_uri": "http://localhost:8888/index.html",
    "scope": "openid profile api",
    "code_challenge": "1SO5w2A6odpy9_RBt_MiCfBz_zQCW6O8BJFxRzN2DC4",
    "code_challenge_method": "S256",
    "nonce": "mRFbGqNpkl73EC4vCCpj93DSMDCHqzxKVC6dydpcTegGp"
  }
}
2020-01-19 14:37:54.741 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "",
  "Error": "unauthorized_client",
  "ErrorDescription": "Invalid redirect_uri",
  "ActivityId": "0HLSSRA3BHEE2:0000000F",
  "TimeStamp": "2020-01-19T13:37:54Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:37:54.763 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.772 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.818 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.819 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.821 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.821 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.822 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.846 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.847 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.848 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.848 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.870 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.931 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:37:54.933 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:44:05.417 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:44:05.419 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:44:05.419 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:44:05.423 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:44:05.424 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:44:05.424 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:44:05.425 +01:00 [DBG] Start token request.
2020-01-19 14:44:05.425 +01:00 [DBG] Start client validation
2020-01-19 14:44:05.425 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:44:05.425 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:44:05.426 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:44:05.426 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:44:05.426 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:44:05.428 +01:00 [DBG] Client validation success
2020-01-19 14:44:05.428 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEEB:00000002",
  "TimeStamp": "2020-01-19T13:44:05Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:44:05.429 +01:00 [DBG] Start token request validation
2020-01-19 14:44:05.430 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:44:05.430 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEEB:00000002",
  "TimeStamp": "2020-01-19T13:44:05Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:44:05.431 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:44:05.432 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:44:05.432 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:44:05.433 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:44:05.433 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:44:05.434 +01:00 [DBG] Issued claims: []
2020-01-19 14:44:05.439 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****FFqA"
    }
  ],
  "ActivityId": "0HLSSRA3BHEEB:00000002",
  "TimeStamp": "2020-01-19T13:44:05Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:44:05.441 +01:00 [DBG] Token request success.
2020-01-19 14:44:06.984 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:44:06.985 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:44:06.985 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:44:06.985 +01:00 [DBG] Start discovery request
2020-01-19 14:46:50.466 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:46:50.466 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:46:50.467 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:46:50.467 +01:00 [DBG] Start discovery request
2020-01-19 14:47:01.235 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:47:01.237 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:47:01.238 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:47:01.238 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:47:01.239 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:47:01.239 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:47:01.240 +01:00 [DBG] Start discovery request
2020-01-19 14:47:01.279 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:47:01.281 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:47:01.281 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:47:01.281 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:47:01.282 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:47:01.282 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:47:01.283 +01:00 [DBG] Start key discovery request
2020-01-19 14:47:01.322 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:47:01.322 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:47:01.323 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:47:01.323 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:47:01.323 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:47:01.324 +01:00 [DBG] Start authorize request
2020-01-19 14:47:01.324 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:47:01.324 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:47:01.324 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:47:01.325 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:47:01.325 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "vIgLCn6ntrSNgAITQMg7AQAl4BQsfQNJmcmR32AsHpQhd",
  "Nonce": "vIgLCn6ntrSNgAITQMg7AQAl4BQsfQNJmcmR32AsHpQhd",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "vIgLCn6ntrSNgAITQMg7AQAl4BQsfQNJmcmR32AsHpQhd",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "bArpOQyvhnnboDBMCYoyXyI006WahGmVYzcRKrgZxBs",
    "code_challenge_method": "S256",
    "nonce": "vIgLCn6ntrSNgAITQMg7AQAl4BQsfQNJmcmR32AsHpQhd"
  }
}
2020-01-19 14:47:01.326 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:47:01.326 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:47:01.336 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****669a"
    }
  ],
  "ActivityId": "0HLSSRA3BHEEE:00000001",
  "TimeStamp": "2020-01-19T13:47:01Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:47:01.336 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "vIgLCn6ntrSNgAITQMg7AQAl4BQsfQNJmcmR32AsHpQhd",
  "Scope": "openid profile api"
}
2020-01-19 14:47:01.505 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:47:01.505 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:47:01.506 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:47:01.506 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:47:01.507 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:47:01.507 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:47:01.507 +01:00 [DBG] Start discovery request
2020-01-19 14:47:01.529 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:47:01.529 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:47:01.530 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:47:01.530 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:47:01.530 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:47:01.531 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:47:01.531 +01:00 [DBG] Start key discovery request
2020-01-19 14:47:01.575 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 14:47:01.575 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:47:01.575 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:47:01.576 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:47:01.576 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:47:01.576 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:47:01.576 +01:00 [DBG] Start token request.
2020-01-19 14:47:01.577 +01:00 [DBG] Start client validation
2020-01-19 14:47:01.577 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:47:01.577 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:47:01.577 +01:00 [DBG] client id without secret found
2020-01-19 14:47:01.577 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:47:01.578 +01:00 [DBG] Secret id found: angular
2020-01-19 14:47:01.578 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:47:01.578 +01:00 [DBG] Client validation success
2020-01-19 14:47:01.578 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEEB:00000007",
  "TimeStamp": "2020-01-19T13:47:01Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:47:01.578 +01:00 [DBG] Start token request validation
2020-01-19 14:47:01.579 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:47:01.589 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:47:01.589 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:47:01.590 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "85b38c666f03e167402400ce62e0370c727ebbf7f2e2327e222cd8f694d5669a",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "85b38c666f03e167402400ce62e0370c727ebbf7f2e2327e222cd8f694d5669a",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "m392_j7O181dyTWahSvS_hZ43Uart8GGF17Im4FMpkpKF",
    "client_id": "angular"
  }
}
2020-01-19 14:47:01.590 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:47:01.590 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:47:01.591 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:47:01.591 +01:00 [DBG] Issued claims: []
2020-01-19 14:47:01.594 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:47:01.594 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:47:01.599 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****1wNA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****a0CA"
    }
  ],
  "ActivityId": "0HLSSRA3BHEEB:00000007",
  "TimeStamp": "2020-01-19T13:47:01Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:47:01.606 +01:00 [DBG] Token request success.
2020-01-19 14:47:12.124 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:47:12.124 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:47:12.124 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:47:12.125 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:47:12.125 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:47:12.125 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:47:12.125 +01:00 [DBG] Start discovery request
2020-01-19 14:47:12.167 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:47:12.168 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:47:12.168 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:47:12.168 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:47:12.168 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:47:12.169 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:47:12.169 +01:00 [DBG] Start key discovery request
2020-01-19 14:47:18.339 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:47:18.340 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:47:18.340 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:47:18.340 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:47:18.340 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:47:18.341 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:47:18.341 +01:00 [DBG] Start discovery request
2020-01-19 14:47:18.397 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:47:18.397 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:47:18.397 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:47:18.398 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:47:18.398 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:47:18.398 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:47:18.398 +01:00 [DBG] Start key discovery request
2020-01-19 14:47:37.061 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:47:37.062 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:47:37.062 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:47:37.063 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:47:37.064 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:47:37.066 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:47:37.067 +01:00 [DBG] Start discovery request
2020-01-19 14:47:37.110 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:47:37.111 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:47:37.111 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:47:37.111 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:47:37.112 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:47:37.112 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:47:37.112 +01:00 [DBG] Start key discovery request
2020-01-19 14:47:37.149 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:47:37.150 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:47:37.150 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:47:37.150 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:47:37.151 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:47:37.151 +01:00 [DBG] Start authorize request
2020-01-19 14:47:37.151 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:47:37.151 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:47:37.151 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:47:37.152 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:47:37.152 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "iX6cdyj_ITpW-Gn2PyE83u1-eNcgy-oQ7e0hCc3XhzshR",
  "Nonce": "iX6cdyj_ITpW-Gn2PyE83u1-eNcgy-oQ7e0hCc3XhzshR",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "iX6cdyj_ITpW-Gn2PyE83u1-eNcgy-oQ7e0hCc3XhzshR",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "SQfq0ffD8vaWwpIw8erTaWKEB9XumP2ZE5_346kl3Es",
    "code_challenge_method": "S256",
    "nonce": "iX6cdyj_ITpW-Gn2PyE83u1-eNcgy-oQ7e0hCc3XhzshR"
  }
}
2020-01-19 14:47:37.153 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:47:37.153 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:47:37.160 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****7131"
    }
  ],
  "ActivityId": "0HLSSRA3BHEEE:00000002",
  "TimeStamp": "2020-01-19T13:47:37Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:47:37.161 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "iX6cdyj_ITpW-Gn2PyE83u1-eNcgy-oQ7e0hCc3XhzshR",
  "Scope": "openid profile api"
}
2020-01-19 14:47:37.324 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:47:37.324 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:47:37.325 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:47:37.325 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:47:37.325 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:47:37.326 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:47:37.326 +01:00 [DBG] Start discovery request
2020-01-19 14:47:37.358 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:47:37.358 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:47:37.358 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:47:37.359 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:47:37.359 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:47:37.359 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:47:37.360 +01:00 [DBG] Start key discovery request
2020-01-19 14:47:37.376 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 14:47:37.377 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:47:37.377 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:47:37.377 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:47:37.378 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:47:37.378 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:47:37.379 +01:00 [DBG] Start token request.
2020-01-19 14:47:37.379 +01:00 [DBG] Start client validation
2020-01-19 14:47:37.379 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:47:37.379 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:47:37.380 +01:00 [DBG] client id without secret found
2020-01-19 14:47:37.380 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:47:37.381 +01:00 [DBG] Secret id found: angular
2020-01-19 14:47:37.383 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:47:37.383 +01:00 [DBG] Client validation success
2020-01-19 14:47:37.384 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEEB:00000014",
  "TimeStamp": "2020-01-19T13:47:37Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:47:37.384 +01:00 [DBG] Start token request validation
2020-01-19 14:47:37.385 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:47:37.392 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:47:37.392 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:47:37.393 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "81dc6e5628d8ecafe91ffd497c9b415a8618fe1627589a4f9e619784c9677131",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "81dc6e5628d8ecafe91ffd497c9b415a8618fe1627589a4f9e619784c9677131",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "qbcX2WXCsk7cQ_7KBsRizHY7xuYUEauU9s7cG8SV5iByL",
    "client_id": "angular"
  }
}
2020-01-19 14:47:37.393 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:47:37.393 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:47:37.394 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:47:37.394 +01:00 [DBG] Issued claims: []
2020-01-19 14:47:37.399 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:47:37.400 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:47:37.406 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****BqYQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****-XaA"
    }
  ],
  "ActivityId": "0HLSSRA3BHEEB:00000014",
  "TimeStamp": "2020-01-19T13:47:37Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:47:37.410 +01:00 [DBG] Token request success.
2020-01-19 14:48:00.307 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:48:00.308 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:48:00.308 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:48:00.309 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:48:00.309 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:48:00.309 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:48:00.309 +01:00 [DBG] Start discovery request
2020-01-19 14:48:00.350 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:48:00.351 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:48:00.352 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:48:00.355 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:48:00.356 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:48:00.356 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:48:00.356 +01:00 [DBG] Start key discovery request
2020-01-19 14:48:01.711 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:48:01.712 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:48:01.716 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:48:01.717 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:48:01.719 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:48:01.727 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:48:01.728 +01:00 [DBG] Start discovery request
2020-01-19 14:48:01.790 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:48:01.792 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:48:01.793 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:48:01.795 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:48:01.796 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:48:01.796 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:48:01.797 +01:00 [DBG] Start key discovery request
2020-01-19 14:48:09.066 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:48:09.068 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:48:09.068 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:48:09.069 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:48:09.069 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:48:09.070 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:48:09.070 +01:00 [DBG] Start discovery request
2020-01-19 14:48:09.122 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:48:09.123 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:48:09.123 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:48:09.124 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:48:09.124 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:48:09.125 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:48:09.125 +01:00 [DBG] Start key discovery request
2020-01-19 14:48:09.197 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:48:09.198 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:48:09.199 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:48:09.199 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:48:09.199 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:48:09.200 +01:00 [DBG] Start authorize request
2020-01-19 14:48:09.201 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:48:09.201 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:48:09.201 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:48:09.202 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:48:09.202 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "LnNS9cnWnuavqFpJ7SA9zWsZ2sM_948un9rcWviwOcDfv",
  "Nonce": "LnNS9cnWnuavqFpJ7SA9zWsZ2sM_948un9rcWviwOcDfv",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "LnNS9cnWnuavqFpJ7SA9zWsZ2sM_948un9rcWviwOcDfv",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "HiI4iNlGF_jgR2zY6YzxBBKZH8JXAKby0uRd7mpB60Y",
    "code_challenge_method": "S256",
    "nonce": "LnNS9cnWnuavqFpJ7SA9zWsZ2sM_948un9rcWviwOcDfv"
  }
}
2020-01-19 14:48:09.203 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:48:09.203 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:48:09.214 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****5f32"
    }
  ],
  "ActivityId": "0HLSSRA3BHEEE:00000003",
  "TimeStamp": "2020-01-19T13:48:09Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:48:09.231 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "LnNS9cnWnuavqFpJ7SA9zWsZ2sM_948un9rcWviwOcDfv",
  "Scope": "openid profile api"
}
2020-01-19 14:48:09.441 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:48:09.443 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:48:09.447 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:48:09.448 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:48:09.448 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:48:09.449 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:48:09.449 +01:00 [DBG] Start discovery request
2020-01-19 14:48:09.478 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:48:09.479 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:48:09.479 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:48:09.480 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:48:09.480 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:48:09.481 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:48:09.481 +01:00 [DBG] Start key discovery request
2020-01-19 14:48:09.512 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 14:48:09.513 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:48:09.513 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:48:09.514 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:48:09.514 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:48:09.515 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:48:09.517 +01:00 [DBG] Start token request.
2020-01-19 14:48:09.517 +01:00 [DBG] Start client validation
2020-01-19 14:48:09.518 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:48:09.518 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:48:09.519 +01:00 [DBG] client id without secret found
2020-01-19 14:48:09.519 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:48:09.519 +01:00 [DBG] Secret id found: angular
2020-01-19 14:48:09.520 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:48:09.520 +01:00 [DBG] Client validation success
2020-01-19 14:48:09.520 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSRA3BHEEB:00000021",
  "TimeStamp": "2020-01-19T13:48:09Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:48:09.521 +01:00 [DBG] Start token request validation
2020-01-19 14:48:09.522 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:48:09.531 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:48:09.531 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:48:09.532 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "578c225d7f6acf0c788bb325728780da748508ec8fa3df0591a4bf3595ac5f32",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "578c225d7f6acf0c788bb325728780da748508ec8fa3df0591a4bf3595ac5f32",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "qANriW2skGPjC0DNUiM1X16UhTjqUb8oUSXACl_XMuHkE",
    "client_id": "angular"
  }
}
2020-01-19 14:48:09.533 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:48:09.533 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:48:09.533 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:48:09.533 +01:00 [DBG] Issued claims: []
2020-01-19 14:48:09.536 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:48:09.537 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:48:09.556 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****7L5w"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****-Htw"
    }
  ],
  "ActivityId": "0HLSSRA3BHEEB:00000021",
  "TimeStamp": "2020-01-19T13:48:09Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:48:09.557 +01:00 [DBG] Token request success.
2020-01-19 14:53:22.281 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 14:53:22.283 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 14:53:22.284 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 14:53:22.284 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:53:22.285 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:53:22.285 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:53:22.286 +01:00 [DBG] Start token request.
2020-01-19 14:53:22.286 +01:00 [DBG] Start client validation
2020-01-19 14:53:22.286 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:53:22.287 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:53:22.287 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:53:22.288 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 14:53:22.288 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 14:53:22.289 +01:00 [DBG] Client validation success
2020-01-19 14:53:22.289 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSRA3BHEEF:00000002",
  "TimeStamp": "2020-01-19T13:53:22Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:53:22.290 +01:00 [DBG] Start token request validation
2020-01-19 14:53:22.290 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 14:53:22.291 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSRA3BHEEF:00000002",
  "TimeStamp": "2020-01-19T13:53:22Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:53:22.291 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 14:53:22.291 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile session",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 14:53:22.292 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 14:53:22.293 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 14:53:22.293 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:53:22.293 +01:00 [DBG] Issued claims: []
2020-01-19 14:53:22.297 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile api session",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****-k8Q"
    }
  ],
  "ActivityId": "0HLSSRA3BHEEF:00000002",
  "TimeStamp": "2020-01-19T13:53:22Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:53:22.298 +01:00 [DBG] Token request success.
2020-01-19 14:56:32.477 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:56:32.477 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:56:32.478 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:56:32.478 +01:00 [DBG] Start discovery request
2020-01-19 14:56:39.964 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:56:39.966 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:56:39.966 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:56:39.967 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:56:39.967 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:56:39.967 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:56:39.968 +01:00 [DBG] Start discovery request
2020-01-19 14:56:40.012 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:56:40.012 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:56:40.013 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:56:40.013 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:56:40.013 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:56:40.013 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:56:40.014 +01:00 [DBG] Start key discovery request
2020-01-19 14:56:40.043 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:56:40.043 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:56:40.044 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:56:40.044 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:56:40.044 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:56:40.045 +01:00 [DBG] Start authorize request
2020-01-19 14:56:40.045 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:56:40.045 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:56:40.045 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:56:40.046 +01:00 [ERR] Requested scope not allowed: role
2020-01-19 14:56:40.046 +01:00 [ERR] Request validation failed
2020-01-19 14:56:40.046 +01:00 [INF] {
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html",
    "http://localhost:4201/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role session api",
  "State": "CrxQtWV7BzXLHLNJyrZplWVAsTddWl6XBkDOBrJ5U1Jz3",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "CrxQtWV7BzXLHLNJyrZplWVAsTddWl6XBkDOBrJ5U1Jz3",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile role session api",
    "code_challenge": "F0iG6Oc-o2JgrlBuLzq9HytX0jdSsas7e8tTzP8H5kM",
    "code_challenge_method": "S256",
    "nonce": "CrxQtWV7BzXLHLNJyrZplWVAsTddWl6XBkDOBrJ5U1Jz3"
  }
}
2020-01-19 14:56:40.047 +01:00 [INF] {
  "Name": "Token Issued Failure",
  "Category": "Token",
  "EventType": "Failure",
  "Id": 2001,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile role session api",
  "GrantType": "authorization_code",
  "Error": "unauthorized_client",
  "ErrorDescription": "Invalid scope",
  "ActivityId": "0HLSSRA3BHEEH:00000001",
  "TimeStamp": "2020-01-19T13:56:40Z",
  "ProcessId": 6452,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:56:40.063 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:56:40.063 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:57:01.220 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 14:57:01.323 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 14:57:01.327 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 14:57:01.327 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 14:57:01.327 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 14:57:01.328 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 14:57:02.387 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:57:02.394 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:57:02.396 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:57:02.441 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:57:02.445 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:57:02.445 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:57:02.448 +01:00 [DBG] Start discovery request
2020-01-19 14:57:02.560 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:57:02.562 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:57:02.563 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:57:02.568 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:57:02.573 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:57:02.575 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:57:02.577 +01:00 [DBG] Start key discovery request
2020-01-19 14:57:02.683 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:57:02.685 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:57:02.686 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:57:02.692 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:57:02.693 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:57:02.697 +01:00 [DBG] Start authorize request
2020-01-19 14:57:02.705 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:57:02.708 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:57:02.720 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:57:02.755 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 14:57:02.778 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role session api",
  "State": "YKCyV4DWr7QnfeICRw8VI5KlUa6OD8BNavDNHUGWNyA8K",
  "Nonce": "YKCyV4DWr7QnfeICRw8VI5KlUa6OD8BNavDNHUGWNyA8K",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "YKCyV4DWr7QnfeICRw8VI5KlUa6OD8BNavDNHUGWNyA8K",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile role session api",
    "code_challenge": "OQDcD-TB2tEc6EEnwZdkoJMVxjZl3mqj_pOeT4SD6vo",
    "code_challenge_method": "S256",
    "nonce": "YKCyV4DWr7QnfeICRw8VI5KlUa6OD8BNavDNHUGWNyA8K"
  }
}
2020-01-19 14:57:02.791 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 14:57:02.799 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 14:57:02.875 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile role session api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****f803"
    }
  ],
  "ActivityId": "0HLSSSTQRBIOH:00000001",
  "TimeStamp": "2020-01-19T13:57:02Z",
  "ProcessId": 9896,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:57:02.881 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "YKCyV4DWr7QnfeICRw8VI5KlUa6OD8BNavDNHUGWNyA8K",
  "Scope": "openid profile role session api"
}
2020-01-19 14:57:03.038 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:57:03.039 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:57:03.040 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:57:03.041 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:57:03.041 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:57:03.042 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:57:03.043 +01:00 [DBG] Start discovery request
2020-01-19 14:57:03.079 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:57:03.081 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:57:03.093 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:57:03.094 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:57:03.095 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:57:03.098 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:57:03.099 +01:00 [DBG] Start key discovery request
2020-01-19 14:57:03.139 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 14:57:03.140 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:57:03.141 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:57:03.142 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 14:57:03.146 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 14:57:03.147 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 14:57:03.153 +01:00 [DBG] Start token request.
2020-01-19 14:57:03.157 +01:00 [DBG] Start client validation
2020-01-19 14:57:03.161 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 14:57:03.163 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 14:57:03.176 +01:00 [DBG] client id without secret found
2020-01-19 14:57:03.177 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 14:57:03.177 +01:00 [DBG] Secret id found: angular
2020-01-19 14:57:03.178 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 14:57:03.178 +01:00 [DBG] Client validation success
2020-01-19 14:57:03.185 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSSTQRBIOG:00000008",
  "TimeStamp": "2020-01-19T13:57:03Z",
  "ProcessId": 9896,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:57:03.190 +01:00 [DBG] Start token request validation
2020-01-19 14:57:03.196 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 14:57:03.220 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 14:57:03.223 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 14:57:03.229 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "b963e7f2a53915124f7c15afd29df54c713f8e85af492b62bf4aee2b024af803",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "b963e7f2a53915124f7c15afd29df54c713f8e85af492b62bf4aee2b024af803",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "Is85e8FwUzV7w20qls2LtPGcYnnBtdjA21NfuJBoSmotd",
    "client_id": "angular"
  }
}
2020-01-19 14:57:03.243 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 14:57:03.244 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 14:57:03.250 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types [] via ClaimsProviderAccessToken
2020-01-19 14:57:03.254 +01:00 [DBG] Issued claims: []
2020-01-19 14:57:03.330 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 14:57:03.331 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 14:57:03.338 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile role session api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****UseA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****TbLA"
    }
  ],
  "ActivityId": "0HLSSSTQRBIOG:00000008",
  "TimeStamp": "2020-01-19T13:57:03Z",
  "ProcessId": 9896,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:57:03.341 +01:00 [DBG] Token request success.
2020-01-19 14:57:03.861 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:57:03.862 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:57:03.862 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:57:03.863 +01:00 [DBG] Start discovery request
2020-01-19 14:57:03.968 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:57:03.968 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:57:03.969 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:57:03.969 +01:00 [DBG] Start key discovery request
2020-01-19 14:58:46.316 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 14:58:46.362 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 14:58:46.365 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 14:58:46.365 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 14:58:46.366 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 14:58:46.366 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 14:58:55.050 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 14:58:55.141 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 14:58:55.143 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 14:58:55.144 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 14:58:55.144 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 14:58:55.145 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 14:59:02.810 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 14:59:02.814 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:59:02.815 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:59:02.844 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 14:59:02.847 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 14:59:02.847 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 14:59:02.849 +01:00 [DBG] Start discovery request
2020-01-19 14:59:02.937 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 14:59:02.938 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 14:59:02.938 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 14:59:02.943 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 14:59:02.946 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 14:59:02.948 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 14:59:02.950 +01:00 [DBG] Start key discovery request
2020-01-19 14:59:03.025 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:59:03.026 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 14:59:03.027 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 14:59:03.031 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 14:59:03.031 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 14:59:03.033 +01:00 [DBG] Start authorize request
2020-01-19 14:59:03.040 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 14:59:03.042 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 14:59:03.049 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 14:59:03.367 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "System.Exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: role\r\n   at IdentityServer4.Stores.IResourceStoreExtensions.<FindResourcesByScopeAsync>d__0.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Extensions\\IResourceStoreExtensions.cs:line 40\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Validation.ScopeValidator.<AreScopesValidAsync>d__19.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\ScopeValidator.cs:line 133\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Validation.AuthorizeRequestValidator.<ValidateScopeAsync>d__13.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\AuthorizeRequestValidator.cs:line 412\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Validation.AuthorizeRequestValidator.<ValidateAsync>d__9.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Validation\\AuthorizeRequestValidator.cs:line 79\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.AuthorizeEndpointBase.<ProcessAuthorizeRequestAsync>d__14.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\AuthorizeEndpointBase.cs:line 67\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.AuthorizeEndpoint.<ProcessAsync>d__1.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\AuthorizeEndpoint.cs:line 55\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 54",
  "Message": "Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: role",
  "ActivityId": "0HLSSSUUOHOAN:00000001",
  "TimeStamp": "2020-01-19T13:59:03Z",
  "ProcessId": 3860,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 14:59:03.373 +01:00 [FTL] Unhandled exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: role
System.Exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: role
   at IdentityServer4.Stores.IResourceStoreExtensions.<FindResourcesByScopeAsync>d__0.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Extensions\IResourceStoreExtensions.cs:line 40
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.ScopeValidator.<AreScopesValidAsync>d__19.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\ScopeValidator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.AuthorizeRequestValidator.<ValidateScopeAsync>d__13.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\AuthorizeRequestValidator.cs:line 412
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.AuthorizeRequestValidator.<ValidateAsync>d__9.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\AuthorizeRequestValidator.cs:line 79
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.AuthorizeEndpointBase.<ProcessAuthorizeRequestAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\AuthorizeEndpointBase.cs:line 67
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.AuthorizeEndpoint.<ProcessAsync>d__1.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\AuthorizeEndpoint.cs:line 55
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
2020-01-19 14:59:03.425 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.Exception: Found identity scopes and API scopes that use the same names. This is an invalid configuration. Use different names for identity scopes and API scopes. Scopes found: role
   at IdentityServer4.Stores.IResourceStoreExtensions.<FindResourcesByScopeAsync>d__0.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Extensions\IResourceStoreExtensions.cs:line 40
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.ScopeValidator.<AreScopesValidAsync>d__19.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\ScopeValidator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.AuthorizeRequestValidator.<ValidateScopeAsync>d__13.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\AuthorizeRequestValidator.cs:line 412
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Validation.AuthorizeRequestValidator.<ValidateAsync>d__9.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Validation\AuthorizeRequestValidator.cs:line 79
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.AuthorizeEndpointBase.<ProcessAuthorizeRequestAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\AuthorizeEndpointBase.cs:line 67
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.AuthorizeEndpoint.<ProcessAsync>d__1.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\AuthorizeEndpoint.cs:line 55
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-19 15:00:30.434 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 15:00:30.520 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 15:00:30.523 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 15:00:30.523 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 15:00:30.523 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 15:00:30.524 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 15:01:34.657 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:01:34.662 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:01:34.662 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:01:34.664 +01:00 [DBG] Start discovery request
2020-01-19 15:01:44.150 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:01:44.152 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:01:44.154 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:01:44.159 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:01:44.160 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:01:44.164 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:01:44.167 +01:00 [DBG] Start discovery request
2020-01-19 15:01:44.195 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:01:44.196 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:01:44.196 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:01:44.197 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:01:44.197 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:01:44.198 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:01:44.199 +01:00 [DBG] Start key discovery request
2020-01-19 15:01:44.271 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:01:44.272 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:01:44.272 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:01:44.276 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:01:44.277 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:01:44.279 +01:00 [DBG] Start authorize request
2020-01-19 15:01:44.287 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:01:44.289 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:01:44.297 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:01:44.319 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:01:44.333 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "xVp5X5tB3349wpMhSRcYRBmezJw9ZlPlCd1u1vri7o0Ta",
  "Nonce": "xVp5X5tB3349wpMhSRcYRBmezJw9ZlPlCd1u1vri7o0Ta",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "xVp5X5tB3349wpMhSRcYRBmezJw9ZlPlCd1u1vri7o0Ta",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "IVz-nGUPY84Y8Zrv4O-bN8hcCAYWptvQRNEdMTCzaAU",
    "code_challenge_method": "S256",
    "nonce": "xVp5X5tB3349wpMhSRcYRBmezJw9ZlPlCd1u1vri7o0Ta"
  }
}
2020-01-19 15:01:44.342 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:01:44.344 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:01:44.399 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****2f02"
    }
  ],
  "ActivityId": "0HLSST0C0JF1S:00000001",
  "TimeStamp": "2020-01-19T14:01:44Z",
  "ProcessId": 7636,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:01:44.404 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "xVp5X5tB3349wpMhSRcYRBmezJw9ZlPlCd1u1vri7o0Ta",
  "Scope": "openid profile api"
}
2020-01-19 15:01:44.566 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:01:44.567 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:01:44.568 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:01:44.569 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:01:44.569 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:01:44.570 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:01:44.571 +01:00 [DBG] Start discovery request
2020-01-19 15:01:44.595 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:01:44.596 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:01:44.596 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:01:44.597 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:01:44.598 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:01:44.598 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:01:44.599 +01:00 [DBG] Start key discovery request
2020-01-19 15:01:44.625 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:01:44.626 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:01:44.627 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:01:44.627 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:01:44.629 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:01:44.630 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:01:44.633 +01:00 [DBG] Start token request.
2020-01-19 15:01:44.635 +01:00 [DBG] Start client validation
2020-01-19 15:01:44.638 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:01:44.640 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:01:44.646 +01:00 [DBG] client id without secret found
2020-01-19 15:01:44.647 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:01:44.647 +01:00 [DBG] Secret id found: angular
2020-01-19 15:01:44.648 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:01:44.648 +01:00 [DBG] Client validation success
2020-01-19 15:01:44.652 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSST0C0JF1R:00000005",
  "TimeStamp": "2020-01-19T14:01:44Z",
  "ProcessId": 7636,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:01:44.655 +01:00 [DBG] Start token request validation
2020-01-19 15:01:44.659 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:01:44.677 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:01:44.679 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:01:44.684 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "20fbb47043a45ae696261cafcc8c5bc92b9824ae466c4177fc63589cad312f02",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "20fbb47043a45ae696261cafcc8c5bc92b9824ae466c4177fc63589cad312f02",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "be812nKnpdzyHwyFmthso75HE_C0Rnm4eUfBYsGNTCiac",
    "client_id": "angular"
  }
}
2020-01-19 15:01:44.695 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:01:44.695 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:01:44.701 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:01:44.709 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:01:44.761 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 15:01:44.762 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 15:01:44.767 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****sYxQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****eiKQ"
    }
  ],
  "ActivityId": "0HLSST0C0JF1R:00000005",
  "TimeStamp": "2020-01-19T14:01:44Z",
  "ProcessId": 7636,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:01:44.769 +01:00 [DBG] Token request success.
2020-01-19 15:01:45.031 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:01:45.033 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:01:45.034 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:01:45.034 +01:00 [DBG] Start discovery request
2020-01-19 15:01:45.128 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:01:45.129 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:01:45.129 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:01:45.130 +01:00 [DBG] Start key discovery request
2020-01-19 15:08:44.523 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:08:44.524 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:08:44.524 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:08:44.526 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:08:44.527 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:08:44.527 +01:00 [DBG] Start authorize request
2020-01-19 15:08:44.528 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:08:44.528 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:08:44.528 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:08:44.529 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:08:44.529 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "ZlMQ-WNxDapCjp9EtL4CLKlxLy1l0Dnm8KG1tedoJ1b3e",
  "Nonce": "ZlMQ-WNxDapCjp9EtL4CLKlxLy1l0Dnm8KG1tedoJ1b3e",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "ZlMQ-WNxDapCjp9EtL4CLKlxLy1l0Dnm8KG1tedoJ1b3e",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "_VM5hgSrWeD57WtHkRC62ArcnIXGtl_DhCXGDX7ib7U",
    "code_challenge_method": "S256",
    "nonce": "ZlMQ-WNxDapCjp9EtL4CLKlxLy1l0Dnm8KG1tedoJ1b3e"
  }
}
2020-01-19 15:08:55.619 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:08:55.621 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:08:55.629 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****751d"
    }
  ],
  "ActivityId": "0HLSST0C0JF1U:00000001",
  "TimeStamp": "2020-01-19T14:08:55Z",
  "ProcessId": 7636,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:08:55.630 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "ZlMQ-WNxDapCjp9EtL4CLKlxLy1l0Dnm8KG1tedoJ1b3e",
  "Scope": "openid profile api"
}
2020-01-19 15:08:55.822 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:08:55.825 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:08:55.827 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:08:55.828 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:08:55.831 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:08:55.835 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:08:55.838 +01:00 [DBG] Start discovery request
2020-01-19 15:08:55.876 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:08:55.878 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:08:55.881 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:08:55.884 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:08:55.886 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:08:55.888 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:08:55.893 +01:00 [DBG] Start key discovery request
2020-01-19 15:08:55.917 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:08:55.919 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:08:55.922 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:08:55.924 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:08:55.926 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:08:55.929 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:08:55.931 +01:00 [DBG] Start token request.
2020-01-19 15:08:55.933 +01:00 [DBG] Start client validation
2020-01-19 15:08:55.935 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:08:55.936 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:08:55.939 +01:00 [DBG] client id without secret found
2020-01-19 15:08:55.940 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:08:55.942 +01:00 [DBG] Secret id found: angular
2020-01-19 15:08:55.944 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:08:55.945 +01:00 [DBG] Client validation success
2020-01-19 15:08:55.951 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSST0C0JF1V:00000003",
  "TimeStamp": "2020-01-19T14:08:55Z",
  "ProcessId": 7636,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:08:55.957 +01:00 [DBG] Start token request validation
2020-01-19 15:08:55.958 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:08:55.971 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:08:58.269 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:08:58.270 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "8a31dcc36d3b69d62871c8b955b4239c3ce8b3df08cb1395ed807c679d31751d",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "8a31dcc36d3b69d62871c8b955b4239c3ce8b3df08cb1395ed807c679d31751d",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "vY9QJ2AX3Lg9IOWkH_SiHPXwmu6cUwhSRjElpv81k8vYE",
    "client_id": "angular"
  }
}
2020-01-19 15:08:58.271 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:08:58.272 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:12:58.291 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 15:12:58.379 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 15:12:58.382 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 15:12:58.382 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 15:12:58.382 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 15:12:58.383 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 15:13:11.079 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:13:11.083 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:13:11.084 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:13:11.113 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:13:11.116 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:13:11.117 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:13:11.119 +01:00 [DBG] Start discovery request
2020-01-19 15:13:11.199 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:13:11.200 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:13:11.201 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:13:11.206 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:13:11.209 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:13:11.210 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:13:11.212 +01:00 [DBG] Start key discovery request
2020-01-19 15:13:11.289 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:13:11.290 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:13:11.291 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:13:11.295 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:13:11.295 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:13:11.297 +01:00 [DBG] Start authorize request
2020-01-19 15:13:11.303 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:13:11.305 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:13:11.314 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:13:11.335 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:13:11.349 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "mbqbWflcuc16ACnQIFePnr4qHqC7WLHoQFbM96pxunoKO",
  "Nonce": "mbqbWflcuc16ACnQIFePnr4qHqC7WLHoQFbM96pxunoKO",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "mbqbWflcuc16ACnQIFePnr4qHqC7WLHoQFbM96pxunoKO",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "I-zEtAE3M1ZNJAfApUiHIWkQcY05LV9Yo02LS1Vjpn8",
    "code_challenge_method": "S256",
    "nonce": "mbqbWflcuc16ACnQIFePnr4qHqC7WLHoQFbM96pxunoKO"
  }
}
2020-01-19 15:13:11.354 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:13:11.360 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:13:11.364 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:13:11.415 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****f6b4"
    }
  ],
  "ActivityId": "0HLSST6RI3UBI:00000001",
  "TimeStamp": "2020-01-19T14:13:11Z",
  "ProcessId": 5284,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:13:11.419 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "mbqbWflcuc16ACnQIFePnr4qHqC7WLHoQFbM96pxunoKO",
  "Scope": "openid profile api"
}
2020-01-19 15:13:11.594 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:13:11.596 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:13:11.597 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:13:11.597 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:13:11.599 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:13:11.599 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:13:11.600 +01:00 [DBG] Start discovery request
2020-01-19 15:13:11.619 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:13:11.620 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:13:11.620 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:13:11.621 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:13:11.624 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:13:11.631 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:13:11.632 +01:00 [DBG] Start key discovery request
2020-01-19 15:13:11.662 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:13:11.663 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:13:11.664 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:13:11.665 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:13:11.668 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:13:11.668 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:13:11.672 +01:00 [DBG] Start token request.
2020-01-19 15:13:11.675 +01:00 [DBG] Start client validation
2020-01-19 15:13:11.677 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:13:11.679 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:13:11.686 +01:00 [DBG] client id without secret found
2020-01-19 15:13:11.686 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:13:11.687 +01:00 [DBG] Secret id found: angular
2020-01-19 15:13:11.687 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:13:11.687 +01:00 [DBG] Client validation success
2020-01-19 15:13:11.693 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSST6RI3UBH:00000005",
  "TimeStamp": "2020-01-19T14:13:11Z",
  "ProcessId": 5284,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:13:11.696 +01:00 [DBG] Start token request validation
2020-01-19 15:13:11.700 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:13:11.719 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:13:11.721 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:13:11.721 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:13:11.728 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "563e5f4577c585be01d441b55ba5dc7474d3f377e7be5030a4d7cd00c593f6b4",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "563e5f4577c585be01d441b55ba5dc7474d3f377e7be5030a4d7cd00c593f6b4",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "-OSq42y_bswK5LNZgLyctqTOxzM-Kr_SuQMS46MA9Budf",
    "client_id": "angular"
  }
}
2020-01-19 15:13:11.737 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:13:11.738 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:13:18.697 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:13:18.704 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:13:28.671 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\\ErazerSSO\\Erazer.IdentityProvider\\Profile\\ProfileService.cs:line 29\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultClaimsService.cs:line 200\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultTokenService.cs:line 159\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 312\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 133\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 98\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 70\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 54",
  "Message": "Object reference not set to an instance of an object.",
  "ActivityId": "0HLSST6RI3UBH:00000005",
  "TimeStamp": "2020-01-19T14:13:28Z",
  "ProcessId": 5284,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:13:28.676 +01:00 [FTL] Unhandled exception: Object reference not set to an instance of an object.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 29
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
2020-01-19 15:13:28.735 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 29
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-19 15:14:05.088 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:14:05.091 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:14:05.093 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:14:05.094 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:14:05.095 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:14:05.096 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:14:05.098 +01:00 [DBG] Start discovery request
2020-01-19 15:14:05.164 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:14:05.166 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:14:05.167 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:14:05.168 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:14:05.169 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:14:05.169 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:14:05.170 +01:00 [DBG] Start key discovery request
2020-01-19 15:14:05.209 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:14:05.210 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:14:05.211 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:14:05.212 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:14:05.217 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:14:05.218 +01:00 [DBG] Start authorize request
2020-01-19 15:14:05.220 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:14:05.220 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:14:05.221 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:14:05.221 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:14:05.222 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "HEL0g92HLJD0qynradHbbmuRvsyqLJEpE0_2HsIpJMnTU",
  "Nonce": "HEL0g92HLJD0qynradHbbmuRvsyqLJEpE0_2HsIpJMnTU",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "HEL0g92HLJD0qynradHbbmuRvsyqLJEpE0_2HsIpJMnTU",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "hYrT5LVN8fpStrNxZoKTbF1IlpFqxiHjkrUEudeK8x4",
    "code_challenge_method": "S256",
    "nonce": "HEL0g92HLJD0qynradHbbmuRvsyqLJEpE0_2HsIpJMnTU"
  }
}
2020-01-19 15:14:05.225 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:14:05.226 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:14:05.227 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:14:05.235 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****700f"
    }
  ],
  "ActivityId": "0HLSST6RI3UBI:00000002",
  "TimeStamp": "2020-01-19T14:14:05Z",
  "ProcessId": 5284,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:14:05.237 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "HEL0g92HLJD0qynradHbbmuRvsyqLJEpE0_2HsIpJMnTU",
  "Scope": "openid profile api"
}
2020-01-19 15:14:05.438 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:14:05.439 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:14:05.440 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:14:05.440 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:14:05.441 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:14:05.442 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:14:05.443 +01:00 [DBG] Start discovery request
2020-01-19 15:14:05.468 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:14:05.470 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:14:05.470 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:14:05.471 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:14:05.471 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:14:05.472 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:14:05.473 +01:00 [DBG] Start key discovery request
2020-01-19 15:14:05.499 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:14:05.500 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:14:05.501 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:14:05.502 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:14:05.502 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:14:05.503 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:14:05.504 +01:00 [DBG] Start token request.
2020-01-19 15:14:05.505 +01:00 [DBG] Start client validation
2020-01-19 15:14:05.506 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:14:05.507 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:14:05.508 +01:00 [DBG] client id without secret found
2020-01-19 15:14:05.508 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:14:05.508 +01:00 [DBG] Secret id found: angular
2020-01-19 15:14:05.510 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:14:05.510 +01:00 [DBG] Client validation success
2020-01-19 15:14:05.510 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSST6RI3UBJ:00000005",
  "TimeStamp": "2020-01-19T14:14:05Z",
  "ProcessId": 5284,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:14:05.511 +01:00 [DBG] Start token request validation
2020-01-19 15:14:05.511 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:14:05.518 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:14:05.519 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:14:05.519 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:14:05.520 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "eade53d58471fbf42e464614f819e8a04627ff1dbdefe28df9bc253f56de700f",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "eade53d58471fbf42e464614f819e8a04627ff1dbdefe28df9bc253f56de700f",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "ZSPOH_ZrtreHZRthnYoGZb_iS43_jmXgxmJx14ua67k_O",
    "client_id": "angular"
  }
}
2020-01-19 15:14:05.520 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:14:05.521 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:14:05.521 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:14:05.521 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:15:05.495 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 15:15:05.588 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 15:15:05.590 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 15:15:05.591 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 15:15:05.591 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 15:15:05.591 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 15:15:07.590 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:15:07.598 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:15:07.600 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:15:07.644 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:15:07.648 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:15:07.649 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:15:07.651 +01:00 [DBG] Start discovery request
2020-01-19 15:15:07.747 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:15:07.748 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:15:07.749 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:15:07.750 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:15:07.751 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:15:07.756 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:15:07.765 +01:00 [DBG] Start key discovery request
2020-01-19 15:15:07.872 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:15:07.875 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:15:07.878 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:15:07.886 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:15:07.887 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:15:07.890 +01:00 [DBG] Start authorize request
2020-01-19 15:15:07.900 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:15:07.904 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:15:07.917 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:15:07.946 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:15:07.964 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "OuO-2DsDGo1tmVrf2PmmeL96YYBsmPgT8zOVxFxPK9Q4b",
  "Nonce": "OuO-2DsDGo1tmVrf2PmmeL96YYBsmPgT8zOVxFxPK9Q4b",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "OuO-2DsDGo1tmVrf2PmmeL96YYBsmPgT8zOVxFxPK9Q4b",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "UQjBO-sxLI1hswbhAPAhoJpTQSRkZ8e3aikJ3STIXKo",
    "code_challenge_method": "S256",
    "nonce": "OuO-2DsDGo1tmVrf2PmmeL96YYBsmPgT8zOVxFxPK9Q4b"
  }
}
2020-01-19 15:15:07.972 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:15:07.980 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:15:07.984 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:15:08.056 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****2a63"
    }
  ],
  "ActivityId": "0HLSST7U903LQ:00000001",
  "TimeStamp": "2020-01-19T14:15:08Z",
  "ProcessId": 17088,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:15:08.062 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "OuO-2DsDGo1tmVrf2PmmeL96YYBsmPgT8zOVxFxPK9Q4b",
  "Scope": "openid profile api"
}
2020-01-19 15:15:08.319 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:15:08.321 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:15:08.322 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:15:08.323 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:15:08.325 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:15:08.326 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:15:08.326 +01:00 [DBG] Start discovery request
2020-01-19 15:15:08.370 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:15:08.371 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:15:08.371 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:15:08.373 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:15:08.375 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:15:08.378 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:15:08.379 +01:00 [DBG] Start key discovery request
2020-01-19 15:15:08.422 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:15:08.423 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:15:08.425 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:15:08.426 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:15:08.432 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:15:08.433 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:15:08.438 +01:00 [DBG] Start token request.
2020-01-19 15:15:08.443 +01:00 [DBG] Start client validation
2020-01-19 15:15:08.446 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:15:08.448 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:15:08.461 +01:00 [DBG] client id without secret found
2020-01-19 15:15:08.462 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:15:08.463 +01:00 [DBG] Secret id found: angular
2020-01-19 15:15:08.463 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:15:08.464 +01:00 [DBG] Client validation success
2020-01-19 15:15:08.471 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSST7U903LP:00000005",
  "TimeStamp": "2020-01-19T14:15:08Z",
  "ProcessId": 17088,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:15:08.477 +01:00 [DBG] Start token request validation
2020-01-19 15:15:08.484 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:15:08.518 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:15:08.520 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:15:08.520 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:15:08.528 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "67d64d2c54b23a533b487556bfd86f08e126f4bf0172bd26f50ffe12ea5f2a63",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "67d64d2c54b23a533b487556bfd86f08e126f4bf0172bd26f50ffe12ea5f2a63",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "U_ymsplKgsOLSasEE9E4Id5dLZg1YPPd7N0iDRhXuW_OK",
    "client_id": "angular"
  }
}
2020-01-19 15:15:08.543 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:15:08.544 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:15:08.553 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:15:08.561 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:15:18.114 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\\ErazerSSO\\Erazer.IdentityProvider\\Profile\\ProfileService.cs:line 29\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultClaimsService.cs:line 200\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultTokenService.cs:line 159\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 312\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 133\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 98\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 70\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 54",
  "Message": "Object reference not set to an instance of an object.",
  "ActivityId": "0HLSST7U903LP:00000005",
  "TimeStamp": "2020-01-19T14:15:18Z",
  "ProcessId": 17088,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:15:18.129 +01:00 [FTL] Unhandled exception: Object reference not set to an instance of an object.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 29
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
2020-01-19 15:15:18.229 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 29
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-19 15:15:30.752 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:15:30.754 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:15:30.755 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:15:30.756 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:15:30.758 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:15:30.760 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:15:30.761 +01:00 [DBG] Start discovery request
2020-01-19 15:15:30.807 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:15:30.809 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:15:30.811 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:15:30.812 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:15:30.813 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:15:30.814 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:15:30.815 +01:00 [DBG] Start key discovery request
2020-01-19 15:15:30.852 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:15:30.854 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:15:30.854 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:15:30.855 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:15:30.856 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:15:30.857 +01:00 [DBG] Start authorize request
2020-01-19 15:15:30.857 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:15:30.858 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:15:30.859 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:15:30.861 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:15:30.865 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "7svGVFq_OVDiGmCUMMm7D6MrCrlK0xdbH7UFLNCc_Dg6J",
  "Nonce": "7svGVFq_OVDiGmCUMMm7D6MrCrlK0xdbH7UFLNCc_Dg6J",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "7svGVFq_OVDiGmCUMMm7D6MrCrlK0xdbH7UFLNCc_Dg6J",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "aTErRejwwQy82GmbtjdwgDxFjg8gV0Hi2Y90qcptqR4",
    "code_challenge_method": "S256",
    "nonce": "7svGVFq_OVDiGmCUMMm7D6MrCrlK0xdbH7UFLNCc_Dg6J"
  }
}
2020-01-19 15:15:30.868 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:15:30.868 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:15:30.869 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:15:30.881 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****1023"
    }
  ],
  "ActivityId": "0HLSST7U903LQ:00000002",
  "TimeStamp": "2020-01-19T14:15:30Z",
  "ProcessId": 17088,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:15:30.888 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "7svGVFq_OVDiGmCUMMm7D6MrCrlK0xdbH7UFLNCc_Dg6J",
  "Scope": "openid profile api"
}
2020-01-19 15:15:31.072 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:15:31.073 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:15:31.074 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:15:31.075 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:15:31.077 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:15:31.078 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:15:31.079 +01:00 [DBG] Start discovery request
2020-01-19 15:15:31.105 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:15:31.107 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:15:31.108 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:15:31.109 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:15:31.110 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:15:31.111 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:15:31.113 +01:00 [DBG] Start key discovery request
2020-01-19 15:15:31.144 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:15:31.146 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:15:31.148 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:15:31.149 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:15:31.151 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:15:31.152 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:15:31.155 +01:00 [DBG] Start token request.
2020-01-19 15:15:31.157 +01:00 [DBG] Start client validation
2020-01-19 15:15:31.157 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:15:31.158 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:15:31.160 +01:00 [DBG] client id without secret found
2020-01-19 15:15:31.161 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:15:31.162 +01:00 [DBG] Secret id found: angular
2020-01-19 15:15:31.162 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:15:31.163 +01:00 [DBG] Client validation success
2020-01-19 15:15:31.163 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSST7U903LR:00000005",
  "TimeStamp": "2020-01-19T14:15:31Z",
  "ProcessId": 17088,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:15:31.168 +01:00 [DBG] Start token request validation
2020-01-19 15:15:31.169 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:15:31.178 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:15:31.179 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:15:31.179 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:15:31.180 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "3a0a15fbcdd21fc603326e0841119b34afc388bf295eda14953bd66ab6441023",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "3a0a15fbcdd21fc603326e0841119b34afc388bf295eda14953bd66ab6441023",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "3hAyqheaBy1XotLXsqoW8BacfuZqrz9Px3k_YlT0JQiW5",
    "client_id": "angular"
  }
}
2020-01-19 15:15:31.182 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:15:31.182 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:15:31.183 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:15:31.184 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:15:51.437 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\\ErazerSSO\\Erazer.IdentityProvider\\Profile\\ProfileService.cs:line 29\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultClaimsService.cs:line 200\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultTokenService.cs:line 159\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 312\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 133\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 98\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 70\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 54",
  "Message": "Object reference not set to an instance of an object.",
  "ActivityId": "0HLSST7U903LR:00000005",
  "TimeStamp": "2020-01-19T14:15:51Z",
  "ProcessId": 17088,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:15:51.445 +01:00 [FTL] Unhandled exception: Object reference not set to an instance of an object.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 29
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
2020-01-19 15:15:51.500 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 29
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-19 15:17:03.420 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 15:17:03.501 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 15:17:03.504 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 15:17:03.504 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 15:17:03.505 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 15:17:03.506 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 15:17:10.764 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:17:10.768 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:17:10.769 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:17:10.801 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:17:10.805 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:17:10.805 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:17:10.808 +01:00 [DBG] Start discovery request
2020-01-19 15:17:10.892 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:17:10.893 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:17:10.893 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:17:10.904 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:17:10.928 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:17:10.929 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:17:10.932 +01:00 [DBG] Start key discovery request
2020-01-19 15:17:11.005 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:17:11.006 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:17:11.007 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:17:11.012 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:17:11.013 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:17:11.015 +01:00 [DBG] Start authorize request
2020-01-19 15:17:11.022 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:17:11.024 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:17:11.033 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:17:11.055 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:17:11.068 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "IbL29YVkCmUT0qpFrgNfHnGy6m_7dtwvcDZ79fmYkiAzJ",
  "Nonce": "IbL29YVkCmUT0qpFrgNfHnGy6m_7dtwvcDZ79fmYkiAzJ",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "IbL29YVkCmUT0qpFrgNfHnGy6m_7dtwvcDZ79fmYkiAzJ",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "-a8RnMygKPQt_R5mnPCWyCQPd7_c-L6JcA1_RwCotCQ",
    "code_challenge_method": "S256",
    "nonce": "IbL29YVkCmUT0qpFrgNfHnGy6m_7dtwvcDZ79fmYkiAzJ"
  }
}
2020-01-19 15:17:11.073 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:17:11.081 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:17:11.083 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:17:11.137 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****9c7d"
    }
  ],
  "ActivityId": "0HLSST92VTP0L:00000001",
  "TimeStamp": "2020-01-19T14:17:11Z",
  "ProcessId": 9484,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:17:11.143 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "IbL29YVkCmUT0qpFrgNfHnGy6m_7dtwvcDZ79fmYkiAzJ",
  "Scope": "openid profile api"
}
2020-01-19 15:17:11.401 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:17:11.405 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:17:11.407 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:17:11.410 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:17:11.413 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:17:11.417 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:17:11.420 +01:00 [DBG] Start discovery request
2020-01-19 15:17:11.453 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:17:11.455 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:17:11.458 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:17:11.461 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:17:11.466 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:17:11.471 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:17:11.474 +01:00 [DBG] Start key discovery request
2020-01-19 15:17:11.501 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:17:11.503 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:17:11.505 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:17:11.506 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:17:11.511 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:17:11.513 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:17:11.522 +01:00 [DBG] Start token request.
2020-01-19 15:17:11.528 +01:00 [DBG] Start client validation
2020-01-19 15:17:11.532 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:17:11.534 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:17:11.546 +01:00 [DBG] client id without secret found
2020-01-19 15:17:11.547 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:17:11.548 +01:00 [DBG] Secret id found: angular
2020-01-19 15:17:11.549 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:17:11.551 +01:00 [DBG] Client validation success
2020-01-19 15:17:11.557 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSST92VTP0K:00000005",
  "TimeStamp": "2020-01-19T14:17:11Z",
  "ProcessId": 9484,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:17:11.563 +01:00 [DBG] Start token request validation
2020-01-19 15:17:11.567 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:17:11.589 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:17:11.591 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:17:11.591 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:17:11.597 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "05f6fa3daebe7bf7ae50689e46db73527aca06bc2fb8dce888a129c1c3a89c7d",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "05f6fa3daebe7bf7ae50689e46db73527aca06bc2fb8dce888a129c1c3a89c7d",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "Qc10sg9GBT7y2fWPC0Za5CqB1Ujd41DFhkB_EUfa_C4Xa",
    "client_id": "angular"
  }
}
2020-01-19 15:17:11.613 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:17:11.613 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:17:11.622 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:17:11.630 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:17:15.988 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\\ErazerSSO\\Erazer.IdentityProvider\\Profile\\ProfileService.cs:line 29\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultClaimsService.cs:line 200\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultTokenService.cs:line 159\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 312\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 133\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 98\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 70\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 54",
  "Message": "Object reference not set to an instance of an object.",
  "ActivityId": "0HLSST92VTP0K:00000005",
  "TimeStamp": "2020-01-19T14:17:15Z",
  "ProcessId": 9484,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:17:16.005 +01:00 [FTL] Unhandled exception: Object reference not set to an instance of an object.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 29
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
2020-01-19 15:17:16.062 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 29
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-19 15:18:13.990 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 15:18:14.075 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 15:18:14.078 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 15:18:14.078 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 15:18:14.079 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 15:18:14.079 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 15:18:18.863 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:18:18.868 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:18:18.870 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:18:18.906 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:18:18.910 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:18:18.911 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:18:18.913 +01:00 [DBG] Start discovery request
2020-01-19 15:18:19.002 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:18:19.003 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:18:19.004 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:18:19.010 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:18:19.014 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:18:19.015 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:18:19.018 +01:00 [DBG] Start key discovery request
2020-01-19 15:18:19.101 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:18:19.102 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:18:19.102 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:18:19.106 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:18:19.107 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:18:19.109 +01:00 [DBG] Start authorize request
2020-01-19 15:18:19.115 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:18:19.117 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:18:19.124 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:18:19.146 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:18:19.159 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "OvJqkBFjjVeykiYyTAXw5LIXTKPBASnOaZ8CJFJebb6c6",
  "Nonce": "OvJqkBFjjVeykiYyTAXw5LIXTKPBASnOaZ8CJFJebb6c6",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "OvJqkBFjjVeykiYyTAXw5LIXTKPBASnOaZ8CJFJebb6c6",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "3XTfzdME7BDbkQUxazZPFg-LhA79m8edi7Tc7tcMN3U",
    "code_challenge_method": "S256",
    "nonce": "OvJqkBFjjVeykiYyTAXw5LIXTKPBASnOaZ8CJFJebb6c6"
  }
}
2020-01-19 15:18:19.164 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:18:19.170 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:18:19.174 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:18:19.229 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****1d89"
    }
  ],
  "ActivityId": "0HLSST9N9DP1O:00000001",
  "TimeStamp": "2020-01-19T14:18:19Z",
  "ProcessId": 3168,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:18:19.240 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "OvJqkBFjjVeykiYyTAXw5LIXTKPBASnOaZ8CJFJebb6c6",
  "Scope": "openid profile api"
}
2020-01-19 15:18:19.434 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:18:19.435 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:18:19.436 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:18:19.436 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:18:19.437 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:18:19.438 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:18:19.439 +01:00 [DBG] Start discovery request
2020-01-19 15:18:19.461 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:18:19.462 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:18:19.463 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:18:19.463 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:18:19.464 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:18:19.465 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:18:19.465 +01:00 [DBG] Start key discovery request
2020-01-19 15:18:19.499 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:18:19.500 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:18:19.501 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:18:19.502 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:18:19.505 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:18:19.506 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:18:19.511 +01:00 [DBG] Start token request.
2020-01-19 15:18:19.513 +01:00 [DBG] Start client validation
2020-01-19 15:18:19.515 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:18:19.518 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:18:19.527 +01:00 [DBG] client id without secret found
2020-01-19 15:18:19.528 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:18:19.530 +01:00 [DBG] Secret id found: angular
2020-01-19 15:18:19.530 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:18:19.532 +01:00 [DBG] Client validation success
2020-01-19 15:18:19.539 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSST9N9DP1N:00000005",
  "TimeStamp": "2020-01-19T14:18:19Z",
  "ProcessId": 3168,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:18:19.544 +01:00 [DBG] Start token request validation
2020-01-19 15:18:19.549 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:18:19.574 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:18:19.576 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:18:19.576 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:18:19.581 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "05de8e046e2c83719ef02b1241d8b6b64a496b6afd71d930d498213c83fc1d89",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "05de8e046e2c83719ef02b1241d8b6b64a496b6afd71d930d498213c83fc1d89",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "Y8-6PbEdAg9V9xjsgohIdjPziGqQDUdkMJcrmiLranXYI",
    "client_id": "angular"
  }
}
2020-01-19 15:18:19.592 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:18:19.593 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:18:19.599 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:18:19.606 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:18:19.954 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\\ErazerSSO\\Erazer.IdentityProvider\\Profile\\ProfileService.cs:line 30\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultClaimsService.cs:line 200\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultTokenService.cs:line 159\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 312\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 133\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 98\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 70\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 54",
  "Message": "Object reference not set to an instance of an object.",
  "ActivityId": "0HLSST9N9DP1N:00000005",
  "TimeStamp": "2020-01-19T14:18:19Z",
  "ProcessId": 3168,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:18:19.982 +01:00 [FTL] Unhandled exception: Object reference not set to an instance of an object.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 30
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
2020-01-19 15:18:20.069 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 30
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-19 15:19:25.452 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:19:25.454 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:19:25.454 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:19:25.455 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:19:25.455 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:19:25.456 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:19:25.457 +01:00 [DBG] Start discovery request
2020-01-19 15:19:25.502 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:19:25.503 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:19:25.504 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:19:25.504 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:19:25.505 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:19:25.506 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:19:25.507 +01:00 [DBG] Start key discovery request
2020-01-19 15:19:25.550 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:19:25.551 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:19:25.551 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:19:25.552 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:19:25.554 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:19:25.555 +01:00 [DBG] Start authorize request
2020-01-19 15:19:25.555 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:19:25.556 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:19:25.556 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:19:25.556 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:19:25.557 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "AystsNR_12iHW1NzWHzdnu80_3wWfCoZ8lFLDj-xZX1H_",
  "Nonce": "AystsNR_12iHW1NzWHzdnu80_3wWfCoZ8lFLDj-xZX1H_",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "AystsNR_12iHW1NzWHzdnu80_3wWfCoZ8lFLDj-xZX1H_",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "TRdcRb8SUAH7KVRKEyT60K0aN-i81KK7iFcIX_-nwpE",
    "code_challenge_method": "S256",
    "nonce": "AystsNR_12iHW1NzWHzdnu80_3wWfCoZ8lFLDj-xZX1H_"
  }
}
2020-01-19 15:19:25.558 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:19:25.559 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:19:25.559 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:19:25.567 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****8440"
    }
  ],
  "ActivityId": "0HLSST9N9DP1O:00000002",
  "TimeStamp": "2020-01-19T14:19:25Z",
  "ProcessId": 3168,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:19:25.578 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "AystsNR_12iHW1NzWHzdnu80_3wWfCoZ8lFLDj-xZX1H_",
  "Scope": "openid profile api"
}
2020-01-19 15:19:25.735 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:19:25.737 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:19:25.739 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:19:25.739 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:19:25.740 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:19:25.741 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:19:25.742 +01:00 [DBG] Start discovery request
2020-01-19 15:19:25.769 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:19:25.771 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:19:25.772 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:19:25.773 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:19:25.773 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:19:25.775 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:19:25.776 +01:00 [DBG] Start key discovery request
2020-01-19 15:19:25.809 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:19:25.811 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:19:25.813 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:19:25.814 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:19:25.816 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:19:25.817 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:19:25.820 +01:00 [DBG] Start token request.
2020-01-19 15:19:25.821 +01:00 [DBG] Start client validation
2020-01-19 15:19:25.822 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:19:25.824 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:19:25.825 +01:00 [DBG] client id without secret found
2020-01-19 15:19:25.827 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:19:25.828 +01:00 [DBG] Secret id found: angular
2020-01-19 15:19:25.831 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:19:25.831 +01:00 [DBG] Client validation success
2020-01-19 15:19:25.833 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSST9N9DP1P:00000005",
  "TimeStamp": "2020-01-19T14:19:25Z",
  "ProcessId": 3168,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:19:25.835 +01:00 [DBG] Start token request validation
2020-01-19 15:19:25.836 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:19:25.847 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:19:25.847 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:19:25.848 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:19:25.849 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "250cea4e7010c9c8ca21ab222d68bb846efcd549ae5117b9707f9242f8fe8440",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "250cea4e7010c9c8ca21ab222d68bb846efcd549ae5117b9707f9242f8fe8440",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "ofSEAuBcga_0_aWdyKC8AHjkkkuHU4pvq-KakgbXeOVBl",
    "client_id": "angular"
  }
}
2020-01-19 15:19:25.852 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:19:25.853 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:19:25.854 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:19:25.855 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:19:29.887 +01:00 [WRN] Heartbeat took longer than ""00:00:01"" at ""2020-01-19T14:19:28.5652678+00:00"".
2020-01-19 15:19:30.014 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "System.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\\ErazerSSO\\Erazer.IdentityProvider\\Profile\\ProfileService.cs:line 30\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultClaimsService.cs:line 200\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultTokenService.cs:line 159\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 312\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 133\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 98\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 70\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 54",
  "Message": "Object reference not set to an instance of an object.",
  "ActivityId": "0HLSST9N9DP1P:00000005",
  "TimeStamp": "2020-01-19T14:19:30Z",
  "ProcessId": 3168,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:19:30.048 +01:00 [FTL] Unhandled exception: Object reference not set to an instance of an object.
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 30
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
2020-01-19 15:19:30.141 +01:00 [ERR] An unhandled exception has occurred while executing the request
System.NullReferenceException: Object reference not set to an instance of an object.
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 30
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-19 15:23:38.846 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 15:23:38.910 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 15:23:38.912 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 15:23:38.912 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 15:23:38.913 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 15:23:38.913 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 15:23:45.608 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:23:45.613 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:23:45.615 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:23:45.654 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:23:45.657 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:23:45.658 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:23:45.660 +01:00 [DBG] Start discovery request
2020-01-19 15:23:45.748 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:23:45.749 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:23:45.749 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:23:45.754 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:23:45.756 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:23:45.757 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:23:45.759 +01:00 [DBG] Start key discovery request
2020-01-19 15:23:45.836 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:23:45.837 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:23:45.838 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:23:45.842 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:23:45.842 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:23:45.845 +01:00 [DBG] Start authorize request
2020-01-19 15:23:45.851 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:23:45.853 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:23:45.861 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:23:45.881 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:23:45.897 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "KouTryRPtbyaucvUYYnGAS_GwDp0zzc1fqjaZvDeCBJ7l",
  "Nonce": "KouTryRPtbyaucvUYYnGAS_GwDp0zzc1fqjaZvDeCBJ7l",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "KouTryRPtbyaucvUYYnGAS_GwDp0zzc1fqjaZvDeCBJ7l",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "G-8j7yqhZSCffsOlN93cber8FDWJgS7me189j1-2W6Y",
    "code_challenge_method": "S256",
    "nonce": "KouTryRPtbyaucvUYYnGAS_GwDp0zzc1fqjaZvDeCBJ7l"
  }
}
2020-01-19 15:23:45.902 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:23:45.907 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:23:45.910 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:23:45.962 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****ae4e"
    }
  ],
  "ActivityId": "0HLSSTCOLHFJP:00000001",
  "TimeStamp": "2020-01-19T14:23:45Z",
  "ProcessId": 8328,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:23:45.966 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "KouTryRPtbyaucvUYYnGAS_GwDp0zzc1fqjaZvDeCBJ7l",
  "Scope": "openid profile api"
}
2020-01-19 15:23:46.131 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:23:46.132 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:23:46.133 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:23:46.134 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:23:46.134 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:23:46.135 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:23:46.136 +01:00 [DBG] Start discovery request
2020-01-19 15:23:46.163 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:23:46.164 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:23:46.164 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:23:46.165 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:23:46.165 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:23:46.166 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:23:46.166 +01:00 [DBG] Start key discovery request
2020-01-19 15:23:46.199 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:23:46.200 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:23:46.201 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:23:46.201 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:23:46.204 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:23:46.205 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:23:46.208 +01:00 [DBG] Start token request.
2020-01-19 15:23:46.212 +01:00 [DBG] Start client validation
2020-01-19 15:23:46.216 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:23:46.217 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:23:46.226 +01:00 [DBG] client id without secret found
2020-01-19 15:23:46.227 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:23:46.228 +01:00 [DBG] Secret id found: angular
2020-01-19 15:23:46.228 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:23:46.229 +01:00 [DBG] Client validation success
2020-01-19 15:23:46.235 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSTCOLHFJO:00000005",
  "TimeStamp": "2020-01-19T14:23:46Z",
  "ProcessId": 8328,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:23:46.238 +01:00 [DBG] Start token request validation
2020-01-19 15:23:46.244 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:23:46.265 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:23:46.267 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:23:46.267 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:23:46.273 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "6755ac58b25984b3961fd66c2721a6374dfffee13a7800c6f57518abe6b8ae4e",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "6755ac58b25984b3961fd66c2721a6374dfffee13a7800c6f57518abe6b8ae4e",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "vXGOKS45zqE4LpqNoFGmxbTfEoAb1kPymrHvGmLhQrB84",
    "client_id": "angular"
  }
}
2020-01-19 15:23:46.284 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:23:46.285 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:23:46.292 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:23:46.300 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:23:51.946 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 15:23:51.947 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 15:23:51.951 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****t2_A"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****i6nA"
    }
  ],
  "ActivityId": "0HLSSTCOLHFJO:00000005",
  "TimeStamp": "2020-01-19T14:23:51Z",
  "ProcessId": 8328,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:23:51.953 +01:00 [DBG] Token request success.
2020-01-19 15:23:52.252 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:23:52.253 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:23:52.254 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:23:52.254 +01:00 [DBG] Start discovery request
2020-01-19 15:23:52.362 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:23:52.363 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:23:52.363 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:23:52.364 +01:00 [DBG] Start key discovery request
2020-01-19 15:24:29.673 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:24:29.674 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:24:29.675 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:24:29.675 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:24:29.676 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:24:29.677 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:24:29.679 +01:00 [DBG] Start discovery request
2020-01-19 15:24:29.732 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:24:29.733 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:24:29.734 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:24:29.734 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:24:29.736 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:24:29.736 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:24:29.737 +01:00 [DBG] Start key discovery request
2020-01-19 15:24:49.428 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:24:49.430 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:24:49.430 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:24:49.431 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:24:49.431 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:24:49.432 +01:00 [DBG] Start authorize request
2020-01-19 15:24:49.433 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:24:49.433 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:24:49.433 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:24:49.433 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:24:49.434 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "Y1fSQ6qnitr2o5-hRbGzoQfrcl_e4gW-7WxRrJP3dzrWK",
  "Nonce": "Y1fSQ6qnitr2o5-hRbGzoQfrcl_e4gW-7WxRrJP3dzrWK",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "Y1fSQ6qnitr2o5-hRbGzoQfrcl_e4gW-7WxRrJP3dzrWK",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "vCbeK8dsjv56QLT1jnn2hpBfXclbg4UvFp5pu32Q0H0",
    "code_challenge_method": "S256",
    "nonce": "Y1fSQ6qnitr2o5-hRbGzoQfrcl_e4gW-7WxRrJP3dzrWK"
  }
}
2020-01-19 15:24:49.435 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:24:49.436 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:24:49.436 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:24:49.445 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****4e1e"
    }
  ],
  "ActivityId": "0HLSSTCOLHFJP:00000002",
  "TimeStamp": "2020-01-19T14:24:49Z",
  "ProcessId": 8328,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:24:49.447 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "Y1fSQ6qnitr2o5-hRbGzoQfrcl_e4gW-7WxRrJP3dzrWK",
  "Scope": "openid profile api"
}
2020-01-19 15:24:49.611 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:24:49.613 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:24:49.614 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:24:49.614 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:24:49.614 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:24:49.615 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:24:49.616 +01:00 [DBG] Start discovery request
2020-01-19 15:24:49.647 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:24:49.647 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:24:49.648 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:24:49.648 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:24:49.649 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:24:49.649 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:24:49.650 +01:00 [DBG] Start key discovery request
2020-01-19 15:24:49.670 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:24:49.671 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:24:49.672 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:24:49.673 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:24:49.676 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:24:49.676 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:24:49.677 +01:00 [DBG] Start token request.
2020-01-19 15:24:49.678 +01:00 [DBG] Start client validation
2020-01-19 15:24:49.678 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:24:49.679 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:24:49.680 +01:00 [DBG] client id without secret found
2020-01-19 15:24:49.680 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:24:49.681 +01:00 [DBG] Secret id found: angular
2020-01-19 15:24:49.681 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:24:49.682 +01:00 [DBG] Client validation success
2020-01-19 15:24:49.682 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSTCOLHFJO:0000000C",
  "TimeStamp": "2020-01-19T14:24:49Z",
  "ProcessId": 8328,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:24:49.683 +01:00 [DBG] Start token request validation
2020-01-19 15:24:49.683 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:24:49.690 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:24:49.690 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:24:49.690 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:24:49.691 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "4b9f52443d6dd758b012e2c19ae72a877c538caf755fe8aafa1bd75a385a4e1e",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "4b9f52443d6dd758b012e2c19ae72a877c538caf755fe8aafa1bd75a385a4e1e",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "D3__AEKINJIJ3za-GeRXsygyHjN1fmHjCGFVZGAqoz-6L",
    "client_id": "angular"
  }
}
2020-01-19 15:24:49.691 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:24:49.692 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:24:49.692 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:24:49.692 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:27:56.752 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 15:27:56.848 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 15:27:56.851 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 15:27:56.851 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 15:27:56.851 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 15:27:56.852 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 15:28:05.517 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:28:05.522 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:28:05.523 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:28:05.557 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:28:05.561 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:28:05.561 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:28:05.565 +01:00 [DBG] Start discovery request
2020-01-19 15:28:05.667 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:28:05.667 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:28:05.668 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:28:05.672 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:28:05.676 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:28:05.676 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:28:05.679 +01:00 [DBG] Start key discovery request
2020-01-19 15:28:05.754 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:28:05.755 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:28:05.756 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:28:05.760 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:28:05.760 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:28:05.763 +01:00 [DBG] Start authorize request
2020-01-19 15:28:05.769 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:28:05.771 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:28:05.781 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:28:05.803 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:28:05.817 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "ALiMUYBHdBrR3ODP750cqQJvgm92Jd7DnmHiaJp6XNv5d",
  "Nonce": "ALiMUYBHdBrR3ODP750cqQJvgm92Jd7DnmHiaJp6XNv5d",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "ALiMUYBHdBrR3ODP750cqQJvgm92Jd7DnmHiaJp6XNv5d",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "UmUoS9ujw2p6GAbDI9fgTkwcHU1rUbi67Qh6V7mweyw",
    "code_challenge_method": "S256",
    "nonce": "ALiMUYBHdBrR3ODP750cqQJvgm92Jd7DnmHiaJp6XNv5d"
  }
}
2020-01-19 15:28:05.822 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:28:05.826 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:28:05.830 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:28:05.887 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d12b"
    }
  ],
  "ActivityId": "0HLSSTF645195:00000001",
  "TimeStamp": "2020-01-19T14:28:05Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:28:05.891 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "ALiMUYBHdBrR3ODP750cqQJvgm92Jd7DnmHiaJp6XNv5d",
  "Scope": "openid profile api"
}
2020-01-19 15:28:06.059 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:28:06.060 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:28:06.061 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:28:06.062 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:28:06.063 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:28:06.063 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:28:06.065 +01:00 [DBG] Start discovery request
2020-01-19 15:28:06.092 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:28:06.093 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:28:06.093 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:28:06.094 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:28:06.094 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:28:06.095 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:28:06.096 +01:00 [DBG] Start key discovery request
2020-01-19 15:28:06.131 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:28:06.132 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:28:06.133 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:28:06.133 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:28:06.136 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:28:06.136 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:28:06.140 +01:00 [DBG] Start token request.
2020-01-19 15:28:06.142 +01:00 [DBG] Start client validation
2020-01-19 15:28:06.146 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:28:06.149 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:28:06.158 +01:00 [DBG] client id without secret found
2020-01-19 15:28:06.158 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:28:06.159 +01:00 [DBG] Secret id found: angular
2020-01-19 15:28:06.159 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:28:06.159 +01:00 [DBG] Client validation success
2020-01-19 15:28:06.164 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSTF645194:00000005",
  "TimeStamp": "2020-01-19T14:28:06Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:28:06.167 +01:00 [DBG] Start token request validation
2020-01-19 15:28:06.171 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:28:06.192 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:28:06.193 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:28:06.194 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:28:06.200 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "26db6cb217839bfd38f4bdbb3be054de3970be276cb1f5e5a12ef567eb7fd12b",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "26db6cb217839bfd38f4bdbb3be054de3970be276cb1f5e5a12ef567eb7fd12b",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "WZOqSCu4jHa4VvDrORYWomuSDZDFn6r-GAgivh9symrKr",
    "client_id": "angular"
  }
}
2020-01-19 15:28:06.211 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:28:06.212 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:28:06.222 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:28:06.230 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:28:13.873 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 15:28:13.874 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 15:28:13.878 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****gtpg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****IjQQ"
    }
  ],
  "ActivityId": "0HLSSTF645194:00000005",
  "TimeStamp": "2020-01-19T14:28:13Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:28:13.879 +01:00 [DBG] Token request success.
2020-01-19 15:28:14.143 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:28:14.144 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:28:14.144 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:28:14.145 +01:00 [DBG] Start discovery request
2020-01-19 15:28:14.234 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:28:14.235 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:28:14.235 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:28:14.236 +01:00 [DBG] Start key discovery request
2020-01-19 15:33:47.192 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 15:33:47.194 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 15:33:47.194 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 15:33:47.195 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:33:47.196 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:33:47.198 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:33:47.198 +01:00 [DBG] Start token request.
2020-01-19 15:33:47.199 +01:00 [DBG] Start client validation
2020-01-19 15:33:47.199 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:33:47.199 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:33:47.200 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:33:47.200 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 15:33:47.243 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 15:33:47.244 +01:00 [DBG] Client validation success
2020-01-19 15:33:47.244 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSTF645197:00000002",
  "TimeStamp": "2020-01-19T14:33:47Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:33:47.246 +01:00 [DBG] Start token request validation
2020-01-19 15:33:47.251 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 15:33:47.260 +01:00 [DBG] IsActive called from: ResourceOwnerValidation
2020-01-19 15:33:47.266 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSTF645197:00000002",
  "TimeStamp": "2020-01-19T14:33:47Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:33:47.268 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 15:33:47.269 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile role",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 15:33:47.271 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 15:33:47.272 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 15:33:47.272 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:33:47.273 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:33:53.321 +01:00 [WRN] Heartbeat took longer than ""00:00:01"" at ""2020-01-19T14:33:53.3192597+00:00"".
2020-01-19 15:33:53.323 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile role api",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****XExA"
    }
  ],
  "ActivityId": "0HLSSTF645197:00000002",
  "TimeStamp": "2020-01-19T14:33:53Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:33:53.326 +01:00 [DBG] Token request success.
2020-01-19 15:34:02.340 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:4201
2020-01-19 15:34:02.341 +01:00 [DBG] Client list checked and origin: http://localhost:4201 is not allowed
2020-01-19 15:34:02.342 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:4201
2020-01-19 15:34:02.342 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:34:02.343 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:34:02.344 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:34:02.344 +01:00 [DBG] Start token request.
2020-01-19 15:34:02.345 +01:00 [DBG] Start client validation
2020-01-19 15:34:02.345 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:34:02.346 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:34:02.346 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:34:02.347 +01:00 [DBG] Secret id found: angular_dev
2020-01-19 15:34:02.347 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 15:34:02.348 +01:00 [DBG] Client validation success
2020-01-19 15:34:02.348 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular_dev",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSTF645197:00000004",
  "TimeStamp": "2020-01-19T14:34:02Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:34:02.349 +01:00 [DBG] Start token request validation
2020-01-19 15:34:02.349 +01:00 [DBG] Start resource owner password token request validation
2020-01-19 15:34:02.350 +01:00 [DBG] IsActive called from: ResourceOwnerValidation
2020-01-19 15:34:02.350 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "alice",
  "SubjectId": "818727",
  "Endpoint": "Token",
  "ActivityId": "0HLSSTF645197:00000004",
  "TimeStamp": "2020-01-19T14:34:02Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:34:02.351 +01:00 [DBG] Resource owner password token request validation success.
2020-01-19 15:34:02.352 +01:00 [INF] Token request validation success
{
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "GrantType": "password",
  "Scopes": "api openid profile role",
  "UserName": "alice",
  "Raw": {
    "grant_type": "password",
    "username": "alice",
    "password": "***REDACTED***",
    "client_id": "angular_dev",
    "client_secret": "***REDACTED***"
  }
}
2020-01-19 15:34:02.353 +01:00 [DBG] Getting claims for access token for client: angular_dev
2020-01-19 15:34:02.353 +01:00 [DBG] Getting claims for access token for subject: 818727
2020-01-19 15:34:02.353 +01:00 [DBG] Get profile called for subject 818727 from client ErazerSSO Angular_DEV with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:34:02.354 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:34:05.446 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular_dev",
  "ClientName": "ErazerSSO Angular_DEV",
  "Endpoint": "Token",
  "SubjectId": "818727",
  "Scopes": "openid profile role api",
  "GrantType": "password",
  "Tokens": [
    {
      "TokenType": "access_token",
      "TokenValue": "****lUrg"
    }
  ],
  "ActivityId": "0HLSSTF645197:00000004",
  "TimeStamp": "2020-01-19T14:34:05Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:34:05.449 +01:00 [DBG] Token request success.
2020-01-19 15:34:28.039 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:34:28.040 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:34:28.041 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:34:28.041 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:34:28.042 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:34:28.042 +01:00 [DBG] Start authorize request
2020-01-19 15:34:28.043 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:34:28.043 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:34:28.044 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:34:28.044 +01:00 [DBG] No PKCE used.
2020-01-19 15:34:28.044 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:34:28.045 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "f2793b5d-a1bc-4add-be81-a9e8bda9b9ef",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "f2793b5d-a1bc-4add-be81-a9e8bda9b9ef",
    "client_id": "nodejs"
  }
}
2020-01-19 15:34:28.046 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:34:28.047 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:34:28.047 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:34:28.056 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****81b0"
    }
  ],
  "ActivityId": "0HLSSTF645198:00000001",
  "TimeStamp": "2020-01-19T14:34:28Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:34:28.060 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "f2793b5d-a1bc-4add-be81-a9e8bda9b9ef",
  "Scope": "openid profile role"
}
2020-01-19 15:34:28.077 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:34:28.078 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:34:28.078 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:34:28.079 +01:00 [DBG] Start token request.
2020-01-19 15:34:28.079 +01:00 [DBG] Start client validation
2020-01-19 15:34:28.079 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:34:28.080 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-19 15:34:28.080 +01:00 [DBG] Secret id found: nodejs
2020-01-19 15:34:28.081 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 15:34:28.081 +01:00 [DBG] Client validation success
2020-01-19 15:34:28.081 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSTF645199:00000001",
  "TimeStamp": "2020-01-19T14:34:28Z",
  "ProcessId": 12584,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 15:34:28.082 +01:00 [DBG] Start token request validation
2020-01-19 15:34:28.083 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:34:28.090 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:34:28.091 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:34:28.091 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "14dc8024875c515d5e7791ad5ab1c793d3001bb4bcb2474a2205a06831db81b0",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "14dc8024875c515d5e7791ad5ab1c793d3001bb4bcb2474a2205a06831db81b0",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "f2793b5d-a1bc-4add-be81-a9e8bda9b9ef"
  }
}
2020-01-19 15:34:28.092 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-19 15:34:28.092 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:34:28.093 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-19 15:34:28.093 +01:00 [DBG] Issued claims: []
2020-01-19 15:34:28.097 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-19 15:34:28.098 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via ClaimsProviderIdentityToken
2020-01-19 15:34:28.099 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 15:34:28.102 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****SYAw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****2CPw"
    }
  ],
  "ActivityId": "0HLSSTF645199:00000001",
  "TimeStamp": "2020-01-19T14:34:28Z",
  "ProcessId": 12584,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 15:34:28.103 +01:00 [DBG] Token request success.
2020-01-19 15:34:28.113 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:34:28.117 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:34:28.121 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:34:28.122 +01:00 [DBG] Start key discovery request
2020-01-19 15:34:28.149 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-19 15:34:28.151 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-19 15:34:28.151 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-19 15:34:28.155 +01:00 [DBG] Start userinfo request
2020-01-19 15:34:28.157 +01:00 [DBG] Bearer token found in header
2020-01-19 15:34:28.194 +01:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-19 15:34:28.194 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-19 15:34:28.199 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579444468,
    "exp": 1579444493,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579439785,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "role"
    ],
    "amr": "pwd"
  }
}
2020-01-19 15:34:28.200 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-19 15:34:28.203 +01:00 [DBG] Creating userinfo response
2020-01-19 15:34:28.204 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:34:28.206 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:34:28.207 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at role
2020-01-19 15:34:28.208 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:34:28.208 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via UserInfoEndpoint
2020-01-19 15:34:28.209 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 15:34:28.210 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website role
2020-01-19 15:34:28.219 +01:00 [DBG] End userinfo request
2020-01-19 15:34:28.435 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:34:28.436 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:34:28.436 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:34:28.437 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:34:28.437 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:34:28.438 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:34:28.438 +01:00 [DBG] Start discovery request
2020-01-19 15:34:28.476 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:34:28.477 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:34:28.477 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:34:28.478 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:34:28.478 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:34:28.479 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:34:28.479 +01:00 [DBG] Start key discovery request
2020-01-19 15:34:28.515 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:34:28.516 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:34:28.516 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:34:28.517 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:34:28.518 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:34:28.518 +01:00 [DBG] Start authorize request
2020-01-19 15:34:28.518 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:34:28.519 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:34:28.519 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:34:28.519 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:34:28.520 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "3fFfm9e3ZNVkvQQ_q-ItAgJJDtGBkFpZMbjgZ0E4_izM2",
  "Nonce": "3fFfm9e3ZNVkvQQ_q-ItAgJJDtGBkFpZMbjgZ0E4_izM2",
  "SessionId": "03fd9628ad44fc4549efee75f9baa7e1",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "3fFfm9e3ZNVkvQQ_q-ItAgJJDtGBkFpZMbjgZ0E4_izM2",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "fF0lGed47GqNSpdlWuOWz_TNVvon30AxbPpkyjybwfk",
    "code_challenge_method": "S256",
    "nonce": "3fFfm9e3ZNVkvQQ_q-ItAgJJDtGBkFpZMbjgZ0E4_izM2"
  }
}
2020-01-19 15:34:28.521 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:34:28.521 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:34:28.521 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:34:28.528 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****3c24"
    }
  ],
  "ActivityId": "0HLSSTF645198:00000002",
  "TimeStamp": "2020-01-19T14:34:28Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:34:28.536 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "3fFfm9e3ZNVkvQQ_q-ItAgJJDtGBkFpZMbjgZ0E4_izM2",
  "Scope": "openid profile api"
}
2020-01-19 15:34:28.733 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:34:28.734 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:34:28.734 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:34:28.735 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:34:28.736 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:34:28.737 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:34:28.738 +01:00 [DBG] Start discovery request
2020-01-19 15:34:28.774 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:34:28.775 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:34:28.777 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:34:28.778 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:34:28.778 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:34:28.779 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:34:28.780 +01:00 [DBG] Start key discovery request
2020-01-19 15:34:28.797 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:34:28.798 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:34:28.799 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:34:28.800 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:34:28.800 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:34:28.801 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:34:28.802 +01:00 [DBG] Start token request.
2020-01-19 15:34:28.802 +01:00 [DBG] Start client validation
2020-01-19 15:34:28.802 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:34:28.803 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:34:28.803 +01:00 [DBG] client id without secret found
2020-01-19 15:34:28.804 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:34:28.809 +01:00 [DBG] Secret id found: angular
2020-01-19 15:34:28.810 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:34:28.810 +01:00 [DBG] Client validation success
2020-01-19 15:34:28.811 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSTF645197:0000000E",
  "TimeStamp": "2020-01-19T14:34:28Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:34:28.812 +01:00 [DBG] Start token request validation
2020-01-19 15:34:28.812 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:34:28.820 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:34:28.820 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:34:28.821 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:34:28.821 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "3ac5c52cd50ba47d98ad0ca1856f94708fdfdc70874a101065e9db1a185c3c24",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "3ac5c52cd50ba47d98ad0ca1856f94708fdfdc70874a101065e9db1a185c3c24",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "Dujps7LPcC6g3bH8LrVtKNa1gZMhDK-ruKqsLsQQTp5UP",
    "client_id": "angular"
  }
}
2020-01-19 15:34:28.822 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:34:28.822 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:34:28.822 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:34:28.823 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:34:36.727 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 15:34:36.727 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 15:34:36.731 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****UELQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****ljFQ"
    }
  ],
  "ActivityId": "0HLSSTF645197:0000000E",
  "TimeStamp": "2020-01-19T14:34:36Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:34:36.732 +01:00 [DBG] Token request success.
2020-01-19 15:34:38.491 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:34:38.491 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:34:38.492 +01:00 [DBG] Request path /connect/endsession matched to endpoint type Endsession
2020-01-19 15:34:38.493 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionEndpoint
2020-01-19 15:34:38.494 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionEndpoint for /connect/endsession
2020-01-19 15:34:38.497 +01:00 [DBG] Processing signout request for 88421113
2020-01-19 15:34:38.500 +01:00 [DBG] Start end session request validation
2020-01-19 15:34:38.503 +01:00 [DBG] Start identity token validation
2020-01-19 15:34:38.504 +01:00 [DBG] Client found: nodejs / ErazerSSO nodejs
2020-01-19 15:34:38.507 +01:00 [DBG] IsActive called from: IdentityTokenValidation
2020-01-19 15:34:38.507 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-19 15:34:38.508 +01:00 [DBG] Token validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "ValidateLifetime": false,
  "Claims": {
    "nbf": 1579444468,
    "exp": 1579444493,
    "iss": "http://localhost:5000",
    "aud": "nodejs",
    "iat": 1579444468,
    "at_hash": "YO_5R-7aO-nWOTTjI0_j1Q",
    "sid": "03fd9628ad44fc4549efee75f9baa7e1",
    "sub": "88421113",
    "auth_time": 1579439785,
    "idp": "local",
    "name": "Bob Smith",
    "given_name": "Bob",
    "family_name": "Smith",
    "website": "http://bob.com",
    "role": "Company",
    "amr": "pwd"
  }
}
2020-01-19 15:34:38.512 +01:00 [INF] End session request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "SubjectId": "88421113",
  "PostLogOutUri": "http://localhost:8888",
  "Raw": {
    "id_token_hint": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjU0N2NmYzUxNjk3Zjk1ZjFlYTk3NTgwZTlkZTQwYWQxIiwidHlwIjoiSldUIn0.eyJuYmYiOjE1Nzk0NDQ0NjgsImV4cCI6MTU3OTQ0NDQ5MywiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDo1MDAwIiwiYXVkIjoibm9kZWpzIiwiaWF0IjoxNTc5NDQ0NDY4LCJhdF9oYXNoIjoiWU9fNVItN2FPLW5XT1RUakkwX2oxUSIsInNpZCI6IjAzZmQ5NjI4YWQ0NGZjNDU0OWVmZWU3NWY5YmFhN2UxIiwic3ViIjoiODg0MjExMTMiLCJhdXRoX3RpbWUiOjE1Nzk0Mzk3ODUsImlkcCI6ImxvY2FsIiwibmFtZSI6IkJvYiBTbWl0aCIsImdpdmVuX25hbWUiOiJCb2IiLCJmYW1pbHlfbmFtZSI6IlNtaXRoIiwid2Vic2l0ZSI6Imh0dHA6Ly9ib2IuY29tIiwicm9sZSI6IkNvbXBhbnkiLCJhbXIiOlsicHdkIl19.oUXNQT4bjXe4zu74g5V5G717sxt7cS5xKzgNEF4V9eLbdjvvCWut_dGj_ukxDg_a-1jieWsDF2X4yR5C2BLNbKxO0smmn80VDjqPWXOTE4qenOzQfWXSbopSWo9s4lPfj1oXbvUvlMjl5P1hlK7VD1_VTGjVsZ1GkSNKYklgR2KUZlPgpSMSVx0gT5rP_HYcojUywvArgLWwfaFVB-IXrug1RF9eilw2Ef08clNMPOaUaaQQiMAeExRpB3XV7B1-Iw25fCqIX7JgotOKhAyGe8vrCmQ9CI9BHqPCGzIUJqvX70uuO4hfF65nZR5QryAepiOzJrYxOvHqImWm_5SYAw",
    "post_logout_redirect_uri": "http://localhost:8888"
  }
}
2020-01-19 15:34:38.514 +01:00 [DBG] Success validating end session request from nodejs
2020-01-19 15:34:38.528 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:34:38.530 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:34:38.726 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-19 15:34:38.732 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "ActivityId": "0HLSSTF645198:00000004",
  "TimeStamp": "2020-01-19T14:34:38Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:34:40.988 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-01-19 15:34:41.025 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-01-19 15:34:41.026 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-01-19 15:34:41.033 +01:00 [DBG] Processing signout callback request
2020-01-19 15:34:41.044 +01:00 [DBG] No client front-channel logout URLs
2020-01-19 15:34:41.045 +01:00 [DBG] No client back-channel logout URLs
2020-01-19 15:34:41.045 +01:00 [INF] Successful signout callback.
2020-01-19 15:34:41.046 +01:00 [DBG] No client front-channel iframe urls
2020-01-19 15:34:41.046 +01:00 [DBG] No client back-channel iframe urls
2020-01-19 15:34:47.560 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:34:47.561 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:34:47.561 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:34:47.562 +01:00 [DBG] Start authorize request
2020-01-19 15:34:47.562 +01:00 [DBG] No user present in authorize request
2020-01-19 15:34:47.562 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:34:47.563 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:34:47.563 +01:00 [DBG] No PKCE used.
2020-01-19 15:34:47.564 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:34:47.564 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "7a6b2b24-0dee-4d3d-9829-075e0e38fde5",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "7a6b2b24-0dee-4d3d-9829-075e0e38fde5",
    "client_id": "nodejs"
  }
}
2020-01-19 15:34:47.568 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 15:34:47.585 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:34:47.589 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:34:47.589 +01:00 [DBG] No PKCE used.
2020-01-19 15:34:47.595 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:34:52.121 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 15:34:52.140 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSTF64519D:00000005",
  "TimeStamp": "2020-01-19T14:34:52Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:34:52.146 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:34:52.148 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 15:34:52.148 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 15:34:52.152 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:34:52.183 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:34:52.184 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:34:52.185 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 15:34:52.186 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 15:34:52.186 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 15:34:52.189 +01:00 [DBG] Start authorize callback request
2020-01-19 15:34:52.191 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:34:52.191 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:34:52.192 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:34:52.192 +01:00 [DBG] No PKCE used.
2020-01-19 15:34:52.193 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:34:52.194 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "7a6b2b24-0dee-4d3d-9829-075e0e38fde5",
  "SessionId": "07724d72211b2acae0489e434240b5d1",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "7a6b2b24-0dee-4d3d-9829-075e0e38fde5",
    "client_id": "nodejs"
  }
}
2020-01-19 15:34:52.195 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:34:52.195 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:34:52.196 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:34:52.203 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****b0bc"
    }
  ],
  "ActivityId": "0HLSSTF64519D:00000006",
  "TimeStamp": "2020-01-19T14:34:52Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:34:52.205 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "7a6b2b24-0dee-4d3d-9829-075e0e38fde5",
  "Scope": "openid profile role"
}
2020-01-19 15:34:52.209 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:34:52.209 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:34:52.222 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:34:52.223 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:34:52.224 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:34:52.224 +01:00 [DBG] Start token request.
2020-01-19 15:34:52.224 +01:00 [DBG] Start client validation
2020-01-19 15:34:52.225 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:34:52.225 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-19 15:34:52.225 +01:00 [DBG] Secret id found: nodejs
2020-01-19 15:34:52.225 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 15:34:52.226 +01:00 [DBG] Client validation success
2020-01-19 15:34:52.226 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSTF64519G:00000001",
  "TimeStamp": "2020-01-19T14:34:52Z",
  "ProcessId": 12584,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 15:34:52.227 +01:00 [DBG] Start token request validation
2020-01-19 15:34:52.227 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:34:52.235 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:34:52.236 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:34:52.236 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "2e386cf75cea2586d08796ba44b8aadacfdb4faf9132d76d12fd2961bbadb0bc",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "2e386cf75cea2586d08796ba44b8aadacfdb4faf9132d76d12fd2961bbadb0bc",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "7a6b2b24-0dee-4d3d-9829-075e0e38fde5"
  }
}
2020-01-19 15:34:52.237 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-19 15:34:52.237 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:34:52.237 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-19 15:34:52.238 +01:00 [DBG] Issued claims: []
2020-01-19 15:34:52.241 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-19 15:34:52.242 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via ClaimsProviderIdentityToken
2020-01-19 15:34:52.252 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 15:34:52.255 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****z7FQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****yM8A"
    }
  ],
  "ActivityId": "0HLSSTF64519G:00000001",
  "TimeStamp": "2020-01-19T14:34:52Z",
  "ProcessId": 12584,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 15:34:52.257 +01:00 [DBG] Token request success.
2020-01-19 15:34:52.263 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-19 15:34:52.264 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-19 15:34:52.265 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-19 15:34:52.265 +01:00 [DBG] Start userinfo request
2020-01-19 15:34:52.265 +01:00 [DBG] Bearer token found in header
2020-01-19 15:34:52.268 +01:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-19 15:34:52.268 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-19 15:34:52.268 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579444492,
    "exp": 1579444517,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579444492,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "role"
    ],
    "amr": "pwd"
  }
}
2020-01-19 15:34:52.269 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-19 15:34:52.270 +01:00 [DBG] Creating userinfo response
2020-01-19 15:34:52.270 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:34:52.270 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:34:52.270 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at role
2020-01-19 15:34:52.271 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:34:52.271 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via UserInfoEndpoint
2020-01-19 15:34:52.272 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 15:34:52.273 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website role
2020-01-19 15:34:52.273 +01:00 [DBG] End userinfo request
2020-01-19 15:34:52.457 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:34:52.458 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:34:52.458 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:34:52.459 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:34:52.460 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:34:52.461 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:34:52.462 +01:00 [DBG] Start discovery request
2020-01-19 15:34:52.489 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:34:52.489 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:34:52.490 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:34:52.490 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:34:52.491 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:34:52.491 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:34:52.492 +01:00 [DBG] Start key discovery request
2020-01-19 15:35:30.290 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:35:30.291 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:35:30.292 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:35:30.292 +01:00 [DBG] Start authorize request
2020-01-19 15:35:30.293 +01:00 [DBG] No user present in authorize request
2020-01-19 15:35:30.293 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:35:30.293 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:35:30.293 +01:00 [DBG] No PKCE used.
2020-01-19 15:35:30.294 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:35:30.294 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "fa4ba439-095c-40ed-bc20-4b414895a6c0",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "fa4ba439-095c-40ed-bc20-4b414895a6c0",
    "client_id": "nodejs"
  }
}
2020-01-19 15:35:30.295 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 15:35:30.302 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:35:30.302 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:35:30.302 +01:00 [DBG] No PKCE used.
2020-01-19 15:35:30.303 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:35:39.475 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 15:35:39.477 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSTF64519F:00000008",
  "TimeStamp": "2020-01-19T14:35:39Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:35:39.480 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:35:39.480 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 15:35:39.481 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 15:35:39.482 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:35:39.506 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:35:39.507 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:35:39.509 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 15:35:39.510 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 15:35:39.510 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 15:35:39.511 +01:00 [DBG] Start authorize callback request
2020-01-19 15:35:39.511 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:35:39.512 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:35:39.512 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:35:39.512 +01:00 [DBG] No PKCE used.
2020-01-19 15:35:39.512 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:35:39.513 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "fa4ba439-095c-40ed-bc20-4b414895a6c0",
  "SessionId": "eb42b5d5895fd517833f134c75b3c8c2",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "fa4ba439-095c-40ed-bc20-4b414895a6c0",
    "client_id": "nodejs"
  }
}
2020-01-19 15:35:39.514 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:35:39.514 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:35:39.515 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:35:39.522 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****e337"
    }
  ],
  "ActivityId": "0HLSSTF64519F:00000009",
  "TimeStamp": "2020-01-19T14:35:39Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:35:39.523 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "fa4ba439-095c-40ed-bc20-4b414895a6c0",
  "Scope": "openid profile role"
}
2020-01-19 15:35:39.523 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:35:39.524 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:35:39.536 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:35:39.541 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:35:39.549 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:35:39.551 +01:00 [DBG] Start token request.
2020-01-19 15:35:39.551 +01:00 [DBG] Start client validation
2020-01-19 15:35:39.551 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:35:39.551 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-19 15:35:39.552 +01:00 [DBG] Secret id found: nodejs
2020-01-19 15:35:39.552 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 15:35:39.552 +01:00 [DBG] Client validation success
2020-01-19 15:35:39.553 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSTF64519I:00000001",
  "TimeStamp": "2020-01-19T14:35:39Z",
  "ProcessId": 12584,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 15:35:39.553 +01:00 [DBG] Start token request validation
2020-01-19 15:35:39.554 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:35:39.560 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:35:39.561 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:35:39.561 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "19acc9677bbc6a8c3baa467807b21d4716dcf8226fc4f208973867b3c984e337",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "19acc9677bbc6a8c3baa467807b21d4716dcf8226fc4f208973867b3c984e337",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "fa4ba439-095c-40ed-bc20-4b414895a6c0"
  }
}
2020-01-19 15:35:39.562 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-19 15:35:39.563 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:35:39.563 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-19 15:35:39.564 +01:00 [DBG] Issued claims: []
2020-01-19 15:35:39.567 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-19 15:35:39.569 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via ClaimsProviderIdentityToken
2020-01-19 15:35:39.570 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 15:35:39.574 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****eTTQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****n1sw"
    }
  ],
  "ActivityId": "0HLSSTF64519I:00000001",
  "TimeStamp": "2020-01-19T14:35:39Z",
  "ProcessId": 12584,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 15:35:39.575 +01:00 [DBG] Token request success.
2020-01-19 15:35:39.581 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:35:39.582 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:35:39.582 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:35:39.583 +01:00 [DBG] Start key discovery request
2020-01-19 15:35:39.595 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-19 15:35:39.595 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-19 15:35:39.596 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-19 15:35:39.597 +01:00 [DBG] Start userinfo request
2020-01-19 15:35:39.598 +01:00 [DBG] Bearer token found in header
2020-01-19 15:35:39.600 +01:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-19 15:35:39.601 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-19 15:35:39.602 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579444539,
    "exp": 1579444564,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579444539,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "role"
    ],
    "amr": "pwd"
  }
}
2020-01-19 15:35:39.604 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-19 15:35:39.605 +01:00 [DBG] Creating userinfo response
2020-01-19 15:35:39.605 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:35:39.605 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:35:39.605 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at role
2020-01-19 15:35:39.606 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:35:39.606 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via UserInfoEndpoint
2020-01-19 15:35:39.608 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 15:35:39.609 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website role
2020-01-19 15:35:39.609 +01:00 [DBG] End userinfo request
2020-01-19 15:35:39.791 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:35:39.792 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:35:39.793 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:35:39.794 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:35:39.796 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:35:39.796 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:35:39.797 +01:00 [DBG] Start discovery request
2020-01-19 15:35:39.827 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:35:39.827 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:35:39.828 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:35:39.829 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:35:39.830 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:35:39.831 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:35:39.832 +01:00 [DBG] Start key discovery request
2020-01-19 15:35:39.880 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:35:39.882 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:35:39.883 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:35:39.885 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:35:39.886 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:35:39.887 +01:00 [DBG] Start authorize request
2020-01-19 15:35:39.888 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:35:39.889 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:35:39.889 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:35:39.889 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:35:39.890 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "TvIT774KHtxqMgKOO-clwy2COYtXJQKMirN-o1_SZ5OlM",
  "Nonce": "TvIT774KHtxqMgKOO-clwy2COYtXJQKMirN-o1_SZ5OlM",
  "SessionId": "eb42b5d5895fd517833f134c75b3c8c2",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "TvIT774KHtxqMgKOO-clwy2COYtXJQKMirN-o1_SZ5OlM",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "7ph2gywwEGC32PUNnvwhRSwsQ9s6-rZ9uuyCt6b-Yk8",
    "code_challenge_method": "S256",
    "nonce": "TvIT774KHtxqMgKOO-clwy2COYtXJQKMirN-o1_SZ5OlM"
  }
}
2020-01-19 15:35:39.891 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:35:39.892 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:35:39.892 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:35:39.899 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****41f0"
    }
  ],
  "ActivityId": "0HLSSTF64519F:0000000A",
  "TimeStamp": "2020-01-19T14:35:39Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:35:39.909 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "TvIT774KHtxqMgKOO-clwy2COYtXJQKMirN-o1_SZ5OlM",
  "Scope": "openid profile api"
}
2020-01-19 15:35:39.910 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:35:39.911 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:35:40.089 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:35:40.090 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:35:40.091 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:35:40.092 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:35:40.093 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:35:40.093 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:35:40.094 +01:00 [DBG] Start discovery request
2020-01-19 15:35:40.128 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:35:40.128 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:35:40.129 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:35:40.129 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:35:40.130 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:35:40.131 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:35:40.131 +01:00 [DBG] Start key discovery request
2020-01-19 15:35:40.182 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:35:40.183 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:35:40.184 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:35:40.185 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:35:40.186 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:35:40.187 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:35:40.187 +01:00 [DBG] Start token request.
2020-01-19 15:35:40.188 +01:00 [DBG] Start client validation
2020-01-19 15:35:40.188 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:35:40.189 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:35:40.189 +01:00 [DBG] client id without secret found
2020-01-19 15:35:40.189 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:35:40.190 +01:00 [DBG] Secret id found: angular
2020-01-19 15:35:40.190 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:35:40.191 +01:00 [DBG] Client validation success
2020-01-19 15:35:40.192 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSTF645197:00000017",
  "TimeStamp": "2020-01-19T14:35:40Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:35:40.193 +01:00 [DBG] Start token request validation
2020-01-19 15:35:40.193 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:35:40.202 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:35:40.203 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:35:40.203 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:35:40.203 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "3b5c6b7f0eeb70a204d0846c78369a3d04388e0eed61f27370886f57bf8041f0",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "3b5c6b7f0eeb70a204d0846c78369a3d04388e0eed61f27370886f57bf8041f0",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "prw0kje3mpEJkP6AUrgzgxIJq-cB2j6IRgqwKzkCdXNR9",
    "client_id": "angular"
  }
}
2020-01-19 15:35:40.204 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:35:40.204 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:35:40.205 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:35:40.205 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:35:40.208 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 15:35:40.209 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 15:35:40.212 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****EDYQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****gbYA"
    }
  ],
  "ActivityId": "0HLSSTF645197:00000017",
  "TimeStamp": "2020-01-19T14:35:40Z",
  "ProcessId": 12584,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:35:40.213 +01:00 [DBG] Token request success.
2020-01-19 15:37:01.885 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 15:37:02.076 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 15:37:02.080 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 15:37:02.080 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 15:37:02.080 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 15:37:02.081 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 15:37:12.191 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:37:12.195 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:37:12.196 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:37:12.231 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:37:12.234 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:37:12.235 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:37:12.238 +01:00 [DBG] Start discovery request
2020-01-19 15:37:12.322 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:37:12.323 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:37:12.324 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:37:12.328 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:37:12.333 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:37:12.334 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:37:12.336 +01:00 [DBG] Start key discovery request
2020-01-19 15:37:12.400 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:37:12.404 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:37:12.406 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:37:12.409 +01:00 [DBG] Start authorize request
2020-01-19 15:37:12.418 +01:00 [DBG] No user present in authorize request
2020-01-19 15:37:12.421 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:37:12.430 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:37:12.451 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:37:12.466 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "gZugagQyr9uzL1b2BIo39Oqz9fUlo0ZFhT955OEusfoEx",
  "Nonce": "gZugagQyr9uzL1b2BIo39Oqz9fUlo0ZFhT955OEusfoEx",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "gZugagQyr9uzL1b2BIo39Oqz9fUlo0ZFhT955OEusfoEx",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "fOd_mxGMove02GNoGuhzOvsLoqmoV582QPEUdMvyGB0",
    "code_challenge_method": "S256",
    "nonce": "gZugagQyr9uzL1b2BIo39Oqz9fUlo0ZFhT955OEusfoEx"
  }
}
2020-01-19 15:37:12.470 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 15:37:12.623 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:37:12.624 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:37:12.624 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:37:24.504 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 15:37:24.562 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSTK91O80P:00000004",
  "TimeStamp": "2020-01-19T14:37:24Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:37:24.570 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:37:24.572 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 15:37:24.572 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 15:37:24.580 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:37:24.614 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:37:24.615 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:37:24.615 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 15:37:24.616 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 15:37:24.617 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 15:37:24.619 +01:00 [DBG] Start authorize callback request
2020-01-19 15:37:24.623 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:37:24.624 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:37:24.624 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:37:24.624 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:37:24.625 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "gZugagQyr9uzL1b2BIo39Oqz9fUlo0ZFhT955OEusfoEx",
  "Nonce": "gZugagQyr9uzL1b2BIo39Oqz9fUlo0ZFhT955OEusfoEx",
  "SessionId": "347ea51abc1be207309be9ecb418a426",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "gZugagQyr9uzL1b2BIo39Oqz9fUlo0ZFhT955OEusfoEx",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "fOd_mxGMove02GNoGuhzOvsLoqmoV582QPEUdMvyGB0",
    "code_challenge_method": "S256",
    "nonce": "gZugagQyr9uzL1b2BIo39Oqz9fUlo0ZFhT955OEusfoEx"
  }
}
2020-01-19 15:37:24.627 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:37:24.631 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:37:24.634 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:37:24.666 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****3766"
    }
  ],
  "ActivityId": "0HLSSTK91O80P:00000005",
  "TimeStamp": "2020-01-19T14:37:24Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:37:24.671 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "gZugagQyr9uzL1b2BIo39Oqz9fUlo0ZFhT955OEusfoEx",
  "Scope": "openid profile api"
}
2020-01-19 15:37:24.679 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:37:24.679 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:37:24.839 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:37:24.840 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:37:24.841 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:37:24.841 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:37:24.842 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:37:24.842 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:37:24.843 +01:00 [DBG] Start discovery request
2020-01-19 15:37:24.895 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:37:24.896 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:37:24.897 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:37:24.899 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:37:24.900 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:37:24.903 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:37:24.905 +01:00 [DBG] Start key discovery request
2020-01-19 15:37:24.935 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:37:24.939 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:37:24.943 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:37:24.946 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:37:24.956 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:37:24.958 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:37:24.971 +01:00 [DBG] Start token request.
2020-01-19 15:37:24.975 +01:00 [DBG] Start client validation
2020-01-19 15:37:24.978 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:37:24.981 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:37:24.983 +01:00 [DBG] client id without secret found
2020-01-19 15:37:24.984 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:37:24.985 +01:00 [DBG] Secret id found: angular
2020-01-19 15:37:24.986 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:37:24.987 +01:00 [DBG] Client validation success
2020-01-19 15:37:24.996 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSTK91O80N:00000005",
  "TimeStamp": "2020-01-19T14:37:24Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:37:25.005 +01:00 [DBG] Start token request validation
2020-01-19 15:37:25.010 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:37:25.043 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:37:25.045 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:37:25.045 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:37:25.051 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "4d37eee646b5b20287c47dc4f6e81cbffd9a95b65e499869cc0d492b12173766",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "4d37eee646b5b20287c47dc4f6e81cbffd9a95b65e499869cc0d492b12173766",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "hV3N9jsvSkGRoWGa092VZ6JFVLDBoo1rxujgaTm8oVGHY",
    "client_id": "angular"
  }
}
2020-01-19 15:37:25.063 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:37:25.063 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:37:25.071 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:37:25.078 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:37:25.136 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 15:37:25.137 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 15:37:25.142 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****uzzg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****6WgQ"
    }
  ],
  "ActivityId": "0HLSSTK91O80N:00000005",
  "TimeStamp": "2020-01-19T14:37:25Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:37:25.144 +01:00 [DBG] Token request success.
2020-01-19 15:37:25.449 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:37:25.450 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:37:25.451 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:37:25.452 +01:00 [DBG] Start discovery request
2020-01-19 15:37:25.556 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:37:25.557 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:37:25.557 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:37:25.558 +01:00 [DBG] Start key discovery request
2020-01-19 15:38:22.061 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:38:22.062 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:38:22.062 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:38:22.063 +01:00 [DBG] Start authorize request
2020-01-19 15:38:22.063 +01:00 [DBG] No user present in authorize request
2020-01-19 15:38:22.064 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:38:22.064 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:38:22.064 +01:00 [DBG] No PKCE used.
2020-01-19 15:38:22.065 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:38:22.065 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "a5443ce8-e3ef-4405-8990-58427a4ff8b4",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "a5443ce8-e3ef-4405-8990-58427a4ff8b4",
    "client_id": "nodejs"
  }
}
2020-01-19 15:38:22.067 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 15:38:22.072 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:38:22.072 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:38:22.073 +01:00 [DBG] No PKCE used.
2020-01-19 15:38:22.073 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:38:31.428 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 15:38:31.430 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSTK91O80V:00000006",
  "TimeStamp": "2020-01-19T14:38:31Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:38:31.430 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:38:31.431 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 15:38:31.431 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 15:38:31.431 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:38:31.438 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:38:31.439 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:38:31.439 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 15:38:31.440 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 15:38:31.441 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 15:38:31.441 +01:00 [DBG] Start authorize callback request
2020-01-19 15:38:31.442 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:38:31.442 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:38:31.442 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:38:31.443 +01:00 [DBG] No PKCE used.
2020-01-19 15:38:31.443 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:38:31.443 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "a5443ce8-e3ef-4405-8990-58427a4ff8b4",
  "SessionId": "db53fb165f0f5317d699a90db1b5ca47",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "a5443ce8-e3ef-4405-8990-58427a4ff8b4",
    "client_id": "nodejs"
  }
}
2020-01-19 15:38:31.445 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:38:31.445 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:38:31.445 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:38:31.452 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****5d82"
    }
  ],
  "ActivityId": "0HLSSTK91O80V:00000007",
  "TimeStamp": "2020-01-19T14:38:31Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:38:31.453 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "a5443ce8-e3ef-4405-8990-58427a4ff8b4",
  "Scope": "openid profile role"
}
2020-01-19 15:38:31.454 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:38:31.454 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:38:31.468 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:38:31.469 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:38:31.470 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:38:31.471 +01:00 [DBG] Start token request.
2020-01-19 15:38:31.471 +01:00 [DBG] Start client validation
2020-01-19 15:38:31.471 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:38:31.472 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-19 15:38:31.472 +01:00 [DBG] Secret id found: nodejs
2020-01-19 15:38:31.478 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 15:38:31.478 +01:00 [DBG] Client validation success
2020-01-19 15:38:31.479 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSTK91O811:00000001",
  "TimeStamp": "2020-01-19T14:38:31Z",
  "ProcessId": 16744,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 15:38:31.480 +01:00 [DBG] Start token request validation
2020-01-19 15:38:31.480 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:38:31.488 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:38:31.489 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:38:31.489 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "ec732e3e9d1dcd9200b71a18581b27a407dd6ddcda59585280af803147995d82",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "ec732e3e9d1dcd9200b71a18581b27a407dd6ddcda59585280af803147995d82",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "a5443ce8-e3ef-4405-8990-58427a4ff8b4"
  }
}
2020-01-19 15:38:31.490 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-19 15:38:31.491 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:38:31.492 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-19 15:38:31.494 +01:00 [DBG] Issued claims: []
2020-01-19 15:38:31.497 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-19 15:38:31.498 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via ClaimsProviderIdentityToken
2020-01-19 15:38:31.500 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 15:38:31.504 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****uKcA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****AbAQ"
    }
  ],
  "ActivityId": "0HLSSTK91O811:00000001",
  "TimeStamp": "2020-01-19T14:38:31Z",
  "ProcessId": 16744,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 15:38:31.505 +01:00 [DBG] Token request success.
2020-01-19 15:38:31.510 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:38:31.511 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:38:31.511 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:38:31.512 +01:00 [DBG] Start key discovery request
2020-01-19 15:38:31.518 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-19 15:38:31.519 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-19 15:38:31.521 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-19 15:38:31.527 +01:00 [DBG] Start userinfo request
2020-01-19 15:38:31.529 +01:00 [DBG] Bearer token found in header
2020-01-19 15:38:31.569 +01:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-19 15:38:31.569 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-19 15:38:31.573 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579444711,
    "exp": 1579444736,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579444711,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "role"
    ],
    "amr": "pwd"
  }
}
2020-01-19 15:38:31.575 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-19 15:38:31.577 +01:00 [DBG] Creating userinfo response
2020-01-19 15:38:31.580 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:38:31.581 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:38:31.583 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at role
2020-01-19 15:38:31.584 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:38:31.586 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via UserInfoEndpoint
2020-01-19 15:38:31.591 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 15:38:31.593 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website role
2020-01-19 15:38:31.597 +01:00 [DBG] End userinfo request
2020-01-19 15:38:31.794 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:38:31.794 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:38:31.795 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:38:31.795 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:38:31.796 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:38:31.796 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:38:31.797 +01:00 [DBG] Start discovery request
2020-01-19 15:38:31.829 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:38:31.830 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:38:31.831 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:38:31.831 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:38:31.832 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:38:31.833 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:38:31.834 +01:00 [DBG] Start key discovery request
2020-01-19 15:38:31.888 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:38:31.889 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:38:31.890 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:38:31.890 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:38:31.891 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:38:31.891 +01:00 [DBG] Start authorize request
2020-01-19 15:38:31.892 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:38:31.892 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:38:31.892 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:38:31.893 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:38:31.893 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "72P-4HWCwduASOUsv4LEhJUAq578jyb5vWfevSkXpLA3h",
  "Nonce": "72P-4HWCwduASOUsv4LEhJUAq578jyb5vWfevSkXpLA3h",
  "SessionId": "db53fb165f0f5317d699a90db1b5ca47",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "72P-4HWCwduASOUsv4LEhJUAq578jyb5vWfevSkXpLA3h",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "ly0LAuHVxotoKOBGTV1RY4zfajFwVZu9-IFF6h0v9xU",
    "code_challenge_method": "S256",
    "nonce": "72P-4HWCwduASOUsv4LEhJUAq578jyb5vWfevSkXpLA3h"
  }
}
2020-01-19 15:38:31.895 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:38:31.895 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:38:31.895 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:38:31.904 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****29b6"
    }
  ],
  "ActivityId": "0HLSSTK91O80V:00000008",
  "TimeStamp": "2020-01-19T14:38:31Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:38:31.906 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "72P-4HWCwduASOUsv4LEhJUAq578jyb5vWfevSkXpLA3h",
  "Scope": "openid profile api"
}
2020-01-19 15:38:31.907 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:38:31.908 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:38:32.104 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:38:32.104 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:38:32.105 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:38:32.105 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:38:32.106 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:38:32.107 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:38:32.107 +01:00 [DBG] Start discovery request
2020-01-19 15:38:32.117 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:38:32.118 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:38:32.119 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:38:32.119 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:38:32.120 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:38:32.120 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:38:32.121 +01:00 [DBG] Start key discovery request
2020-01-19 15:38:32.156 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:38:32.156 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:38:32.157 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:38:32.157 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:38:32.158 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:38:32.158 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:38:32.160 +01:00 [DBG] Start token request.
2020-01-19 15:38:32.160 +01:00 [DBG] Start client validation
2020-01-19 15:38:32.161 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:38:32.161 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:38:32.161 +01:00 [DBG] client id without secret found
2020-01-19 15:38:32.162 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:38:32.162 +01:00 [DBG] Secret id found: angular
2020-01-19 15:38:32.162 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:38:32.163 +01:00 [DBG] Client validation success
2020-01-19 15:38:32.163 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSTK91O814:00000005",
  "TimeStamp": "2020-01-19T14:38:32Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:38:32.164 +01:00 [DBG] Start token request validation
2020-01-19 15:38:32.165 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:38:32.176 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:38:32.177 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:38:32.177 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:38:32.178 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "b57caf4b45e44269c68a841302e63652292a971a7a20d568071255afccca29b6",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "b57caf4b45e44269c68a841302e63652292a971a7a20d568071255afccca29b6",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "gyIRiV1BA3cYJoaSLgVQZplN6Jp5nhVmjpH793Sf9UoYG",
    "client_id": "angular"
  }
}
2020-01-19 15:38:32.180 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:38:32.181 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:38:32.187 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:38:32.187 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:38:32.191 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 15:38:32.192 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 15:38:32.195 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****uACw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****T95w"
    }
  ],
  "ActivityId": "0HLSSTK91O814:00000005",
  "TimeStamp": "2020-01-19T14:38:32Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:38:32.197 +01:00 [DBG] Token request success.
2020-01-19 15:40:50.761 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:40:50.762 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:40:50.762 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:40:50.763 +01:00 [DBG] Start authorize request
2020-01-19 15:40:50.764 +01:00 [DBG] No user present in authorize request
2020-01-19 15:40:50.765 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:40:50.765 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:40:50.765 +01:00 [DBG] No PKCE used.
2020-01-19 15:40:50.766 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:40:50.766 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "192e7a3f-1df9-4e31-87f1-5e49c7d3c42f",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "192e7a3f-1df9-4e31-87f1-5e49c7d3c42f",
    "client_id": "nodejs"
  }
}
2020-01-19 15:40:50.769 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 15:40:50.777 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:40:50.777 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:40:50.778 +01:00 [DBG] No PKCE used.
2020-01-19 15:40:50.779 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:41:00.006 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 15:41:00.008 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSTK91O816:00000005",
  "TimeStamp": "2020-01-19T14:41:00Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:41:00.009 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:41:00.010 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 15:41:00.010 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 15:41:00.011 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:41:00.023 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:41:00.024 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:41:00.025 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 15:41:00.025 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 15:41:00.026 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 15:41:00.026 +01:00 [DBG] Start authorize callback request
2020-01-19 15:41:00.027 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:41:00.027 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:41:00.027 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:41:00.027 +01:00 [DBG] No PKCE used.
2020-01-19 15:41:00.028 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:41:00.028 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "192e7a3f-1df9-4e31-87f1-5e49c7d3c42f",
  "SessionId": "9b225ab3aa306090c3bc20307e294154",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "192e7a3f-1df9-4e31-87f1-5e49c7d3c42f",
    "client_id": "nodejs"
  }
}
2020-01-19 15:41:00.029 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:41:00.030 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:41:00.030 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:41:00.038 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****a127"
    }
  ],
  "ActivityId": "0HLSSTK91O816:00000006",
  "TimeStamp": "2020-01-19T14:41:00Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:41:00.040 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "192e7a3f-1df9-4e31-87f1-5e49c7d3c42f",
  "Scope": "openid profile role"
}
2020-01-19 15:41:00.040 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:41:00.041 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:41:00.063 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:41:00.064 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:41:00.065 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:41:00.066 +01:00 [DBG] Start token request.
2020-01-19 15:41:00.066 +01:00 [DBG] Start client validation
2020-01-19 15:41:00.067 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:41:00.068 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-19 15:41:00.068 +01:00 [DBG] Secret id found: nodejs
2020-01-19 15:41:00.070 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 15:41:00.070 +01:00 [DBG] Client validation success
2020-01-19 15:41:00.071 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSTK91O818:00000001",
  "TimeStamp": "2020-01-19T14:41:00Z",
  "ProcessId": 16744,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 15:41:00.073 +01:00 [DBG] Start token request validation
2020-01-19 15:41:00.073 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:41:00.083 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:41:00.084 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:41:00.085 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "60fb60815da1be333365b5eef38c0406a4e3b59d02872d68b33fc11a6479a127",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "60fb60815da1be333365b5eef38c0406a4e3b59d02872d68b33fc11a6479a127",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "192e7a3f-1df9-4e31-87f1-5e49c7d3c42f"
  }
}
2020-01-19 15:41:00.087 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-19 15:41:00.088 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:41:00.088 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-19 15:41:00.089 +01:00 [DBG] Issued claims: []
2020-01-19 15:41:00.093 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-19 15:41:00.094 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via ClaimsProviderIdentityToken
2020-01-19 15:41:00.096 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 15:41:00.100 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****S4vQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****tGvQ"
    }
  ],
  "ActivityId": "0HLSSTK91O818:00000001",
  "TimeStamp": "2020-01-19T14:41:00Z",
  "ProcessId": 16744,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 15:41:00.103 +01:00 [DBG] Token request success.
2020-01-19 15:41:00.109 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:41:00.113 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:41:00.116 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:41:00.120 +01:00 [DBG] Start key discovery request
2020-01-19 15:41:00.128 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-19 15:41:00.130 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-19 15:41:00.133 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-19 15:41:00.139 +01:00 [DBG] Start userinfo request
2020-01-19 15:41:00.140 +01:00 [DBG] Bearer token found in header
2020-01-19 15:41:00.144 +01:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-19 15:41:00.145 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-19 15:41:00.148 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579444860,
    "exp": 1579444885,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579444860,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "role"
    ],
    "amr": "pwd"
  }
}
2020-01-19 15:41:00.156 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-19 15:41:00.157 +01:00 [DBG] Creating userinfo response
2020-01-19 15:41:00.159 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:41:00.161 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:41:00.163 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at role
2020-01-19 15:41:00.167 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 15:41:00.172 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via UserInfoEndpoint
2020-01-19 15:41:00.176 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 15:41:00.177 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website role
2020-01-19 15:41:00.178 +01:00 [DBG] End userinfo request
2020-01-19 15:41:00.455 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:41:00.456 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:41:00.457 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:41:00.457 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:41:00.458 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:41:00.458 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:41:00.459 +01:00 [DBG] Start discovery request
2020-01-19 15:41:00.519 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:41:00.520 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:41:00.521 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:41:00.521 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:41:00.522 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:41:00.523 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:41:00.523 +01:00 [DBG] Start key discovery request
2020-01-19 15:41:00.569 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:41:00.570 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:41:00.571 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:41:00.571 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:41:00.572 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:41:00.572 +01:00 [DBG] Start authorize request
2020-01-19 15:41:00.573 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:41:00.573 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:41:00.573 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:41:00.574 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:41:00.574 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "l395Kx8AQ5e5oQ7FW8OMxhCUS9GkcgWtAfgPNsQFqeOfV",
  "Nonce": "l395Kx8AQ5e5oQ7FW8OMxhCUS9GkcgWtAfgPNsQFqeOfV",
  "SessionId": "9b225ab3aa306090c3bc20307e294154",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "l395Kx8AQ5e5oQ7FW8OMxhCUS9GkcgWtAfgPNsQFqeOfV",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "ZNM6EssIr8_luZe1zdbr8uCD8iPDDyrle9h-_jU0baE",
    "code_challenge_method": "S256",
    "nonce": "l395Kx8AQ5e5oQ7FW8OMxhCUS9GkcgWtAfgPNsQFqeOfV"
  }
}
2020-01-19 15:41:00.576 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:41:00.576 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:41:00.576 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:41:00.583 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****c7de"
    }
  ],
  "ActivityId": "0HLSSTK91O816:00000007",
  "TimeStamp": "2020-01-19T14:41:00Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:41:00.585 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "l395Kx8AQ5e5oQ7FW8OMxhCUS9GkcgWtAfgPNsQFqeOfV",
  "Scope": "openid profile api"
}
2020-01-19 15:41:00.586 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:41:00.587 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:41:00.775 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:41:00.777 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:41:00.777 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:41:00.778 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:41:00.780 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:41:00.782 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:41:00.783 +01:00 [DBG] Start discovery request
2020-01-19 15:41:00.845 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:41:00.846 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:41:00.847 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:41:00.848 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:41:00.851 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:41:00.853 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:41:00.855 +01:00 [DBG] Start key discovery request
2020-01-19 15:41:00.942 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:41:00.943 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:41:00.944 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:41:00.946 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:41:00.947 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:41:00.948 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:41:00.948 +01:00 [DBG] Start token request.
2020-01-19 15:41:00.949 +01:00 [DBG] Start client validation
2020-01-19 15:41:00.950 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:41:00.950 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:41:00.952 +01:00 [DBG] client id without secret found
2020-01-19 15:41:00.954 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:41:00.954 +01:00 [DBG] Secret id found: angular
2020-01-19 15:41:00.955 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:41:00.955 +01:00 [DBG] Client validation success
2020-01-19 15:41:00.955 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSTK91O81B:00000005",
  "TimeStamp": "2020-01-19T14:41:00Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:41:00.957 +01:00 [DBG] Start token request validation
2020-01-19 15:41:00.957 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:41:00.969 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:41:00.970 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:41:00.971 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:41:00.971 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "bd661fb7842146a3a44f5509c12ab4cfb1dab1f730fcb1e9b2529c5d9421c7de",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "bd661fb7842146a3a44f5509c12ab4cfb1dab1f730fcb1e9b2529c5d9421c7de",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "Yvav6tAI2wyDshhy46hQJOE6C3kRqLxCM9Zgl-scVrqYL",
    "client_id": "angular"
  }
}
2020-01-19 15:41:00.973 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:41:00.974 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:41:00.975 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:41:00.975 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:41:00.979 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 15:41:00.979 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 15:41:00.985 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****6KHA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****AEPQ"
    }
  ],
  "ActivityId": "0HLSSTK91O81B:00000005",
  "TimeStamp": "2020-01-19T14:41:00Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:41:00.987 +01:00 [DBG] Token request success.
2020-01-19 15:42:34.215 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:42:34.216 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:42:34.217 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:42:34.217 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:42:34.218 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:42:34.219 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:42:34.219 +01:00 [DBG] Start discovery request
2020-01-19 15:42:34.249 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:42:34.250 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:42:34.250 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:42:34.251 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:42:34.252 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:42:34.252 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:42:34.253 +01:00 [DBG] Start key discovery request
2020-01-19 15:45:42.975 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:45:42.976 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:45:42.977 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:45:42.977 +01:00 [DBG] Start discovery request
2020-01-19 15:45:48.376 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:45:48.377 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:45:48.378 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:45:48.379 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:45:48.379 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:45:48.380 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:45:48.381 +01:00 [DBG] Start discovery request
2020-01-19 15:45:48.484 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:45:48.485 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:45:48.486 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:45:48.487 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:45:48.487 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:45:48.488 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:45:48.489 +01:00 [DBG] Start key discovery request
2020-01-19 15:46:57.937 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:46:57.938 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:46:57.938 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:46:57.939 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:46:57.942 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:46:57.943 +01:00 [DBG] Start authorize request
2020-01-19 15:46:57.944 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:46:57.944 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:46:57.946 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:46:57.947 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:46:57.949 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "6nu9BnZ5v6zXICJLjcxc-SbV2OB4LhOHWvDvHsRz2w7D4",
  "Nonce": "6nu9BnZ5v6zXICJLjcxc-SbV2OB4LhOHWvDvHsRz2w7D4",
  "SessionId": "9b225ab3aa306090c3bc20307e294154",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "6nu9BnZ5v6zXICJLjcxc-SbV2OB4LhOHWvDvHsRz2w7D4",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "0PrbeQWQzaX5VTVl5KPs0qFDldnfTZyZ5B3xjWuFYQo",
    "code_challenge_method": "S256",
    "nonce": "6nu9BnZ5v6zXICJLjcxc-SbV2OB4LhOHWvDvHsRz2w7D4"
  }
}
2020-01-19 15:46:57.951 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:46:57.952 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:46:57.953 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:46:57.962 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****5c64"
    }
  ],
  "ActivityId": "0HLSSTK91O81H:00000001",
  "TimeStamp": "2020-01-19T14:46:57Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:46:57.964 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "6nu9BnZ5v6zXICJLjcxc-SbV2OB4LhOHWvDvHsRz2w7D4",
  "Scope": "openid profile api"
}
2020-01-19 15:46:58.328 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:46:58.328 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:46:58.329 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:46:58.330 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:46:58.330 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:46:58.331 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:46:58.331 +01:00 [DBG] Start discovery request
2020-01-19 15:46:58.365 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:46:58.366 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:46:58.369 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:46:58.370 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:46:58.371 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:46:58.372 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:46:58.373 +01:00 [DBG] Start key discovery request
2020-01-19 15:46:58.448 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:46:58.448 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:46:58.449 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:46:58.449 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:46:58.450 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:46:58.450 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:46:58.450 +01:00 [DBG] Start token request.
2020-01-19 15:46:58.451 +01:00 [DBG] Start client validation
2020-01-19 15:46:58.451 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:46:58.451 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:46:58.452 +01:00 [DBG] client id without secret found
2020-01-19 15:46:58.452 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:46:58.453 +01:00 [DBG] Secret id found: angular
2020-01-19 15:46:58.453 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:46:58.454 +01:00 [DBG] Client validation success
2020-01-19 15:46:58.454 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSTK91O81G:00000006",
  "TimeStamp": "2020-01-19T14:46:58Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:46:58.455 +01:00 [DBG] Start token request validation
2020-01-19 15:46:58.455 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:46:58.463 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:46:58.463 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:46:58.464 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:46:58.464 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "e69b7911af276b58ee117571166146f30d695b32c6fbd27d2e77ec9823fd5c64",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "e69b7911af276b58ee117571166146f30d695b32c6fbd27d2e77ec9823fd5c64",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "4FoxC9Cwwo_IY86NlDBnMgxNkPysYUvbsp1zQNKFSN-yR",
    "client_id": "angular"
  }
}
2020-01-19 15:46:58.465 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:46:58.465 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:46:58.466 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:46:58.466 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:46:58.470 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 15:46:58.471 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 15:46:58.475 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****E_Nw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****nyeQ"
    }
  ],
  "ActivityId": "0HLSSTK91O81G:00000006",
  "TimeStamp": "2020-01-19T14:46:58Z",
  "ProcessId": 16744,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:46:58.477 +01:00 [DBG] Token request success.
2020-01-19 15:49:36.049 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 15:49:36.157 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 15:49:36.160 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 15:49:36.160 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 15:49:36.160 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 15:49:36.167 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 15:50:36.031 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:50:36.035 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:50:36.036 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:50:36.064 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:50:36.067 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:50:36.067 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:50:36.069 +01:00 [DBG] Start discovery request
2020-01-19 15:50:36.148 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:50:36.149 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:50:36.150 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:50:36.156 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:50:36.162 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:50:36.163 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:50:36.166 +01:00 [DBG] Start key discovery request
2020-01-19 15:50:36.242 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:50:36.248 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:50:36.249 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:50:36.251 +01:00 [DBG] Start authorize request
2020-01-19 15:50:36.258 +01:00 [DBG] No user present in authorize request
2020-01-19 15:50:36.261 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:50:36.272 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:50:36.295 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:50:36.310 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "ZplRgpb-HihIzdbNcSULMxV2uxtuyzPn-o5UQrKoenNPJ",
  "Nonce": "ZplRgpb-HihIzdbNcSULMxV2uxtuyzPn-o5UQrKoenNPJ",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "ZplRgpb-HihIzdbNcSULMxV2uxtuyzPn-o5UQrKoenNPJ",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "h5prwGKP8x7tHL6U9-4M1RaCDMZ8DhMG3KydQRW2ttM",
    "code_challenge_method": "S256",
    "nonce": "ZplRgpb-HihIzdbNcSULMxV2uxtuyzPn-o5UQrKoenNPJ"
  }
}
2020-01-19 15:50:36.314 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 15:50:36.473 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:50:36.473 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:50:36.474 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:50:44.820 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 15:50:44.881 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSTROJKJ09:00000006",
  "TimeStamp": "2020-01-19T14:50:44Z",
  "ProcessId": 11044,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:50:44.891 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:50:44.893 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 15:50:44.893 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 15:50:44.901 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:50:44.935 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:50:44.936 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:50:44.937 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 15:50:44.938 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 15:50:44.938 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 15:50:44.941 +01:00 [DBG] Start authorize callback request
2020-01-19 15:50:44.945 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:50:44.945 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:50:44.946 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:50:44.946 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:50:44.947 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "ZplRgpb-HihIzdbNcSULMxV2uxtuyzPn-o5UQrKoenNPJ",
  "Nonce": "ZplRgpb-HihIzdbNcSULMxV2uxtuyzPn-o5UQrKoenNPJ",
  "SessionId": "d8de219b9d196a0f3bbd9264ebb34617",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "ZplRgpb-HihIzdbNcSULMxV2uxtuyzPn-o5UQrKoenNPJ",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "h5prwGKP8x7tHL6U9-4M1RaCDMZ8DhMG3KydQRW2ttM",
    "code_challenge_method": "S256",
    "nonce": "ZplRgpb-HihIzdbNcSULMxV2uxtuyzPn-o5UQrKoenNPJ"
  }
}
2020-01-19 15:50:44.950 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:50:44.955 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:50:44.957 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:50:44.988 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****cea6"
    }
  ],
  "ActivityId": "0HLSSTROJKJ09:00000007",
  "TimeStamp": "2020-01-19T14:50:44Z",
  "ProcessId": 11044,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:50:44.994 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "ZplRgpb-HihIzdbNcSULMxV2uxtuyzPn-o5UQrKoenNPJ",
  "Scope": "openid profile api"
}
2020-01-19 15:50:45.001 +01:00 [DBG] Augmenting SignInContext
2020-01-19 15:50:45.003 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 15:50:45.216 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:50:45.217 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:50:45.219 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:50:45.219 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:50:45.220 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:50:45.221 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:50:45.222 +01:00 [DBG] Start discovery request
2020-01-19 15:50:45.270 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:50:45.271 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:50:45.272 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:50:45.273 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:50:45.273 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:50:45.274 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:50:45.274 +01:00 [DBG] Start key discovery request
2020-01-19 15:50:45.290 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:50:45.290 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:50:45.291 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:50:45.291 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:50:45.294 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:50:45.294 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:50:45.298 +01:00 [DBG] Start token request.
2020-01-19 15:50:45.300 +01:00 [DBG] Start client validation
2020-01-19 15:50:45.303 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:50:45.305 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:50:45.305 +01:00 [DBG] client id without secret found
2020-01-19 15:50:45.306 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:50:45.306 +01:00 [DBG] Secret id found: angular
2020-01-19 15:50:45.307 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:50:45.307 +01:00 [DBG] Client validation success
2020-01-19 15:50:45.311 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSTROJKJ08:0000000A",
  "TimeStamp": "2020-01-19T14:50:45Z",
  "ProcessId": 11044,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:50:45.314 +01:00 [DBG] Start token request validation
2020-01-19 15:50:45.321 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:50:45.345 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:50:45.347 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:50:45.347 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:50:45.353 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "7efa364c935b1bc3b1d63557f45ab3e59eac24c3d88f9124ba235d3cecb5cea6",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "7efa364c935b1bc3b1d63557f45ab3e59eac24c3d88f9124ba235d3cecb5cea6",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "f0Ob9G-9QVEpaNIOuLOmL1zbnu7_1TjymSzkpDqy05vbE",
    "client_id": "angular"
  }
}
2020-01-19 15:50:45.363 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:50:45.364 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:50:45.371 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:50:45.378 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:50:45.431 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 15:50:45.432 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 15:50:45.436 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****a2Fg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****ZCGQ"
    }
  ],
  "ActivityId": "0HLSSTROJKJ08:0000000A",
  "TimeStamp": "2020-01-19T14:50:45Z",
  "ProcessId": 11044,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:50:45.438 +01:00 [DBG] Token request success.
2020-01-19 15:55:36.111 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 15:55:36.257 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 15:55:36.261 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 15:55:36.261 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 15:55:36.261 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 15:55:36.262 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 15:57:04.028 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 15:57:04.146 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 15:57:04.149 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 15:57:04.149 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 15:57:04.149 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 15:57:04.150 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 15:57:07.839 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:57:07.849 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 15:57:07.853 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 15:57:07.861 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 15:57:07.862 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 15:57:07.865 +01:00 [DBG] Start authorize request
2020-01-19 15:57:07.871 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 15:57:07.873 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 15:57:07.882 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 15:57:07.914 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 15:57:07.972 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "NtFQWwCtuT-i-GhNuT8R3k1nZH_4cmNFWwWnkhHQnoe74",
  "Nonce": "NtFQWwCtuT-i-GhNuT8R3k1nZH_4cmNFWwWnkhHQnoe74",
  "SessionId": "d8de219b9d196a0f3bbd9264ebb34617",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "NtFQWwCtuT-i-GhNuT8R3k1nZH_4cmNFWwWnkhHQnoe74",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "F5V5QINAK4AO_IswJTHFVJd9WDtBWmX2hmMeU6stEoA",
    "code_challenge_method": "S256",
    "nonce": "NtFQWwCtuT-i-GhNuT8R3k1nZH_4cmNFWwWnkhHQnoe74"
  }
}
2020-01-19 15:57:07.977 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 15:57:07.982 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 15:57:07.985 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 15:57:08.050 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****372b"
    }
  ],
  "ActivityId": "0HLSSTVDBRL8S:00000001",
  "TimeStamp": "2020-01-19T14:57:08Z",
  "ProcessId": 7376,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:57:08.055 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "NtFQWwCtuT-i-GhNuT8R3k1nZH_4cmNFWwWnkhHQnoe74",
  "Scope": "openid profile api"
}
2020-01-19 15:57:08.271 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 15:57:08.275 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:57:08.276 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:57:08.280 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:57:08.292 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:57:08.293 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:57:08.295 +01:00 [DBG] Start discovery request
2020-01-19 15:57:08.350 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 15:57:08.351 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:57:08.352 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:57:08.352 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:57:08.353 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:57:08.355 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:57:08.359 +01:00 [DBG] Start key discovery request
2020-01-19 15:57:08.390 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 15:57:08.391 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 15:57:08.392 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 15:57:08.393 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 15:57:08.395 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 15:57:08.396 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 15:57:08.399 +01:00 [DBG] Start token request.
2020-01-19 15:57:08.402 +01:00 [DBG] Start client validation
2020-01-19 15:57:08.404 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 15:57:08.406 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 15:57:08.414 +01:00 [DBG] client id without secret found
2020-01-19 15:57:08.415 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 15:57:08.415 +01:00 [DBG] Secret id found: angular
2020-01-19 15:57:08.415 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 15:57:08.415 +01:00 [DBG] Client validation success
2020-01-19 15:57:08.420 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSTVDBRL8T:00000003",
  "TimeStamp": "2020-01-19T14:57:08Z",
  "ProcessId": 7376,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:57:08.423 +01:00 [DBG] Start token request validation
2020-01-19 15:57:08.427 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 15:57:08.447 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 15:57:08.449 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 15:57:08.449 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 15:57:08.454 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "02f5087290ad18fcc283854fbbeab3a65eb8aa2e42828f6f6ecdd19932d8372b",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "02f5087290ad18fcc283854fbbeab3a65eb8aa2e42828f6f6ecdd19932d8372b",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "xNuFgNrfNxdLbktVmkpiebftBKMU4KYugxruhXRgsn03-",
    "client_id": "angular"
  }
}
2020-01-19 15:57:08.465 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 15:57:08.466 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 15:57:08.474 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 15:57:08.483 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 15:57:08.543 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 15:57:08.544 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 15:57:08.549 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Jhxw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****sGTA"
    }
  ],
  "ActivityId": "0HLSSTVDBRL8T:00000003",
  "TimeStamp": "2020-01-19T14:57:08Z",
  "ProcessId": 7376,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 15:57:08.550 +01:00 [DBG] Token request success.
2020-01-19 15:57:08.744 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 15:57:08.745 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 15:57:08.745 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 15:57:08.746 +01:00 [DBG] Start discovery request
2020-01-19 15:57:08.830 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 15:57:08.831 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 15:57:08.831 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 15:57:08.832 +01:00 [DBG] Start key discovery request
2020-01-19 16:01:05.519 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 16:01:05.520 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 16:01:05.521 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 16:01:05.521 +01:00 [DBG] Start discovery request
2020-01-19 16:03:03.458 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 16:03:03.459 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 16:03:03.460 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 16:03:03.460 +01:00 [DBG] Start discovery request
2020-01-19 16:03:10.562 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 16:03:10.563 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:03:10.564 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:03:10.565 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:03:10.565 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:03:10.566 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 16:03:10.566 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 16:03:10.567 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 16:03:10.567 +01:00 [DBG] Start discovery request
2020-01-19 16:03:10.601 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 16:03:10.602 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:03:10.602 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:03:10.603 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:03:10.603 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:03:10.604 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 16:03:10.605 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 16:03:10.606 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 16:03:10.606 +01:00 [DBG] Start key discovery request
2020-01-19 16:03:10.636 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:03:10.637 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:03:10.638 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 16:03:10.641 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 16:03:10.643 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 16:03:10.643 +01:00 [DBG] Start authorize request
2020-01-19 16:03:10.644 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 16:03:10.644 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 16:03:10.645 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 16:03:10.645 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 16:03:10.646 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "sK_iW7MNchXFednkrM_0zmugzQ0zxEVhoEVyOrNCrAeKP",
  "Nonce": "sK_iW7MNchXFednkrM_0zmugzQ0zxEVhoEVyOrNCrAeKP",
  "SessionId": "d8de219b9d196a0f3bbd9264ebb34617",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "sK_iW7MNchXFednkrM_0zmugzQ0zxEVhoEVyOrNCrAeKP",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "NNrHxrdcYAu-B3LwwI7EFyGpEJKV4zsgckD1rONI0JQ",
    "code_challenge_method": "S256",
    "nonce": "sK_iW7MNchXFednkrM_0zmugzQ0zxEVhoEVyOrNCrAeKP"
  }
}
2020-01-19 16:03:10.648 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 16:03:10.649 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 16:03:10.649 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 16:03:10.660 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****33a9"
    }
  ],
  "ActivityId": "0HLSSTVDBRL92:00000003",
  "TimeStamp": "2020-01-19T15:03:10Z",
  "ProcessId": 7376,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:03:10.668 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "sK_iW7MNchXFednkrM_0zmugzQ0zxEVhoEVyOrNCrAeKP",
  "Scope": "openid profile api"
}
2020-01-19 16:03:10.848 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 16:03:10.849 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:03:10.849 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:03:10.850 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:03:10.850 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:03:10.853 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 16:03:10.855 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 16:03:10.856 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 16:03:10.856 +01:00 [DBG] Start discovery request
2020-01-19 16:03:10.887 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 16:03:10.888 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:03:10.889 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:03:10.890 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:03:10.890 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:03:10.891 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 16:03:10.892 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 16:03:10.893 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 16:03:10.893 +01:00 [DBG] Start key discovery request
2020-01-19 16:03:10.915 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 16:03:10.916 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:03:10.916 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:03:10.917 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:03:10.917 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:03:10.918 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 16:03:10.919 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 16:03:10.919 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 16:03:10.920 +01:00 [DBG] Start token request.
2020-01-19 16:03:10.920 +01:00 [DBG] Start client validation
2020-01-19 16:03:10.920 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 16:03:10.921 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 16:03:10.921 +01:00 [DBG] client id without secret found
2020-01-19 16:03:10.922 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 16:03:10.922 +01:00 [DBG] Secret id found: angular
2020-01-19 16:03:10.922 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 16:03:10.923 +01:00 [DBG] Client validation success
2020-01-19 16:03:10.923 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSTVDBRL92:00000006",
  "TimeStamp": "2020-01-19T15:03:10Z",
  "ProcessId": 7376,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:03:10.924 +01:00 [DBG] Start token request validation
2020-01-19 16:03:10.925 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 16:03:10.933 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 16:03:10.933 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 16:03:10.934 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 16:03:10.934 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "9839b8c535cf960b7e7354da65e3ec259bb4c6eb69f0b0cb3625c28e4d3a33a9",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "9839b8c535cf960b7e7354da65e3ec259bb4c6eb69f0b0cb3625c28e4d3a33a9",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "dF3kcFyQiEfoQWMO7CR8hI4NEhFZ-dlQKaM5tzwK7WmTx",
    "client_id": "angular"
  }
}
2020-01-19 16:03:10.935 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 16:03:10.935 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 16:03:10.935 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 16:03:10.936 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 16:03:10.940 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 16:03:10.940 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 16:03:10.945 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****3ORw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****ICWA"
    }
  ],
  "ActivityId": "0HLSSTVDBRL92:00000006",
  "TimeStamp": "2020-01-19T15:03:10Z",
  "ProcessId": 7376,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:03:10.946 +01:00 [DBG] Token request success.
2020-01-19 16:09:00.992 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-19 16:09:00.992 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-19 16:09:00.993 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-19 16:09:00.993 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 16:09:00.994 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 16:09:00.994 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 16:09:00.995 +01:00 [DBG] Start discovery request
2020-01-19 16:09:11.285 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-19 16:09:11.286 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-19 16:09:11.286 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-19 16:09:11.287 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 16:09:11.287 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 16:09:11.288 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 16:09:11.288 +01:00 [DBG] Start discovery request
2020-01-19 16:09:28.433 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-19 16:09:28.434 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-19 16:09:28.435 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-19 16:09:28.435 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 16:09:28.435 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 16:09:28.436 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 16:09:28.436 +01:00 [DBG] Start discovery request
2020-01-19 16:10:07.692 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:07.694 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:07.695 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 16:10:07.696 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 16:10:07.696 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 16:10:07.697 +01:00 [DBG] Start authorize request
2020-01-19 16:10:07.697 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 16:10:07.697 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 16:10:07.698 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 16:10:07.698 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 16:10:07.699 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "oRwsj7FJNLtfPgRvHzjfgUgQWzFoV9hTmBHCTeJb-qCR9",
  "Nonce": "oRwsj7FJNLtfPgRvHzjfgUgQWzFoV9hTmBHCTeJb-qCR9",
  "SessionId": "d8de219b9d196a0f3bbd9264ebb34617",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "oRwsj7FJNLtfPgRvHzjfgUgQWzFoV9hTmBHCTeJb-qCR9",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "4m3SiNAuDvWG0Qa44sDclfnwRaWVpSi9QDgBCj2BzbA",
    "code_challenge_method": "S256",
    "nonce": "oRwsj7FJNLtfPgRvHzjfgUgQWzFoV9hTmBHCTeJb-qCR9"
  }
}
2020-01-19 16:10:07.700 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 16:10:07.700 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 16:10:07.701 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 16:10:07.708 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****dbce"
    }
  ],
  "ActivityId": "0HLSSTVDBRL94:00000001",
  "TimeStamp": "2020-01-19T15:10:07Z",
  "ProcessId": 7376,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:10:07.709 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "oRwsj7FJNLtfPgRvHzjfgUgQWzFoV9hTmBHCTeJb-qCR9",
  "Scope": "openid profile api"
}
2020-01-19 16:10:07.988 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 16:10:07.992 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:10:07.994 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:10:07.998 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:08.000 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:08.002 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 16:10:08.005 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 16:10:08.015 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 16:10:08.017 +01:00 [DBG] Start discovery request
2020-01-19 16:10:08.079 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 16:10:08.080 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:10:08.081 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:10:08.082 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:08.082 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:08.083 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 16:10:08.084 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 16:10:08.085 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 16:10:08.085 +01:00 [DBG] Start key discovery request
2020-01-19 16:10:08.107 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 16:10:08.108 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:10:08.109 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:10:08.109 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:08.110 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:08.111 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 16:10:08.112 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 16:10:08.112 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 16:10:08.113 +01:00 [DBG] Start token request.
2020-01-19 16:10:08.113 +01:00 [DBG] Start client validation
2020-01-19 16:10:08.114 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 16:10:08.114 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 16:10:08.115 +01:00 [DBG] client id without secret found
2020-01-19 16:10:08.115 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 16:10:08.115 +01:00 [DBG] Secret id found: angular
2020-01-19 16:10:08.115 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 16:10:08.116 +01:00 [DBG] Client validation success
2020-01-19 16:10:08.116 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSTVDBRL94:00000004",
  "TimeStamp": "2020-01-19T15:10:08Z",
  "ProcessId": 7376,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:10:08.116 +01:00 [DBG] Start token request validation
2020-01-19 16:10:08.117 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 16:10:08.124 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 16:10:08.124 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 16:10:08.124 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 16:10:08.125 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "8d6e56f9da225f0f816c2e839fe4ec44190d9cc151607ca1c4eebc8e8a24dbce",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "8d6e56f9da225f0f816c2e839fe4ec44190d9cc151607ca1c4eebc8e8a24dbce",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "PHUpyEir5sNQKUnj4C7CHJY1pdWXdLej9aJAVyVzme84y",
    "client_id": "angular"
  }
}
2020-01-19 16:10:08.126 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 16:10:08.126 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 16:10:08.126 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 16:10:08.127 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 16:10:28.072 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 16:10:28.072 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 16:10:28.075 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****Kx1A"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****SyDQ"
    }
  ],
  "ActivityId": "0HLSSTVDBRL94:00000004",
  "TimeStamp": "2020-01-19T15:10:28Z",
  "ProcessId": 7376,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:10:28.076 +01:00 [DBG] Token request success.
2020-01-19 16:10:40.796 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 16:10:40.797 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 16:10:40.798 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 16:10:40.798 +01:00 [DBG] Start authorize request
2020-01-19 16:10:40.799 +01:00 [DBG] No user present in authorize request
2020-01-19 16:10:40.799 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 16:10:40.800 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 16:10:40.800 +01:00 [DBG] No PKCE used.
2020-01-19 16:10:40.801 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 16:10:40.801 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "d6ea6ec8-b7d3-42f3-b7f1-b376bca97f2f",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "d6ea6ec8-b7d3-42f3-b7f1-b376bca97f2f",
    "client_id": "nodejs"
  }
}
2020-01-19 16:10:40.802 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 16:10:40.965 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 16:10:40.966 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 16:10:40.967 +01:00 [DBG] No PKCE used.
2020-01-19 16:10:40.967 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 16:10:48.236 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 16:10:48.261 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSTVDBRL97:00000004",
  "TimeStamp": "2020-01-19T15:10:48Z",
  "ProcessId": 7376,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:10:48.269 +01:00 [DBG] Augmenting SignInContext
2020-01-19 16:10:48.270 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 16:10:48.271 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 16:10:48.276 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 16:10:48.299 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:48.300 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:48.302 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 16:10:48.303 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 16:10:48.304 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 16:10:48.307 +01:00 [DBG] Start authorize callback request
2020-01-19 16:10:48.311 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 16:10:48.312 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 16:10:48.312 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 16:10:48.313 +01:00 [DBG] No PKCE used.
2020-01-19 16:10:48.313 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 16:10:48.314 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "d6ea6ec8-b7d3-42f3-b7f1-b376bca97f2f",
  "SessionId": "916face0c39bc4feeddf929972c1ac5a",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "d6ea6ec8-b7d3-42f3-b7f1-b376bca97f2f",
    "client_id": "nodejs"
  }
}
2020-01-19 16:10:48.317 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 16:10:48.317 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 16:10:48.317 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 16:10:48.325 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****78cb"
    }
  ],
  "ActivityId": "0HLSSTVDBRL97:00000005",
  "TimeStamp": "2020-01-19T15:10:48Z",
  "ProcessId": 7376,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:10:48.327 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "d6ea6ec8-b7d3-42f3-b7f1-b376bca97f2f",
  "Scope": "openid profile role"
}
2020-01-19 16:10:48.331 +01:00 [DBG] Augmenting SignInContext
2020-01-19 16:10:48.332 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 16:10:48.348 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 16:10:48.350 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 16:10:48.351 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 16:10:48.353 +01:00 [DBG] Start token request.
2020-01-19 16:10:48.354 +01:00 [DBG] Start client validation
2020-01-19 16:10:48.355 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 16:10:48.362 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-19 16:10:48.363 +01:00 [DBG] Secret id found: nodejs
2020-01-19 16:10:48.370 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 16:10:48.370 +01:00 [DBG] Client validation success
2020-01-19 16:10:48.372 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSTVDBRL98:00000001",
  "TimeStamp": "2020-01-19T15:10:48Z",
  "ProcessId": 7376,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 16:10:48.375 +01:00 [DBG] Start token request validation
2020-01-19 16:10:48.376 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 16:10:48.386 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 16:10:48.386 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 16:10:48.388 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "98806c2b7a9723cd315ddf5af734ae45df9dfffd00bdd05c1edc903aa65e78cb",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "98806c2b7a9723cd315ddf5af734ae45df9dfffd00bdd05c1edc903aa65e78cb",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "d6ea6ec8-b7d3-42f3-b7f1-b376bca97f2f"
  }
}
2020-01-19 16:10:48.391 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-19 16:10:48.392 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 16:10:48.392 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-19 16:10:48.393 +01:00 [DBG] Issued claims: []
2020-01-19 16:10:48.398 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-19 16:10:48.400 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via ClaimsProviderIdentityToken
2020-01-19 16:10:48.409 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 16:10:48.414 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****KmVg"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****KM9Q"
    }
  ],
  "ActivityId": "0HLSSTVDBRL98:00000001",
  "TimeStamp": "2020-01-19T15:10:48Z",
  "ProcessId": 7376,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 16:10:48.417 +01:00 [DBG] Token request success.
2020-01-19 16:10:48.426 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 16:10:48.426 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 16:10:48.427 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 16:10:48.428 +01:00 [DBG] Start key discovery request
2020-01-19 16:10:48.459 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-19 16:10:48.460 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-19 16:10:48.461 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-19 16:10:48.464 +01:00 [DBG] Start userinfo request
2020-01-19 16:10:48.466 +01:00 [DBG] Bearer token found in header
2020-01-19 16:10:48.506 +01:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-19 16:10:48.506 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-19 16:10:48.510 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579446648,
    "exp": 1579446673,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579446648,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "role"
    ],
    "amr": "pwd"
  }
}
2020-01-19 16:10:48.512 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-19 16:10:48.514 +01:00 [DBG] Creating userinfo response
2020-01-19 16:10:48.516 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 16:10:48.518 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 16:10:48.519 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at role
2020-01-19 16:10:48.520 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 16:10:48.520 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via UserInfoEndpoint
2020-01-19 16:10:48.521 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 16:10:48.522 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website role
2020-01-19 16:10:48.522 +01:00 [DBG] End userinfo request
2020-01-19 16:10:48.773 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 16:10:48.774 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:10:48.775 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:10:48.776 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:48.777 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:48.777 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 16:10:48.778 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 16:10:48.780 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 16:10:48.780 +01:00 [DBG] Start discovery request
2020-01-19 16:10:48.821 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 16:10:48.822 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:10:48.823 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:10:48.824 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:48.824 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:48.825 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 16:10:48.826 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 16:10:48.826 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 16:10:48.827 +01:00 [DBG] Start key discovery request
2020-01-19 16:10:48.888 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:48.888 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:48.889 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 16:10:48.889 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 16:10:48.890 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 16:10:48.890 +01:00 [DBG] Start authorize request
2020-01-19 16:10:48.891 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 16:10:48.891 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 16:10:48.891 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 16:10:48.892 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 16:10:48.892 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "eNBW8PZ1iE-sjgAiKCsvitQ7ACjdVHAWjdY8du32rh09u",
  "Nonce": "eNBW8PZ1iE-sjgAiKCsvitQ7ACjdVHAWjdY8du32rh09u",
  "SessionId": "916face0c39bc4feeddf929972c1ac5a",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "eNBW8PZ1iE-sjgAiKCsvitQ7ACjdVHAWjdY8du32rh09u",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "HkPHxdPbxZ_mpnRbfQsSHAoa7XBPirPpOjpRsoNwFmc",
    "code_challenge_method": "S256",
    "nonce": "eNBW8PZ1iE-sjgAiKCsvitQ7ACjdVHAWjdY8du32rh09u"
  }
}
2020-01-19 16:10:48.893 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 16:10:48.894 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 16:10:48.894 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 16:10:48.902 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****b768"
    }
  ],
  "ActivityId": "0HLSSTVDBRL97:00000008",
  "TimeStamp": "2020-01-19T15:10:48Z",
  "ProcessId": 7376,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:10:48.904 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "eNBW8PZ1iE-sjgAiKCsvitQ7ACjdVHAWjdY8du32rh09u",
  "Scope": "openid profile api"
}
2020-01-19 16:10:48.904 +01:00 [DBG] Augmenting SignInContext
2020-01-19 16:10:48.905 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 16:10:49.099 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 16:10:49.100 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:10:49.100 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:10:49.101 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:49.102 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:49.102 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 16:10:49.103 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 16:10:49.104 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 16:10:49.104 +01:00 [DBG] Start discovery request
2020-01-19 16:10:49.132 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 16:10:49.133 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:10:49.134 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:10:49.134 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:49.135 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:49.136 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 16:10:49.137 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 16:10:49.137 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 16:10:49.138 +01:00 [DBG] Start key discovery request
2020-01-19 16:10:49.157 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 16:10:49.158 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:10:49.158 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:10:49.159 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:49.159 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:10:49.160 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 16:10:49.160 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 16:10:49.161 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 16:10:49.162 +01:00 [DBG] Start token request.
2020-01-19 16:10:49.162 +01:00 [DBG] Start client validation
2020-01-19 16:10:49.162 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 16:10:49.163 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 16:10:49.163 +01:00 [DBG] client id without secret found
2020-01-19 16:10:49.164 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 16:10:49.164 +01:00 [DBG] Secret id found: angular
2020-01-19 16:10:49.164 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 16:10:49.164 +01:00 [DBG] Client validation success
2020-01-19 16:10:49.165 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSTVDBRL97:0000000B",
  "TimeStamp": "2020-01-19T15:10:49Z",
  "ProcessId": 7376,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:10:49.165 +01:00 [DBG] Start token request validation
2020-01-19 16:10:49.166 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 16:10:49.173 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 16:10:49.173 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 16:10:49.173 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 16:10:49.173 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "4f2be08e6c0e128ef45f677ba6ad903d643ae50b3ab5cf52093febb8396fb768",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "4f2be08e6c0e128ef45f677ba6ad903d643ae50b3ab5cf52093febb8396fb768",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "7T3ipouUqPhDFxfo3QMAB5Lfsb3DhQbNraAsJvNqK5gjy",
    "client_id": "angular"
  }
}
2020-01-19 16:10:49.174 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 16:10:49.174 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 16:10:49.175 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 16:10:49.175 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 16:10:56.710 +01:00 [INF] {
  "Name": "Unhandled Exception",
  "Category": "Error",
  "EventType": "Error",
  "Id": 3000,
  "Details": "Newtonsoft.Json.JsonSerializationException: Error getting value from 'Address' on 'System.Net.IPAddress'. ---> System.Net.Sockets.SocketException: De geprobeerde bewerking wordt niet ondersteund voor het type object waarnaar wordt verwezen\r\n   at System.Net.IPAddress.get_Address()\r\n   at lambda_method(Closure , Object )\r\n   at Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(Object target)\r\n   --- End of inner exception stack trace ---\r\n   at Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(Object target)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(JsonWriter writer, Object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)\r\n   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value, Type objectType)\r\n   at Newtonsoft.Json.JsonConvert.SerializeObjectInternal(Object value, Type type, JsonSerializer jsonSerializer)\r\n   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value, Type type, JsonSerializerSettings settings)\r\n   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value)\r\n   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\\ErazerSSO\\Erazer.IdentityProvider\\Profile\\ProfileService.cs:line 34\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultClaimsService.cs:line 200\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Services\\DefaultTokenService.cs:line 159\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 312\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 133\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\ResponseHandling\\TokenResponseGenerator.cs:line 88\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 98\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Endpoints\\TokenEndpoint.cs:line 70\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\\ballen\\github\\identity\\IdSvr4\\IdentityServer4\\src\\IdentityServer4\\Hosting\\IdentityServerMiddleware.cs:line 54",
  "Message": "Error getting value from 'Address' on 'System.Net.IPAddress'.",
  "ActivityId": "0HLSSTVDBRL97:0000000B",
  "TimeStamp": "2020-01-19T15:10:56Z",
  "ProcessId": 7376,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:10:56.734 +01:00 [FTL] Unhandled exception: Error getting value from 'Address' on 'System.Net.IPAddress'.
Newtonsoft.Json.JsonSerializationException: Error getting value from 'Address' on 'System.Net.IPAddress'. ---> System.Net.Sockets.SocketException: De geprobeerde bewerking wordt niet ondersteund voor het type object waarnaar wordt verwezen
   at System.Net.IPAddress.get_Address()
   at lambda_method(Closure , Object )
   at Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(Object target)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(JsonWriter writer, Object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonConvert.SerializeObjectInternal(Object value, Type type, JsonSerializer jsonSerializer)
   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value)
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 34
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
2020-01-19 16:10:56.821 +01:00 [ERR] An unhandled exception has occurred while executing the request
Newtonsoft.Json.JsonSerializationException: Error getting value from 'Address' on 'System.Net.IPAddress'. ---> System.Net.Sockets.SocketException: De geprobeerde bewerking wordt niet ondersteund voor het type object waarnaar wordt verwezen
   at System.Net.IPAddress.get_Address()
   at lambda_method(Closure , Object )
   at Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(Object target)
   --- End of inner exception stack trace ---
   at Newtonsoft.Json.Serialization.ExpressionValueProvider.GetValue(Object target)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(JsonWriter writer, Object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonConvert.SerializeObjectInternal(Object value, Type type, JsonSerializer jsonSerializer)
   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value)
   at Erazer.IdentityProvider.Profile.ProfileService.<GetProfileDataAsync>d__2.MoveNext() in Y:\ErazerSSO\Erazer.IdentityProvider\Profile\ProfileService.cs:line 34
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Services.DefaultClaimsService.<GetAccessTokenClaimsAsync>d__4.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultClaimsService.cs:line 200
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Services.DefaultTokenService.<CreateAccessTokenAsync>d__8.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Services\DefaultTokenService.cs:line 159
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<CreateAccessTokenAsync>d__14.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 312
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAuthorizationCodeRequestAsync>d__10.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 133
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.ResponseHandling.TokenResponseGenerator.<ProcessAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\ResponseHandling\TokenResponseGenerator.cs:line 88
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessTokenRequestAsync>d__7.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 98
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Endpoints.TokenEndpoint.<ProcessAsync>d__6.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Endpoints\TokenEndpoint.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 54
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at IdentityServer4.Hosting.IdentityServerMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\IdentityServerMiddleware.cs:line 70
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.<Invoke>d__6.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.<Invoke>d__7.MoveNext()
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at IdentityServer4.Hosting.BaseUrlMiddleware.<Invoke>d__3.MoveNext() in C:\ballen\github\identity\IdSvr4\IdentityServer4\src\IdentityServer4\Hosting\BaseUrlMiddleware.cs:line 43
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.ValidateEnd(Task task)
   at System.Runtime.CompilerServices.TaskAwaiter.GetResult()
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.<Invoke>d__7.MoveNext()
2020-01-19 16:13:06.699 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 16:13:06.808 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 16:13:06.811 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 16:13:06.812 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 16:13:06.813 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 16:13:06.814 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 16:13:13.191 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 16:13:13.199 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 16:13:13.200 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 16:13:13.203 +01:00 [DBG] Start authorize request
2020-01-19 16:13:13.216 +01:00 [DBG] No user present in authorize request
2020-01-19 16:13:13.218 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 16:13:13.227 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 16:13:13.229 +01:00 [DBG] No PKCE used.
2020-01-19 16:13:13.248 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 16:13:13.303 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "9574809f-8503-440a-8c93-30a5c926c2b8",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "9574809f-8503-440a-8c93-30a5c926c2b8",
    "client_id": "nodejs"
  }
}
2020-01-19 16:13:13.308 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 16:13:13.486 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 16:13:13.487 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 16:13:13.487 +01:00 [DBG] No PKCE used.
2020-01-19 16:13:13.487 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 16:13:23.090 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 16:13:23.150 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSU8D2IE46:00000004",
  "TimeStamp": "2020-01-19T15:13:23Z",
  "ProcessId": 16808,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:13:23.158 +01:00 [DBG] Augmenting SignInContext
2020-01-19 16:13:23.159 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 16:13:23.159 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 16:13:23.167 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 16:13:23.199 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:13:23.200 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:13:23.201 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 16:13:23.201 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 16:13:23.202 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 16:13:23.204 +01:00 [DBG] Start authorize callback request
2020-01-19 16:13:23.208 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 16:13:23.208 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 16:13:23.208 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 16:13:23.209 +01:00 [DBG] No PKCE used.
2020-01-19 16:13:23.209 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 16:13:23.210 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "9574809f-8503-440a-8c93-30a5c926c2b8",
  "SessionId": "e524b180f61cf8bf1f9b8f93caae901e",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "9574809f-8503-440a-8c93-30a5c926c2b8",
    "client_id": "nodejs"
  }
}
2020-01-19 16:13:23.212 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 16:13:23.216 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 16:13:23.219 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 16:13:23.254 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d3e5"
    }
  ],
  "ActivityId": "0HLSSU8D2IE46:00000005",
  "TimeStamp": "2020-01-19T15:13:23Z",
  "ProcessId": 16808,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:13:23.258 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "9574809f-8503-440a-8c93-30a5c926c2b8",
  "Scope": "openid profile role"
}
2020-01-19 16:13:23.268 +01:00 [DBG] Augmenting SignInContext
2020-01-19 16:13:23.269 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 16:13:23.283 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 16:13:23.287 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 16:13:23.287 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 16:13:23.291 +01:00 [DBG] Start token request.
2020-01-19 16:13:23.293 +01:00 [DBG] Start client validation
2020-01-19 16:13:23.295 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 16:13:23.296 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-19 16:13:23.296 +01:00 [DBG] Secret id found: nodejs
2020-01-19 16:13:23.301 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 16:13:23.302 +01:00 [DBG] Client validation success
2020-01-19 16:13:23.306 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSU8D2IE47:00000001",
  "TimeStamp": "2020-01-19T15:13:23Z",
  "ProcessId": 16808,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 16:13:23.309 +01:00 [DBG] Start token request validation
2020-01-19 16:13:23.313 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 16:13:23.336 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 16:13:23.337 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 16:13:23.343 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "4e1413076cac742aa7b1709d8f3dfccc224351a17b030fc17cf3476e46d6d3e5",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "4e1413076cac742aa7b1709d8f3dfccc224351a17b030fc17cf3476e46d6d3e5",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "9574809f-8503-440a-8c93-30a5c926c2b8"
  }
}
2020-01-19 16:13:23.354 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-19 16:13:23.355 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 16:13:23.365 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-19 16:13:23.368 +01:00 [DBG] Issued claims: []
2020-01-19 16:13:23.421 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-19 16:13:23.423 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via ClaimsProviderIdentityToken
2020-01-19 16:13:23.427 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 16:13:23.432 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****rlgA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****Uo8w"
    }
  ],
  "ActivityId": "0HLSSU8D2IE47:00000001",
  "TimeStamp": "2020-01-19T15:13:23Z",
  "ProcessId": 16808,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 16:13:23.433 +01:00 [DBG] Token request success.
2020-01-19 16:13:23.445 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 16:13:23.446 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 16:13:23.447 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 16:13:23.448 +01:00 [DBG] Start key discovery request
2020-01-19 16:13:23.465 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-19 16:13:23.466 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-19 16:13:23.467 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-19 16:13:23.470 +01:00 [DBG] Start userinfo request
2020-01-19 16:13:23.471 +01:00 [DBG] Bearer token found in header
2020-01-19 16:13:23.510 +01:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-19 16:13:23.511 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-19 16:13:23.516 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579446803,
    "exp": 1579446828,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579446803,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "role"
    ],
    "amr": "pwd"
  }
}
2020-01-19 16:13:23.517 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-19 16:13:23.520 +01:00 [DBG] Creating userinfo response
2020-01-19 16:13:23.522 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 16:13:23.523 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 16:13:23.524 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at role
2020-01-19 16:13:23.525 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 16:13:23.525 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via UserInfoEndpoint
2020-01-19 16:13:23.526 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 16:13:23.526 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website role
2020-01-19 16:13:23.527 +01:00 [DBG] End userinfo request
2020-01-19 16:13:23.793 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 16:13:23.796 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:13:23.797 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:13:23.798 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:13:23.799 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:13:23.800 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 16:13:23.801 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 16:13:23.801 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 16:13:23.804 +01:00 [DBG] Start discovery request
2020-01-19 16:13:23.883 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 16:13:23.884 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:13:23.885 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:13:23.885 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:13:23.886 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:13:23.886 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 16:13:23.887 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 16:13:23.887 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 16:13:23.888 +01:00 [DBG] Start key discovery request
2020-01-19 16:13:23.918 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:13:23.919 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:13:23.920 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 16:13:23.920 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 16:13:23.921 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 16:13:23.922 +01:00 [DBG] Start authorize request
2020-01-19 16:13:23.922 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 16:13:23.922 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 16:13:23.923 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 16:13:23.930 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 16:13:23.931 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "Cm1pG3hRBk16ARknILYqQ58skX4F_BbKkabAbwQQHcHP2",
  "Nonce": "Cm1pG3hRBk16ARknILYqQ58skX4F_BbKkabAbwQQHcHP2",
  "SessionId": "e524b180f61cf8bf1f9b8f93caae901e",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "Cm1pG3hRBk16ARknILYqQ58skX4F_BbKkabAbwQQHcHP2",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "bz2kO5YwHdFJtfhcaZlEXVFFdLAh-Lz0Zi9_fdBoFrg",
    "code_challenge_method": "S256",
    "nonce": "Cm1pG3hRBk16ARknILYqQ58skX4F_BbKkabAbwQQHcHP2"
  }
}
2020-01-19 16:13:23.933 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 16:13:23.933 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 16:13:23.934 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 16:13:23.942 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****c5a8"
    }
  ],
  "ActivityId": "0HLSSU8D2IE46:00000008",
  "TimeStamp": "2020-01-19T15:13:23Z",
  "ProcessId": 16808,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:13:23.955 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "Cm1pG3hRBk16ARknILYqQ58skX4F_BbKkabAbwQQHcHP2",
  "Scope": "openid profile api"
}
2020-01-19 16:13:23.957 +01:00 [DBG] Augmenting SignInContext
2020-01-19 16:13:23.958 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 16:13:24.147 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 16:13:24.149 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:13:24.149 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:13:24.150 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:13:24.151 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:13:24.153 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 16:13:24.166 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 16:13:24.167 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 16:13:24.168 +01:00 [DBG] Start discovery request
2020-01-19 16:13:24.192 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 16:13:24.193 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:13:24.194 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:13:24.194 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:13:24.195 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:13:24.196 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 16:13:24.197 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 16:13:24.198 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 16:13:24.198 +01:00 [DBG] Start key discovery request
2020-01-19 16:13:24.221 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 16:13:24.222 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 16:13:24.222 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 16:13:24.223 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:13:24.223 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 16:13:24.224 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 16:13:24.225 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 16:13:24.225 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 16:13:24.226 +01:00 [DBG] Start token request.
2020-01-19 16:13:24.226 +01:00 [DBG] Start client validation
2020-01-19 16:13:24.226 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 16:13:24.228 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 16:13:24.229 +01:00 [DBG] client id without secret found
2020-01-19 16:13:24.229 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 16:13:24.230 +01:00 [DBG] Secret id found: angular
2020-01-19 16:13:24.230 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 16:13:24.230 +01:00 [DBG] Client validation success
2020-01-19 16:13:24.231 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSU8D2IE46:0000000B",
  "TimeStamp": "2020-01-19T15:13:24Z",
  "ProcessId": 16808,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:13:24.233 +01:00 [DBG] Start token request validation
2020-01-19 16:13:24.233 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 16:13:24.240 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 16:13:24.242 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 16:13:24.242 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 16:13:24.242 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "f2a21fb5523645c3a13a518199414dd4bd65c14c5fbd48fbbb4d3f3cb7b5c5a8",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "f2a21fb5523645c3a13a518199414dd4bd65c14c5fbd48fbbb4d3f3cb7b5c5a8",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "Sg7G_YM93j3WQANJfQXyoq3P6ICkWcsg-3JE63HvrmK6N",
    "client_id": "angular"
  }
}
2020-01-19 16:13:24.243 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 16:13:24.243 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 16:13:24.244 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 16:13:24.244 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 16:13:24.252 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 16:13:24.252 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 16:13:24.256 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****7-PQ"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****fJ8g"
    }
  ],
  "ActivityId": "0HLSSU8D2IE46:0000000B",
  "TimeStamp": "2020-01-19T15:13:24Z",
  "ProcessId": 16808,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 16:13:24.257 +01:00 [DBG] Token request success.
2020-01-19 16:13:24.447 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 16:13:24.448 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 16:13:24.448 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 16:13:24.449 +01:00 [DBG] Start discovery request
2020-01-19 16:13:24.493 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 16:13:24.494 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 16:13:24.494 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 16:13:24.494 +01:00 [DBG] Start key discovery request
2020-01-19 16:13:44.453 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-19 16:13:44.454 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-19 16:13:44.455 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-19 16:13:44.455 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 16:13:44.456 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 16:13:44.456 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 16:13:44.456 +01:00 [DBG] Start discovery request
2020-01-19 17:21:55.390 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 17:21:55.503 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 17:21:55.506 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 17:21:55.507 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 17:21:55.507 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 17:21:55.508 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 17:22:04.595 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:22:04.604 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:22:04.609 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 17:22:04.615 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 17:22:04.616 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 17:22:04.619 +01:00 [DBG] Start authorize request
2020-01-19 17:22:04.625 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 17:22:04.626 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 17:22:04.635 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 17:22:04.636 +01:00 [DBG] No PKCE used.
2020-01-19 17:22:04.656 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 17:22:04.710 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "d042ece7-59a4-428e-af34-46950bbab4fa",
  "SessionId": "e524b180f61cf8bf1f9b8f93caae901e",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "d042ece7-59a4-428e-af34-46950bbab4fa",
    "client_id": "nodejs"
  }
}
2020-01-19 17:22:04.715 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 17:22:04.719 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 17:22:04.721 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 17:22:04.786 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****8595"
    }
  ],
  "ActivityId": "0HLSSVESAI1M3:00000001",
  "TimeStamp": "2020-01-19T16:22:04Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:22:04.790 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "d042ece7-59a4-428e-af34-46950bbab4fa",
  "Scope": "openid profile role"
}
2020-01-19 17:22:04.838 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 17:22:04.841 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 17:22:04.842 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 17:22:04.845 +01:00 [DBG] Start token request.
2020-01-19 17:22:04.847 +01:00 [DBG] Start client validation
2020-01-19 17:22:04.849 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 17:22:04.850 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-19 17:22:04.850 +01:00 [DBG] Secret id found: nodejs
2020-01-19 17:22:04.855 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 17:22:04.855 +01:00 [DBG] Client validation success
2020-01-19 17:22:04.859 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSVESAI1M4:00000001",
  "TimeStamp": "2020-01-19T16:22:04Z",
  "ProcessId": 16724,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 17:22:04.869 +01:00 [DBG] Start token request validation
2020-01-19 17:22:04.873 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 17:22:04.891 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 17:22:04.892 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 17:22:04.898 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "5c75292721f3ccaaeeb26089f506d8cfb96ce8c295521ee925aac6f311718595",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "5c75292721f3ccaaeeb26089f506d8cfb96ce8c295521ee925aac6f311718595",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "d042ece7-59a4-428e-af34-46950bbab4fa"
  }
}
2020-01-19 17:22:04.910 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-19 17:22:04.911 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 17:22:04.916 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-19 17:22:04.919 +01:00 [DBG] Issued claims: []
2020-01-19 17:22:04.980 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-19 17:22:04.982 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via ClaimsProviderIdentityToken
2020-01-19 17:22:04.987 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 17:22:04.993 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****CyjA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****qLLg"
    }
  ],
  "ActivityId": "0HLSSVESAI1M4:00000001",
  "TimeStamp": "2020-01-19T16:22:04Z",
  "ProcessId": 16724,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 17:22:04.995 +01:00 [DBG] Token request success.
2020-01-19 17:22:05.012 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 17:22:05.013 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 17:22:05.014 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 17:22:05.015 +01:00 [DBG] Start key discovery request
2020-01-19 17:22:05.048 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-19 17:22:05.049 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-19 17:22:05.050 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-19 17:22:05.054 +01:00 [DBG] Start userinfo request
2020-01-19 17:22:05.056 +01:00 [DBG] Bearer token found in header
2020-01-19 17:22:05.093 +01:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-19 17:22:05.094 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-19 17:22:05.099 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579450924,
    "exp": 1579450949,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579446803,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "role"
    ],
    "amr": "pwd"
  }
}
2020-01-19 17:22:05.100 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-19 17:22:05.102 +01:00 [DBG] Creating userinfo response
2020-01-19 17:22:05.104 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 17:22:05.105 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 17:22:05.107 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at role
2020-01-19 17:22:05.107 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 17:22:05.107 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via UserInfoEndpoint
2020-01-19 17:22:05.108 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 17:22:05.109 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website role
2020-01-19 17:22:05.110 +01:00 [DBG] End userinfo request
2020-01-19 17:22:05.273 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 17:22:05.276 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:22:05.276 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:22:05.277 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:22:05.278 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:22:05.279 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 17:22:05.280 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 17:22:05.281 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 17:22:05.283 +01:00 [DBG] Start discovery request
2020-01-19 17:22:05.336 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 17:22:05.337 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:22:05.338 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:22:05.340 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:22:05.341 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:22:05.341 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 17:22:05.341 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 17:22:05.343 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 17:22:05.344 +01:00 [DBG] Start key discovery request
2020-01-19 17:22:05.369 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:22:05.370 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:22:05.372 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 17:22:05.373 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 17:22:05.374 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 17:22:05.375 +01:00 [DBG] Start authorize request
2020-01-19 17:22:05.375 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 17:22:05.376 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 17:22:05.376 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 17:22:05.383 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 17:22:05.384 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "MBitm6Lr1oMAZE2YzWhD0haiXzZB_Z60VytqkR29aOsz8",
  "Nonce": "MBitm6Lr1oMAZE2YzWhD0haiXzZB_Z60VytqkR29aOsz8",
  "SessionId": "e524b180f61cf8bf1f9b8f93caae901e",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "MBitm6Lr1oMAZE2YzWhD0haiXzZB_Z60VytqkR29aOsz8",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "xOsDxUL3sJc9iCjepFsLzQGNuVHZfVfzxf-SUGeMKGs",
    "code_challenge_method": "S256",
    "nonce": "MBitm6Lr1oMAZE2YzWhD0haiXzZB_Z60VytqkR29aOsz8"
  }
}
2020-01-19 17:22:05.386 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 17:22:05.387 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 17:22:05.388 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 17:22:05.395 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****108d"
    }
  ],
  "ActivityId": "0HLSSVESAI1M3:00000004",
  "TimeStamp": "2020-01-19T16:22:05Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:22:05.396 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "MBitm6Lr1oMAZE2YzWhD0haiXzZB_Z60VytqkR29aOsz8",
  "Scope": "openid profile api"
}
2020-01-19 17:22:05.551 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 17:22:05.555 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:22:05.556 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:22:05.556 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:22:05.557 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:22:05.559 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 17:22:05.560 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 17:22:05.561 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 17:22:05.562 +01:00 [DBG] Start discovery request
2020-01-19 17:22:05.589 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 17:22:05.591 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:22:05.592 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:22:05.593 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:22:05.594 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:22:05.595 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 17:22:05.596 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 17:22:05.596 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 17:22:05.597 +01:00 [DBG] Start key discovery request
2020-01-19 17:22:05.613 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 17:22:05.614 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:22:05.615 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:22:05.615 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:22:05.616 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:22:05.616 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 17:22:05.617 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 17:22:05.617 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 17:22:05.617 +01:00 [DBG] Start token request.
2020-01-19 17:22:05.618 +01:00 [DBG] Start client validation
2020-01-19 17:22:05.618 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 17:22:05.620 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 17:22:05.620 +01:00 [DBG] client id without secret found
2020-01-19 17:22:05.621 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 17:22:05.621 +01:00 [DBG] Secret id found: angular
2020-01-19 17:22:05.622 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 17:22:05.622 +01:00 [DBG] Client validation success
2020-01-19 17:22:05.623 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSVESAI1M3:00000007",
  "TimeStamp": "2020-01-19T16:22:05Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:22:05.625 +01:00 [DBG] Start token request validation
2020-01-19 17:22:05.625 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 17:22:05.632 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 17:22:05.634 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 17:22:05.634 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 17:22:05.634 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "0fdfb0caacf352599bcb7a9d8d37eec9df8b8f5e3d745f2b1f1c92a844be108d",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "0fdfb0caacf352599bcb7a9d8d37eec9df8b8f5e3d745f2b1f1c92a844be108d",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "vBcvN0fRDWsuRMPdgOE9gyixuAShGdtpAJB8mvZs6o6cv",
    "client_id": "angular"
  }
}
2020-01-19 17:22:05.635 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 17:22:05.636 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 17:22:05.636 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 17:22:05.636 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 17:22:05.640 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 17:22:05.641 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 17:22:05.644 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****A7rA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****2lSQ"
    }
  ],
  "ActivityId": "0HLSSVESAI1M3:00000007",
  "TimeStamp": "2020-01-19T16:22:05Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:22:05.646 +01:00 [DBG] Token request success.
2020-01-19 17:22:05.833 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 17:22:05.834 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 17:22:05.834 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 17:22:05.835 +01:00 [DBG] Start discovery request
2020-01-19 17:22:05.880 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 17:22:05.881 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 17:22:05.881 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 17:22:05.882 +01:00 [DBG] Start key discovery request
2020-01-19 17:22:24.915 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-19 17:22:24.916 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-19 17:22:24.916 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-19 17:22:24.916 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 17:22:24.917 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 17:22:24.917 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 17:22:24.918 +01:00 [DBG] Start discovery request
2020-01-19 17:23:26.645 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 17:23:26.646 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 17:23:26.646 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 17:23:26.647 +01:00 [DBG] Start authorize request
2020-01-19 17:23:26.647 +01:00 [DBG] No user present in authorize request
2020-01-19 17:23:26.648 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 17:23:26.648 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 17:23:26.649 +01:00 [DBG] No PKCE used.
2020-01-19 17:23:26.649 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 17:23:26.650 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "d4d6d7cd-e0c8-44c4-be53-878665661925",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "d4d6d7cd-e0c8-44c4-be53-878665661925",
    "client_id": "nodejs"
  }
}
2020-01-19 17:23:26.652 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 17:23:26.807 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 17:23:26.808 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 17:23:26.808 +01:00 [DBG] No PKCE used.
2020-01-19 17:23:26.810 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 17:23:37.840 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 17:23:37.871 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSVESAI1MB:00000004",
  "TimeStamp": "2020-01-19T16:23:37Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:23:37.878 +01:00 [DBG] Augmenting SignInContext
2020-01-19 17:23:37.880 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 17:23:37.880 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 17:23:37.886 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 17:23:37.907 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:23:37.908 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:23:37.908 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 17:23:37.909 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 17:23:37.910 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 17:23:37.913 +01:00 [DBG] Start authorize callback request
2020-01-19 17:23:37.917 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 17:23:37.917 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 17:23:37.917 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 17:23:37.918 +01:00 [DBG] No PKCE used.
2020-01-19 17:23:37.918 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 17:23:37.919 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "AllowedRedirectUris": [
    "http://localhost:8888/auth/signin-oidc"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile role",
  "State": "d4d6d7cd-e0c8-44c4-be53-878665661925",
  "SessionId": "7f12428ae8595ae4d4fdf39a7063c7b2",
  "Raw": {
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "scope": "openid profile role",
    "response_type": "code",
    "state": "d4d6d7cd-e0c8-44c4-be53-878665661925",
    "client_id": "nodejs"
  }
}
2020-01-19 17:23:37.919 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 17:23:37.920 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 17:23:37.920 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 17:23:37.928 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****7647"
    }
  ],
  "ActivityId": "0HLSSVESAI1MB:00000005",
  "TimeStamp": "2020-01-19T16:23:37Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:23:37.929 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "nodejs",
  "RedirectUri": "http://localhost:8888/auth/signin-oidc",
  "State": "d4d6d7cd-e0c8-44c4-be53-878665661925",
  "Scope": "openid profile role"
}
2020-01-19 17:23:37.932 +01:00 [DBG] Augmenting SignInContext
2020-01-19 17:23:37.932 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 17:23:37.947 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 17:23:37.948 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 17:23:37.948 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 17:23:37.949 +01:00 [DBG] Start token request.
2020-01-19 17:23:37.949 +01:00 [DBG] Start client validation
2020-01-19 17:23:37.949 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 17:23:37.954 +01:00 [DBG] Parser found secret: BasicAuthenticationSecretParser
2020-01-19 17:23:37.954 +01:00 [DBG] Secret id found: nodejs
2020-01-19 17:23:37.955 +01:00 [DBG] Secret validator success: HashedSharedSecretValidator
2020-01-19 17:23:37.955 +01:00 [DBG] Client validation success
2020-01-19 17:23:37.956 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "nodejs",
  "AuthenticationMethod": "SharedSecret",
  "ActivityId": "0HLSSVESAI1MC:00000001",
  "TimeStamp": "2020-01-19T16:23:37Z",
  "ProcessId": 16724,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 17:23:37.957 +01:00 [DBG] Start token request validation
2020-01-19 17:23:37.957 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 17:23:37.964 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 17:23:37.965 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 17:23:37.965 +01:00 [INF] Token request validation success
{
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "GrantType": "authorization_code",
  "AuthorizationCode": "d7ca7757037d72c05b7665467e6bd71c58f929be1a7202863d0b04e6f7827647",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "d7ca7757037d72c05b7665467e6bd71c58f929be1a7202863d0b04e6f7827647",
    "redirect_uri": "http://localhost:8888/auth/signin-oidc",
    "state": "d4d6d7cd-e0c8-44c4-be53-878665661925"
  }
}
2020-01-19 17:23:37.966 +01:00 [DBG] Getting claims for access token for client: nodejs
2020-01-19 17:23:37.966 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 17:23:37.967 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types [] via ClaimsProviderAccessToken
2020-01-19 17:23:37.967 +01:00 [DBG] Issued claims: []
2020-01-19 17:23:37.970 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: nodejs
2020-01-19 17:23:37.971 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via ClaimsProviderIdentityToken
2020-01-19 17:23:37.972 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 17:23:37.976 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "nodejs",
  "ClientName": "ErazerSSO nodejs",
  "Endpoint": "Token",
  "Scopes": "openid profile role",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****y24w"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****hw2Q"
    }
  ],
  "ActivityId": "0HLSSVESAI1MC:00000001",
  "TimeStamp": "2020-01-19T16:23:37Z",
  "ProcessId": 16724,
  "LocalIpAddress": "127.0.0.1:5000",
  "RemoteIpAddress": "127.0.0.1"
}
2020-01-19 17:23:37.977 +01:00 [DBG] Token request success.
2020-01-19 17:23:37.982 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 17:23:37.983 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 17:23:37.983 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 17:23:37.984 +01:00 [DBG] Start key discovery request
2020-01-19 17:23:37.989 +01:00 [DBG] Request path /connect/userinfo matched to endpoint type Userinfo
2020-01-19 17:23:37.992 +01:00 [DBG] Endpoint enabled: Userinfo, successfully created handler: IdentityServer4.Endpoints.UserInfoEndpoint
2020-01-19 17:23:37.996 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.UserInfoEndpoint for /connect/userinfo
2020-01-19 17:23:37.997 +01:00 [DBG] Start userinfo request
2020-01-19 17:23:37.997 +01:00 [DBG] Bearer token found in header
2020-01-19 17:23:38.000 +01:00 [DBG] IsActive called from: AccessTokenValidation
2020-01-19 17:23:38.000 +01:00 [DBG] Calling into custom token validator: IdentityServer4.Validation.DefaultCustomTokenValidator
2020-01-19 17:23:38.001 +01:00 [DBG] Token validation success
{
  "ValidateLifetime": true,
  "AccessTokenType": "Jwt",
  "ExpectedScope": "openid",
  "Claims": {
    "nbf": 1579451017,
    "exp": 1579451042,
    "iss": "http://localhost:5000",
    "aud": "http://localhost:5000/resources",
    "client_id": "nodejs",
    "sub": "88421113",
    "auth_time": 1579451017,
    "idp": "local",
    "scope": [
      "openid",
      "profile",
      "role"
    ],
    "amr": "pwd"
  }
}
2020-01-19 17:23:38.001 +01:00 [DBG] IsActive called from: UserInfoRequestValidation
2020-01-19 17:23:38.002 +01:00 [DBG] Creating userinfo response
2020-01-19 17:23:38.002 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 17:23:38.002 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 17:23:38.002 +01:00 [DBG] Requested claim types: sub name family_name given_name middle_name nickname preferred_username profile picture website gender birthdate zoneinfo locale updated_at role
2020-01-19 17:23:38.003 +01:00 [DBG] Scopes in access token: openid profile role
2020-01-19 17:23:38.003 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO nodejs with claim types ["sub","name","family_name","given_name","middle_name","nickname","preferred_username","profile","picture","website","gender","birthdate","zoneinfo","locale","updated_at","role"] via UserInfoEndpoint
2020-01-19 17:23:38.005 +01:00 [DBG] Issued claims: ["name","given_name","family_name","website","role"]
2020-01-19 17:23:38.006 +01:00 [INF] Profile service returned to the following claim types: name given_name family_name website role
2020-01-19 17:23:38.006 +01:00 [DBG] End userinfo request
2020-01-19 17:23:38.189 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 17:23:38.190 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:23:38.191 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:23:38.192 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:23:38.192 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:23:38.193 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 17:23:38.194 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 17:23:38.194 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 17:23:38.195 +01:00 [DBG] Start discovery request
2020-01-19 17:23:38.231 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 17:23:38.232 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:23:38.232 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:23:38.233 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:23:38.233 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:23:38.234 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 17:23:38.234 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 17:23:38.234 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 17:23:38.235 +01:00 [DBG] Start key discovery request
2020-01-19 17:23:45.444 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:23:45.445 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:23:45.446 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 17:23:45.446 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 17:23:45.447 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 17:23:45.447 +01:00 [DBG] Start authorize request
2020-01-19 17:23:45.448 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 17:23:45.448 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 17:23:45.448 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 17:23:45.448 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 17:23:45.449 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "e8nODduwrJo6LXWoYpcd7Lb5k0YZM4ZyTaWEOjqlz6MN_",
  "Nonce": "e8nODduwrJo6LXWoYpcd7Lb5k0YZM4ZyTaWEOjqlz6MN_",
  "SessionId": "7f12428ae8595ae4d4fdf39a7063c7b2",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "e8nODduwrJo6LXWoYpcd7Lb5k0YZM4ZyTaWEOjqlz6MN_",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "07deftr3h4wOJjV0kQoXNxIWsip8yjm0wmllg_FEWMY",
    "code_challenge_method": "S256",
    "nonce": "e8nODduwrJo6LXWoYpcd7Lb5k0YZM4ZyTaWEOjqlz6MN_"
  }
}
2020-01-19 17:23:45.450 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 17:23:45.451 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 17:23:45.451 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 17:23:45.460 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****d168"
    }
  ],
  "ActivityId": "0HLSSVESAI1MB:00000008",
  "TimeStamp": "2020-01-19T16:23:45Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:23:45.462 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "e8nODduwrJo6LXWoYpcd7Lb5k0YZM4ZyTaWEOjqlz6MN_",
  "Scope": "openid profile api"
}
2020-01-19 17:23:45.463 +01:00 [DBG] Augmenting SignInContext
2020-01-19 17:23:45.463 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 17:23:45.651 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 17:23:45.652 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:23:45.653 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:23:45.654 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:23:45.654 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:23:45.655 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 17:23:45.656 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 17:23:45.657 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 17:23:45.658 +01:00 [DBG] Start discovery request
2020-01-19 17:23:45.698 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 17:23:45.698 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:23:45.699 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:23:45.700 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:23:45.700 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:23:45.701 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 17:23:45.702 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 17:23:45.702 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 17:23:45.703 +01:00 [DBG] Start key discovery request
2020-01-19 17:23:45.726 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 17:23:45.727 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:23:45.727 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:23:45.728 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:23:45.728 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:23:45.729 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 17:23:45.729 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 17:23:45.730 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 17:23:45.730 +01:00 [DBG] Start token request.
2020-01-19 17:23:45.730 +01:00 [DBG] Start client validation
2020-01-19 17:23:45.730 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 17:23:45.731 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 17:23:45.731 +01:00 [DBG] client id without secret found
2020-01-19 17:23:45.731 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 17:23:45.732 +01:00 [DBG] Secret id found: angular
2020-01-19 17:23:45.732 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 17:23:45.732 +01:00 [DBG] Client validation success
2020-01-19 17:23:45.733 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSVESAI1MB:0000000B",
  "TimeStamp": "2020-01-19T16:23:45Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:23:45.733 +01:00 [DBG] Start token request validation
2020-01-19 17:23:45.734 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 17:23:45.741 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 17:23:45.741 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 17:23:45.742 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 17:23:45.742 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "0157752823ee9d14bec6af18c0cab0671f095af2e4366887a679fd2609efd168",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "0157752823ee9d14bec6af18c0cab0671f095af2e4366887a679fd2609efd168",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "Z44GVIXLTo0s_ui3jEGcVZ8gq7S79cT38NHQEPcx8dikV",
    "client_id": "angular"
  }
}
2020-01-19 17:23:45.743 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 17:23:45.743 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 17:23:45.743 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 17:23:45.744 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 17:23:45.753 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 17:23:45.754 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 17:23:45.758 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****9uqA"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****dZIQ"
    }
  ],
  "ActivityId": "0HLSSVESAI1MB:0000000B",
  "TimeStamp": "2020-01-19T16:23:45Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:23:45.760 +01:00 [DBG] Token request success.
2020-01-19 17:24:29.137 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: https://jwt.io
2020-01-19 17:24:29.138 +01:00 [DBG] Client list checked and origin: https://jwt.io is not allowed
2020-01-19 17:24:29.138 +01:00 [WRN] CorsPolicyService did not allow origin: https://jwt.io
2020-01-19 17:24:29.138 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 17:24:29.139 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 17:24:29.139 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 17:24:29.140 +01:00 [DBG] Start discovery request
2020-01-19 17:27:14.972 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:27:14.973 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:27:14.974 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 17:27:14.974 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 17:27:14.975 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 17:27:14.976 +01:00 [DBG] Start authorize request
2020-01-19 17:27:14.977 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 17:27:14.977 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 17:27:14.978 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 17:27:14.978 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 17:27:14.979 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "kFehOZLrthSQvR6oA38otHR4-FH7AtX-Xh84NV5OKJPm0",
  "Nonce": "kFehOZLrthSQvR6oA38otHR4-FH7AtX-Xh84NV5OKJPm0",
  "SessionId": "7f12428ae8595ae4d4fdf39a7063c7b2",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "kFehOZLrthSQvR6oA38otHR4-FH7AtX-Xh84NV5OKJPm0",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "M3Wi8JBzYbfuSwQy7zEfwn9qYq2Tx3ivZA-OCbFvzvI",
    "code_challenge_method": "S256",
    "nonce": "kFehOZLrthSQvR6oA38otHR4-FH7AtX-Xh84NV5OKJPm0"
  }
}
2020-01-19 17:27:14.981 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 17:27:14.981 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 17:27:14.982 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 17:27:14.990 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****8bac"
    }
  ],
  "ActivityId": "0HLSSVESAI1MB:0000000C",
  "TimeStamp": "2020-01-19T16:27:14Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:27:14.993 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "kFehOZLrthSQvR6oA38otHR4-FH7AtX-Xh84NV5OKJPm0",
  "Scope": "openid profile api"
}
2020-01-19 17:27:15.211 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 17:27:15.215 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:27:15.217 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:27:15.218 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:27:15.219 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:27:15.221 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 17:27:15.225 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 17:27:15.228 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 17:27:15.230 +01:00 [DBG] Start discovery request
2020-01-19 17:27:15.289 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 17:27:15.292 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:27:15.294 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:27:15.295 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:27:15.298 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:27:15.301 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 17:27:15.303 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 17:27:15.305 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 17:27:15.308 +01:00 [DBG] Start key discovery request
2020-01-19 17:27:15.343 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 17:27:15.346 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:27:15.349 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:27:15.353 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:27:15.358 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:27:15.360 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 17:27:15.364 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 17:27:15.367 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 17:27:15.371 +01:00 [DBG] Start token request.
2020-01-19 17:27:15.376 +01:00 [DBG] Start client validation
2020-01-19 17:27:15.378 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 17:27:15.379 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 17:27:15.380 +01:00 [DBG] client id without secret found
2020-01-19 17:27:15.383 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 17:27:15.384 +01:00 [DBG] Secret id found: angular
2020-01-19 17:27:15.386 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 17:27:15.388 +01:00 [DBG] Client validation success
2020-01-19 17:27:15.389 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSVESAI1MB:0000000F",
  "TimeStamp": "2020-01-19T16:27:15Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:27:15.393 +01:00 [DBG] Start token request validation
2020-01-19 17:27:15.394 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 17:27:15.406 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 17:27:15.407 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 17:27:15.408 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 17:27:15.409 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "e1bf53473ca20ac72397bb465c5777c6c6057144688488ca7ff889ba3dac8bac",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "e1bf53473ca20ac72397bb465c5777c6c6057144688488ca7ff889ba3dac8bac",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "HE3Wpm02NN78h1lNzyn1VGtbkmXYdP4uJwVgNSg7RN83n",
    "client_id": "angular"
  }
}
2020-01-19 17:27:15.412 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 17:27:15.414 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 17:27:15.415 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 17:27:15.418 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 17:27:15.425 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 17:27:15.432 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 17:27:15.436 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****3btw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****OH8A"
    }
  ],
  "ActivityId": "0HLSSVESAI1MB:0000000F",
  "TimeStamp": "2020-01-19T16:27:15Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:27:15.443 +01:00 [DBG] Token request success.
2020-01-19 17:28:30.269 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:30.270 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:30.517 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:30.517 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:35.050 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:35.051 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:37.335 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:37.336 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:37.529 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:37.532 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:37.532 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:37.533 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:37.533 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:37.535 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:37.540 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:37.543 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:37.564 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:37.566 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:37.631 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:37.633 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:39.830 +01:00 [DBG] CORS request made for path: /Account/Logout from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 17:28:39.831 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:39.832 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:28:39.850 +01:00 [INF] AuthenticationScheme: idsrv signed out.
2020-01-19 17:28:39.856 +01:00 [INF] {
  "Name": "User Logout Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1002,
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "ActivityId": "0HLSSVESAI1MH:00000004",
  "TimeStamp": "2020-01-19T16:28:39Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:28:40.085 +01:00 [DBG] Request path /connect/endsession/callback matched to endpoint type Endsession
2020-01-19 17:28:40.106 +01:00 [DBG] Endpoint enabled: Endsession, successfully created handler: IdentityServer4.Endpoints.EndSessionCallbackEndpoint
2020-01-19 17:28:40.107 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.EndSessionCallbackEndpoint for /connect/endsession/callback
2020-01-19 17:28:40.110 +01:00 [DBG] Processing signout callback request
2020-01-19 17:28:40.125 +01:00 [DBG] No client front-channel logout URLs
2020-01-19 17:28:40.126 +01:00 [DBG] No client back-channel logout URLs
2020-01-19 17:28:40.128 +01:00 [INF] Successful signout callback.
2020-01-19 17:28:40.128 +01:00 [DBG] No client front-channel iframe urls
2020-01-19 17:28:40.129 +01:00 [DBG] No client back-channel iframe urls
2020-01-19 17:29:05.679 +01:00 [DBG] Request path /connect/authorize matched to endpoint type Authorize
2020-01-19 17:29:05.680 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeEndpoint
2020-01-19 17:29:05.681 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeEndpoint for /connect/authorize
2020-01-19 17:29:05.682 +01:00 [DBG] Start authorize request
2020-01-19 17:29:05.682 +01:00 [DBG] No user present in authorize request
2020-01-19 17:29:05.682 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 17:29:05.683 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 17:29:05.683 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 17:29:05.684 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "anonymous",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "nURn3rwp0nYBQx9P9qPRzTypIzIKIC8-6XnBMFiseyYmH",
  "Nonce": "nURn3rwp0nYBQx9P9qPRzTypIzIKIC8-6XnBMFiseyYmH",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "nURn3rwp0nYBQx9P9qPRzTypIzIKIC8-6XnBMFiseyYmH",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "TKh-o_gyTncv5UV2a-gc_yWgKwuMLTaY9YtYywCeH1I",
    "code_challenge_method": "S256",
    "nonce": "nURn3rwp0nYBQx9P9qPRzTypIzIKIC8-6XnBMFiseyYmH"
  }
}
2020-01-19 17:29:05.685 +01:00 [INF] Showing login: User is not authenticated
2020-01-19 17:29:05.698 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 17:29:05.698 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 17:29:05.699 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 17:29:54.265 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 17:29:54.268 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLSSVESAI1MH:00000009",
  "TimeStamp": "2020-01-19T16:29:54Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:29:54.272 +01:00 [DBG] Augmenting SignInContext
2020-01-19 17:29:54.273 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 17:29:54.273 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 17:29:54.274 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 17:29:54.298 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:54.299 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:54.299 +01:00 [DBG] Request path /connect/authorize/callback matched to endpoint type Authorize
2020-01-19 17:29:54.300 +01:00 [DBG] Endpoint enabled: Authorize, successfully created handler: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint
2020-01-19 17:29:54.301 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.AuthorizeCallbackEndpoint for /connect/authorize/callback
2020-01-19 17:29:54.301 +01:00 [DBG] Start authorize callback request
2020-01-19 17:29:54.302 +01:00 [DBG] User in authorize request: 88421113
2020-01-19 17:29:54.302 +01:00 [DBG] Start authorize request protocol validation
2020-01-19 17:29:54.302 +01:00 [DBG] Checking for PKCE parameters
2020-01-19 17:29:54.303 +01:00 [DBG] Calling into custom validator: IdentityServer4.Validation.DefaultCustomAuthorizeRequestValidator
2020-01-19 17:29:54.303 +01:00 [INF] ValidatedAuthorizeRequest
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "AllowedRedirectUris": [
    "http://localhost:8888/portal/index.html"
  ],
  "SubjectId": "88421113",
  "ResponseType": "code",
  "ResponseMode": "query",
  "GrantType": "authorization_code",
  "RequestedScopes": "openid profile api",
  "State": "nURn3rwp0nYBQx9P9qPRzTypIzIKIC8-6XnBMFiseyYmH",
  "Nonce": "nURn3rwp0nYBQx9P9qPRzTypIzIKIC8-6XnBMFiseyYmH",
  "SessionId": "eb77f1c68c185945d72385767d8a2e64",
  "Raw": {
    "response_type": "code",
    "client_id": "angular",
    "state": "nURn3rwp0nYBQx9P9qPRzTypIzIKIC8-6XnBMFiseyYmH",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "scope": "openid profile api",
    "code_challenge": "TKh-o_gyTncv5UV2a-gc_yWgKwuMLTaY9YtYywCeH1I",
    "code_challenge_method": "S256",
    "nonce": "nURn3rwp0nYBQx9P9qPRzTypIzIKIC8-6XnBMFiseyYmH"
  }
}
2020-01-19 17:29:54.304 +01:00 [DBG] IsActive called from: AuthorizeEndpoint
2020-01-19 17:29:54.305 +01:00 [DBG] Client is configured to not require consent, no consent is required
2020-01-19 17:29:54.305 +01:00 [DBG] Creating Authorization Code Flow response.
2020-01-19 17:29:54.314 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "Endpoint": "Authorize",
  "SubjectId": "88421113",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "code",
      "TokenValue": "****4bba"
    }
  ],
  "ActivityId": "0HLSSVESAI1MH:0000000A",
  "TimeStamp": "2020-01-19T16:29:54Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:29:54.327 +01:00 [INF] Authorize endpoint response
{
  "SubjectId": "88421113",
  "ClientId": "angular",
  "RedirectUri": "http://localhost:8888/portal/index.html",
  "State": "nURn3rwp0nYBQx9P9qPRzTypIzIKIC8-6XnBMFiseyYmH",
  "Scope": "openid profile api"
}
2020-01-19 17:29:54.328 +01:00 [DBG] Augmenting SignInContext
2020-01-19 17:29:54.329 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 17:29:54.509 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration from origin: http://localhost:8888
2020-01-19 17:29:54.510 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:29:54.511 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:29:54.512 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:54.513 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:54.513 +01:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2020-01-19 17:29:54.514 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2020-01-19 17:29:54.514 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2020-01-19 17:29:54.515 +01:00 [DBG] Start discovery request
2020-01-19 17:29:54.560 +01:00 [DBG] CORS request made for path: /.well-known/openid-configuration/jwks from origin: http://localhost:8888
2020-01-19 17:29:54.561 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:29:54.562 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:29:54.563 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:54.565 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:54.566 +01:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2020-01-19 17:29:54.567 +01:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2020-01-19 17:29:54.568 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2020-01-19 17:29:54.570 +01:00 [DBG] Start key discovery request
2020-01-19 17:29:54.591 +01:00 [DBG] CORS request made for path: /connect/token from origin: http://localhost:8888
2020-01-19 17:29:54.592 +01:00 [DBG] Client list checked and origin: http://localhost:8888 is not allowed
2020-01-19 17:29:54.592 +01:00 [WRN] CorsPolicyService did not allow origin: http://localhost:8888
2020-01-19 17:29:54.593 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:54.594 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:54.595 +01:00 [DBG] Request path /connect/token matched to endpoint type Token
2020-01-19 17:29:54.595 +01:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2020-01-19 17:29:54.596 +01:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2020-01-19 17:29:54.596 +01:00 [DBG] Start token request.
2020-01-19 17:29:54.597 +01:00 [DBG] Start client validation
2020-01-19 17:29:54.597 +01:00 [DBG] Start parsing Basic Authentication secret
2020-01-19 17:29:54.597 +01:00 [DBG] Start parsing for secret in post body
2020-01-19 17:29:54.598 +01:00 [DBG] client id without secret found
2020-01-19 17:29:54.598 +01:00 [DBG] Parser found secret: PostBodySecretParser
2020-01-19 17:29:54.598 +01:00 [DBG] Secret id found: angular
2020-01-19 17:29:54.598 +01:00 [DBG] Public Client - skipping secret validation success
2020-01-19 17:29:54.602 +01:00 [DBG] Client validation success
2020-01-19 17:29:54.603 +01:00 [INF] {
  "Name": "Client Authentication Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1010,
  "ClientId": "angular",
  "AuthenticationMethod": "NoSecret",
  "ActivityId": "0HLSSVESAI1MH:0000000D",
  "TimeStamp": "2020-01-19T16:29:54Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:29:54.604 +01:00 [DBG] Start token request validation
2020-01-19 17:29:54.604 +01:00 [DBG] Start validation of authorization code token request
2020-01-19 17:29:54.614 +01:00 [DBG] Client required a proof key for code exchange. Starting PKCE validation
2020-01-19 17:29:54.614 +01:00 [DBG] IsActive called from: AuthorizationCodeValidation
2020-01-19 17:29:54.614 +01:00 [DBG] Validation of authorization code token request success
2020-01-19 17:29:54.615 +01:00 [INF] Token request validation success
{
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "GrantType": "authorization_code",
  "AuthorizationCode": "313335d030d1b9575c4c908561b218cd03fe55bfe5a120074b37a0d583784bba",
  "Raw": {
    "grant_type": "authorization_code",
    "code": "313335d030d1b9575c4c908561b218cd03fe55bfe5a120074b37a0d583784bba",
    "redirect_uri": "http://localhost:8888/portal/index.html",
    "code_verifier": "rqqg5BpKegv5_XGs4y0KNbitva9a9IwfLZvJToyeJmoMK",
    "client_id": "angular"
  }
}
2020-01-19 17:29:54.616 +01:00 [DBG] Getting claims for access token for client: angular
2020-01-19 17:29:54.616 +01:00 [DBG] Getting claims for access token for subject: 88421113
2020-01-19 17:29:54.616 +01:00 [DBG] Get profile called for subject 88421113 from client ErazerSSO Angular with claim types ["role","session"] via ClaimsProviderAccessToken
2020-01-19 17:29:54.617 +01:00 [DBG] Issued claims: ["role"]
2020-01-19 17:29:54.620 +01:00 [DBG] Getting claims for identity token for subject: 88421113 and client: angular
2020-01-19 17:29:54.620 +01:00 [DBG] In addition to an id_token, an access_token was requested. No claims other than sub are included in the id_token. To obtain more user claims, either use the user info endpoint or set AlwaysIncludeUserClaimsInIdToken on the client configuration.
2020-01-19 17:29:54.624 +01:00 [INF] {
  "Name": "Token Issued Success",
  "Category": "Token",
  "EventType": "Success",
  "Id": 2000,
  "ClientId": "angular",
  "ClientName": "ErazerSSO Angular",
  "Endpoint": "Token",
  "Scopes": "openid profile api",
  "GrantType": "authorization_code",
  "Tokens": [
    {
      "TokenType": "id_token",
      "TokenValue": "****eoQw"
    },
    {
      "TokenType": "access_token",
      "TokenValue": "****6xDw"
    }
  ],
  "ActivityId": "0HLSSVESAI1MH:0000000D",
  "TimeStamp": "2020-01-19T16:29:54Z",
  "ProcessId": 16724,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 17:29:54.625 +01:00 [DBG] Token request success.
2020-01-19 17:29:56.775 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.775 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.804 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.804 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.804 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.805 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.807 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.809 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.813 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.842 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.842 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.843 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.865 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.868 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.913 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:56.914 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:59.906 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:29:59.907 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:00.137 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:00.137 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:00.137 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:00.138 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:00.138 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:00.139 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:00.140 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:00.146 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:00.167 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:00.168 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:00.230 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:00.231 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.761 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.762 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.800 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.800 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.800 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.800 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.801 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.804 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.804 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.805 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.824 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.825 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.876 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.878 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.913 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.914 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.935 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:01.939 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:03.922 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:03.924 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:03.960 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:03.960 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:03.961 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:03.961 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:03.962 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:03.962 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:03.967 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:03.973 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:03.990 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:03.993 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:04.050 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:04.052 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:04.084 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:04.086 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:04.132 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:04.133 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.580 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.581 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.614 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.615 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.615 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.616 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.616 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.617 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.620 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.629 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.640 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.641 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.687 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.689 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.747 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.748 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.771 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 17:30:12.772 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 21:00:03.403 +01:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2020-01-19 21:00:03.499 +01:00 [DBG] Using idsrv as default scheme for authentication
2020-01-19 21:00:03.504 +01:00 [DBG] Using idsrv as default scheme for sign-in
2020-01-19 21:00:03.504 +01:00 [DBG] Using idsrv as default scheme for sign-out
2020-01-19 21:00:03.505 +01:00 [DBG] Using idsrv as default scheme for challenge
2020-01-19 21:00:03.505 +01:00 [DBG] Using idsrv as default scheme for forbid
2020-01-19 21:00:30.350 +01:00 [INF] AuthenticationScheme: idsrv was challenged.
2020-01-19 21:00:36.223 +01:00 [DBG] CORS request made for path: /account/login from origin: null but was ignored because path was not for an allowed IdentityServer CORS endpoint
2020-01-19 21:00:36.316 +01:00 [INF] {
  "Name": "User Login Success",
  "Category": "Authentication",
  "EventType": "Success",
  "Id": 1000,
  "Username": "bob",
  "SubjectId": "88421113",
  "DisplayName": "bob",
  "Endpoint": "UI",
  "ActivityId": "0HLST38PJAMRQ:00000004",
  "TimeStamp": "2020-01-19T20:00:36Z",
  "ProcessId": 6604,
  "LocalIpAddress": "::1:5000",
  "RemoteIpAddress": "::1"
}
2020-01-19 21:00:36.324 +01:00 [DBG] Augmenting SignInContext
2020-01-19 21:00:36.326 +01:00 [DBG] Adding idp claim with value: local
2020-01-19 21:00:36.326 +01:00 [DBG] Adding amr claim with value: pwd
2020-01-19 21:00:36.334 +01:00 [INF] AuthenticationScheme: idsrv signed in.
2020-01-19 21:00:36.355 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 21:00:36.356 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 21:01:36.673 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
2020-01-19 21:02:06.811 +01:00 [INF] AuthenticationScheme: idsrv was successfully authenticated.
